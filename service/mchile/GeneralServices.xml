<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="check" noun="Rut">
        <!-- to be called by EECA on mantle.party.PartyIdentification -->
        <in-parameters>
            <parameter name="entityValue" type="Map"/>
        </in-parameters>
        <out-parameters>
            <parameter name="entityValue" type="Map"/>
        </out-parameters>
        <actions>
            <if condition="! ['PtidUniqueNationalId', 'PtidNationalTaxId'].contains(entityValue.partyIdTypeEnumId)">
                <return/>
            </if>
            <service-call name="mchile.GeneralServices.verify#Rut" in-map="[rut:entityValue.idValue]" out-map="context"/>
            <set field="entityValue.idValue" from="new String(rut) + '-' + dv"/>
        </actions>
    </service>

    <service verb="normalize" noun="PartyIdentification">
        <in-parameters>
            <parameter name="idValue"/>
            <parameter name="partyIdTypeEnumId"/>
            <parameter name="partyId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="idValue"/>
            <parameter name="existingPartyIdentification"/>
            <parameter name="valid" type="Boolean"/>
        </out-parameters>
        <actions>
            <set field="valid" from="false"/>
            <if condition="partyIdTypeEnumId in ['PtidNationalTaxId', 'PtidUniqueNationalId']">
                <service-call name="mchile.GeneralServices.verify#Rut" in-map="[rut:idValue]" out-map="verifyMap"/>
                <set field="idValue" from="new String(verifyMap.rut) + '-' + verifyMap.dv"/>
            </if>
            <entity-find entity-name="mantle.party.PartyIdentification" list="existingPartyIdentificationList">
                <econdition field-name="partyIdTypeEnumId"/>
                <econdition field-name="idValue"/>
                <econdition field-name="partyId" operator="not-equals"/>
            </entity-find>
            <set field="existingPartyIdentification" from="existingPartyIdentificationList.first"/>
            <set field="valid" from="true"/>
        </actions>
    </service>

    <service verb="validate" noun="RutForWeb" authenticate="anonymous-all">
        <in-parameters>
            <parameter name="rut"/>
        </in-parameters>
        <out-parameters>
            <parameter name="resultList"/>
        </out-parameters>
        <actions>
            <if condition="rut">
                <service-call name="mchile.GeneralServices.verify#Rut" in-map="[rut:rut, ignoreErrors:true, showIgnoredErrors:false]" out-map="normalized"/>
            </if>
            <if condition="!rut || normalized.errorMessage"><then>
                <set field="resultList" from="[[value:rut, label:'No validado']]"/>
            </then><else>
                <set field="resultList" from="[[value:rut, label:('Validado, normalizado: '+normalized.rut+'-'+normalized.dv)]]"/>
            </else></if>
        </actions>
    </service>

    <service verb="verify" noun="Rut">
        <!-- to be called directly -->
        <in-parameters>
            <parameter name="rut" required="true" type="String"/>
            <parameter name="ignoreErrors" type="Boolean" default="false"/>
            <parameter name="showIgnoredErrors" type="Boolean" default="true"/>
            <parameter name="silent" type="Boolean" default="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="rut"/>
            <parameter name="dv"/>
            <parameter name="errorMessage"/>
        </out-parameters>
        <actions>
            <set field="idValue" from="rut?.replaceAll('\\s', '').replaceAll('\\.', '').replaceAll(',', '').replaceAll(' ', '').toUpperCase()"/>

            <set field="length" from="idValue.length()"/>

            <if condition="length &lt; 2">
                <set field="errorMessage" from="ec.resource.expand('Error validating RUT \'${rut}\': length &lt; 2', null)"/>
                <if condition="ignoreErrors"><then>
                    <if condition="showIgnoredErrors"><then>
                        <return error="false" type="danger" message="${errorMessage}"/>
                    </then><else>
                        <return/>
                    </else></if>
                </then><else>
                    <return error="true" type="danger" message="${errorMessage}"/>
                </else></if>
            </if>
            <script>
                (rut, givenDv) = idValue.tokenize('-')
                if (givenDv == null) {
                    rut = idValue.substring(0, length-1)
                    givenDv = idValue.substring(length-1)
                }
                rut = rut.replaceAll("[^0-9]", "")
            </script>
            <if condition="rut">
                <service-call name="mchile.GeneralServices.calculate#DigitoVerificador" in-map="[rut:rut]" out-map="context"/>
            </if>
            <if condition="!rut || givenDv != dv">
                <set field="errorMessage" from="ec.resource.expand('Invalid RUT: ${idValue}', null)"/>
                <if condition="ignoreErrors">
                    <then>
                        <return error="false" type="danger" message="${errorMessage}"/>
                    </then>
                    <else>
                        <return error="true" type="danger" message="${errorMessage}"/>
                    </else>
                </if>
            </if>
        </actions>
    </service>

    <service verb="calculate" noun="DigitoVerificador">
        <in-parameters><parameter name="rut" type="Integer" required="true"/></in-parameters>
        <out-parameters><parameter name="rut"/><parameter name="dv"/></out-parameters>
        <actions>
            <script>
                int m = 0, s = 1, irut = rut;
                for (; irut != 0; irut /= 10) {
                    s = (s + irut % 10 * (9 - m++ % 6)) % 11;
                }
                dv = (char) (s != 0 ? s + 47 : 75);
                rut = rut.toString()
            </script>
        </actions>
    </service>

    <service verb="format" noun="Rut">
        <in-parameters>
            <parameter name="rut"/>
            <parameter name="ignoreErrors" default="false" type="Boolean"/>
        </in-parameters>
        <out-parameters>
            <parameter name="rut"/>
            <parameter name="rutSinDv"/>
            <parameter name="dv"/>
        </out-parameters>
        <actions>
            <service-call name="mchile.GeneralServices.verify#Rut" in-map="context" out-map="vrut"/>
            <set field="rut" value="${ec.l10n.format(new Integer(vrut.rut), '#,###').replaceAll(',', '.').replaceAll(' ', '')}-${vrut.dv}"/>
            <set field="rutSinDv" from="vrut.rut"/>
            <set field="dv" from="vrut.dv"/>
        </actions>
    </service>

    <service verb="get" noun="RutForParty">
        <in-parameters>
            <parameter name="partyId"/>
            <parameter name="inheritFromParent" type="Boolean" default="true"/>
            <parameter name="failIfNotFound" type="Boolean" default="false"/>
            <parameter name="visitedPartyIdList" type="List"/>
        </in-parameters>
        <out-parameters>
            <parameter name="rut"/>
            <parameter name="rutSinFormato"/>
            <parameter name="rutSinDv"/>
            <parameter name="dv"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.party.PartyIdentification" list="idList">
                <econdition field-name="partyId"/>
                <econdition field-name="partyIdTypeEnumId" operator="in" from="['PtidNationalTaxId', 'PtidUniqueNationalId']"/>
            </entity-find>
            <iterate list="idList" entry="id">
                <if condition="rutSinFormato == null"><then><set field="rutSinFormato" from="id.idValue"/></then>
                <else-if condition="rutSinFormato != id.idValue"><return error="true" message="Rut mismatch, got ${rutSinFormato} and ${id.idValue} for party ${partyId}"/></else-if></if>
            </iterate>
            <if condition="rutSinFormato == null &amp;&amp; inheritFromParent">
                <entity-find entity-name="mantle.party.PartyRelationship" list="childRelList" cache="true">
                    <econdition field-name="relationshipTypeEnumId" value="PrtOrgRollup"/>
                    <econdition field-name="fromPartyId" from="partyId"/>
                    <econdition field-name="toPartyId" operator="is-not-null"/>
                    <date-filter/>
                </entity-find>
                <set field="parentPartyIdList" from="childRelList.toPartyId.sort().unique()"/>
                <if condition="parentPartyIdList.size() &gt; 1"><return error="true" message="Unsupported more than 1 parent for org ${partyId}"/></if>
                <if condition="parentPartyIdList">
                    <set field="parentPartyId" from="parentPartyIdList[0]"/>
                    <if condition="visitedPartyIdList == null"><set field="visitedPartyIdList" from="[]"/></if>
                    <script>visitedPartyIdList.add(parentPartyId)</script>
                    <service-call name="mchile.GeneralServices.get#RutForParty" in-map="context+[failIfNotFound:false, partyId:parentPartyId]" out-map="context"/>
                </if>
            </if>
            <if condition="rutSinFormato == null"><then>
                <if condition="failIfNotFound"><return error="true" message="No se encuentra RUT para sujeto ${partyId}"/></if>
            </then><else>
                <service-call name="mchile.GeneralServices.format#Rut" in-map="[rut:rutSinFormato]" out-map="context"/>
            </else></if>
        </actions>
    </service>

    <service verb="get" noun="PartyName">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="partyName"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.party.Party" value-field="partyField"/>
            <set field="partyTypeEnumId" from="partyField.partyTypeEnumId"/>

            <set field="partyName" value=""/>

            <if condition="partyTypeEnumId == 'PtyOrganization'">
                <entity-find-one entity-name="mantle.party.Organization" value-field="organizationField"/>
                <if condition="organizationField">
                    <set field="partyName" from="organizationField.organizationName"/>
                </if>
            </if>
            <if condition="partyTypeEnumId == 'PtyPerson'">
                <!-- Persona Natural -->
                <entity-find-one entity-name="mantle.party.Person" value-field="personField"/>
                <if condition="personField">
                    <script>
                        partyName = personField.firstName + " " + personField.lastName
                    </script>
                </if>
            </if>
        </actions>
    </service>

    <service verb="get" noun="NumberInWords">
        <in-parameters>
            <parameter name="number"/>
        </in-parameters>
        <out-parameters>
            <parameter name="words"/>
        </out-parameters>
        <actions>
            <script>words = cl.moit.Text.numberToText(Long.parseLong(number))</script>
        </actions>
    </service>

    <service verb="get" noun="PartyIdByRut">
        <in-parameters>
            <parameter name="idValue" required="true"/>
            <parameter name="createUnknown" type="Boolean" default="false"/>
            <parameter name="razonSocial"/>
            <parameter name="roleTypeId"/>
            <parameter name="giro"/>
            <parameter name="direccion"/>
            <parameter name="comuna"/>
            <parameter name="ciudad"/>
            <parameter name="failOnDuplicate" type="Boolean" default="true"/>
            <parameter name="failOnNotFound" type="Boolean" default-value="true"/>
            <parameter name="organizationPartyIdAsOwnerWhenCreating"/>
            <parameter name="additionalAllowedOwnerPartyIdList" type="List"/>
            <parameter name="createRoleTypeId" default-value="Vendor"/>
        </in-parameters>
        <out-parameters>
            <parameter name="partyId"/>
            <parameter name="created" type="Boolean"/>
        </out-parameters>
        <actions>
            <set field="created" from="false"/>
            <service-call name="mchile.GeneralServices.verify#Rut" in-map="[rut:idValue]" out-map="verifyRutMap"/>
            <set field="idValue" value="${verifyRutMap.rut}-${verifyRutMap.dv}"/>
            <entity-find entity-name="mantle.party.PartyIdentification" list="partyIdentificationList">
                <econdition field-name="idValue"/>
                <econdition field-name="partyIdTypeEnumId" value="PtidNationalTaxId"/>
            </entity-find>
            <!-- Ensure party is visible and not replaced/deactivated -->
            <if condition="organizationPartyIdAsOwnerWhenCreating">
                <set field="ownerPartyIdList" from="['_NA_', organizationPartyIdAsOwnerWhenCreating]"/>
                <if condition="additionalAllowedOwnerPartyIdList">
                    <script>ownerPartyIdList.addAll(additionalAllowedOwnerPartyIdList)</script>
                </if>
            </if>
            <entity-find entity-name="mantle.party.Party" list="partyCandidateList">
                <econdition field-name="partyId" operator="in" from="partyIdentificationList.partyId"/>
                <econdition field-name="ownerPartyId" operator="in" from="ownerPartyIdList" ignore-if-empty="true"/>
            </entity-find>
            <set field="partyList" from="[]"/>
            <iterate list="partyCandidateList" entry="party">
                <if condition="party.mergedToPartyId == null &amp;&amp; party.disabled != 'Y'">
                    <script>partyList.add(party)</script>
                </if>
            </iterate>
            <if condition="partyList.size() == 1"><then>
                <set field="partyId" from="partyList.get(0).partyId"/>
                <return/>
            </then><else-if condition="partyList.size() > 1">
                <if condition="failOnDuplicate"><then>
                    <return error="true" message="Más de un sujeto con mismo rut ${idValue}: partyIds ${partyList.partyId}"/>
                </then></if>
                <!-- Attempt to find including razonSocial -->
                <if condition="razonSocial != null &amp;&amp; razonSocial != ''">
                    <entity-find entity-name="mantle.party.PartyDetail" list="partyDetailList">
                        <econdition field-name="partyId" operator="in" from="partyList.partyId"/>
                        <econditions combine="or">
                            <econdition field-name="organizationName" from="razonSocial"/>
                            <econdition field-name="taxOrganizationName" from="razonSocial"/>
                        </econditions>
                    </entity-find>
                    <if condition="partyDetailList.size() == 1"><then>
                        <set field="partyId" from="partyDetailList.first.partyId"/>
                        <return/>
                    </then><else-if condition="partyDetailList.size() > 1">
                        <set field="partyList" from="partyDetailList"/>
                    </else-if></if>
                </if>
                <!-- Attempt to find parent organization -->
                <entity-find entity-name="mantle.party.PartyRelationship" list="relList">
                    <date-filter/>
                    <econdition field-name="relationshipTypeEnumId" value="PrtOrgRollup"/>
                    <econdition field-name="fromPartyId" operator="in" from="partyList.partyId"/>
                    <econdition field-name="toPartyId" operator="in" from="partyList.partyId"/>
                </entity-find>
                <set field="knownParentPartyId" from="null"/>
                <set field="foundMultiplePartyIds" from="false"/>
                <iterate list="relList" entry="relationship">
                    <set field="foundMultiplePartyIds" from="knownParentPartyId != null &amp;&amp; knownParentPartyId != relationship.toPartyId"/>
                    <if condition="foundMultiplePartyIds"><break/></if>
                    <set field="knownParentPartyId" from="relationship.toPartyId"/>
                </iterate>
                <if condition="!foundMultiplePartyIds">
                    <set field="partyId" from="knownParentPartyId"/>
                    <if condition="partyId"><return/></if>
                </if>
                <if condition="failOnDuplicate">
                    <return error="true" message="Más de un sujeto con mismo rut ${idValue} sin padre común ni calce por razón social: partyIds ${partyIdentificationList.partyId})"/>
                </if>
                <return/>
            </else-if></if>
            <!-- Not Found, check whether need to create -->
            <if condition="createUnknown"><then>
                <service-call name="mantle.party.PartyServices.create#Organization" in-map="[ownerPartyId:(organizationPartyIdAsOwnerWhenCreating?:'_NA_'), organizationName:razonSocial, taxOrganizationName:razonSocial, roleTypeId:createRoleTypeId]"
                              out-map="context"/>
                <set field="created" from="true"/>
                <service-call name="create#mantle.party.PartyIdentification" in-map="[partyId:partyId, partyIdTypeEnumId:'PtidNationalTaxId', idValue:idValue]"/>
                <if condition="giro != null &amp;&amp; giro != ''">
                    <service-call name="create#mchile.dte.PartyGiro" in-map="[partyId:partyId, description:giro, isPrimary:'Y']"/>
                </if>
                <entity-find entity-name="moqui.basic.GeoAssocAndToDetail" list="comunaList">
                    <econdition field-name="geoId" value="CHL"/>
                    <econdition field-name="geoName" ignore-case="true" from="comuna"/>
                </entity-find>
                <set field="comunaId" from="comunaList.first?.geoId"/>
                <service-call name="mantle.party.ContactServices.store#PartyContactInfo"
                              in-map="[partyId:partyId, address1:direccion, postalContactMechPurposeId:'PostalTax', stateProvinceGeoId:comunaId, countryGeoId:'CHL', city:ciudad]"/>
            </then><else-if condition="failOnNotFound">
                <return error="true" message="No existe organización con RUT ${idValue} definida en el sistema"/>
            </else-if></if>
        </actions>
    </service>

</services>
