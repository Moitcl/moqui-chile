<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="preLoad" noun="Dte">
        <description>
            Servicio para simplificar carga de Facturas vs Boletas discriminando por los dos grandes tipos antes de parsear el XML
        </description>
        <in-parameters>
            <parameter name="invoiceId"/>
            <parameter name="xml" type="Object" required="true"/>
            <parameter name="pdf" type="Object"/>
            <parameter name="productMatch" default-value="false"/>
            <parameter name="fiscalTaxDocumentAggrEnumId" required="true"/>
            <parameter name="createUnknownIssuer" type="Boolean" default="false"/>
            <parameter name="requireIssuerInternalOrg" type="Boolean" default="false"/>
            <parameter name="createUnknownReceiver" type="Boolean" default="false"/>
            <parameter name="requireReceiverInternalOrg" type="Boolean" default="false"/>
            <parameter name="ignoreSignatureErrors" type="Boolean" default="false"/>
        </in-parameters>
        <actions>
            <if condition="fiscalTaxDocumentAggrEnumId == 'Ftdt-Boletas'"><then>
                <service-call name="mchile.sii.dte.DteImportServices.load#Boleta" in-map="context"/>
            </then><else>
                <service-call name="mchile.sii.dte.DteImportServices.load#DteFromFile" in-map="context"/>
            </else></if>
        </actions>
    </service>

    <service verb="load" noun="Boleta" type="script" location="component://MoquiChile/service/mchile/sii/dte/groovy/loadBoleta.groovy">
        <description>
            Carga boleta en XML recibida por la organización
        </description>
        <in-parameters>
            <parameter name="invoiceId"/>
            <parameter name="xml" type="org.apache.commons.fileupload.FileItem" required="true"/>
            <parameter name="pdf" type="org.apache.commons.fileupload.FileItem" required="true"/>
            <parameter name="productMatch" default-value="false"/>
            <parameter name="organizationPartyId" required="true"/>
        </in-parameters>
    </service>

    <service verb="load" noun="DteFromDom" type="script" location="component://MoquiChile/service/mchile/sii/dte/groovy/loadDteFromDom.groovy">
        <in-parameters>
            <parameter name="createUnknownIssuer" default="true" type="Boolean"/>
            <parameter name="requireIssuerInternalOrg" default="false" type="Boolean"/>
            <parameter name="createUnknownReceiver" default="false" type="Boolean"/>
            <parameter name="requireReceiverInternalOrg" default="false" type="Boolean"/>
            <parameter name="domNode" type="org.w3c.dom.Node" required="true"/>
            <parameter name="pdfBytes" type="Object"/>
            <parameter name="rutEmisorCaratula"><description>Rut de emisor cuando documento es enviado en un EnviaDTE con su respectiva carátula</description></parameter>
            <parameter name="rutReceptorCaratula"><description>Rut de receptor cuando documento es enviado en un EnviaDTE con su respectiva carátula</description></parameter>
            <parameter name="envioId"><description>Si el DTE forma parte de un EnvioDTE, el ID de envío DTE recibido en la BD para asociar el documento a crear</description></parameter>
            <parameter name="envioRespuestaId"><description>Si el DTE forma parte de un EnvioDTE, el ID de envío Respuesta en la BD para asociar el documento a crear</description></parameter>
            <parameter name="invoiceStatusId" default-value="InvoiceReceived"/>
            <parameter name="ignoreSignatureErrors" type="Boolean" default="false"/>
            <parameter name="sendResponse" type="Boolean" default="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="tipoDte" type="Integer" required="true"/>
            <parameter name="folioDte" type="Integer" required="true"/>
            <parameter name="fechaEmision" required="true" type="Date"/>
            <parameter name="rutEmisor" required="true"/>
            <parameter name="rutReceptor" required="true"/>
            <parameter name="montoTotal" required="true"/>
            <parameter name="estadoRecepDte" required="true"/>
            <parameter name="isDuplicated" type="Boolean"/>
            <parameter name="recepDteGlosa" required="true"/>
            <parameter name="warningMessages" type="List"/>
            <parameter name="errorMessages" type="List"/>
            <parameter name="discrepancyMessages" type="List"/>
            <parameter name="internalErrors" type="List"/>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
    </service>

    <service verb="load" noun="DteFromFile">
        <description>
            Carga DTE recibida al sistema y llama a servicio que crea orden de compra + invoice correspondiente
        </description>
        <in-parameters>
            <parameter name="createUnknownIssuer" default="true" type="Boolean"/>
            <parameter name="requireIssuerInternalOrg" default="false" type="Boolean"/>
            <parameter name="createUnknownReceiver" default="false" type="Boolean"/>
            <parameter name="requireReceiverInternalOrg" default="false" type="Boolean"/>
            <parameter name="xml" type="Object" required="true"/>
            <parameter name="pdf" type="Object"/>
            <parameter name="attemptProductMatch" default-value="false" type="Boolean"/>
            <parameter name="ignoreSignatureErrors" default-value="false" type="Boolean"/>
        </in-parameters>
        <out-parameters>
            <parameter name="amountImportedOk" type="Integer"/>
            <parameter name="amountImportedWithDiscrepancies" type="Integer"/>
            <parameter name="amountRejected" type="Integer"/>
            <parameter name="importedEnvios" type="Integer"/>
        </out-parameters>
        <actions>
            <script><![CDATA[
                import cl.moit.dte.MoquiDTEUtils
                import javax.xml.xpath.XPath
                import javax.xml.xpath.XPathConstants
                import javax.xml.xpath.XPathFactory
                import javax.xml.xpath.XPathExpression
                import org.moqui.context.ExecutionContext

                Integer amountImportedOk = 0
                Integer amountImportedWithDiscrepancies = 0
                Integer amountRejected = 0
                Integer importedEnvios = 0

                xmlBytes = null
                if (xml instanceof org.apache.commons.fileupload.FileItem) {
                    xmlBytes = xml.get()
                    xmlFileName = xml.name
                } else if (xml instanceof String) {
                    rr = ec.resource.getLocationReference(xml)
                    xmlBytes = rr.openStream().readAllBytes()
                    xmlFileName = rr.getFileName()
                }
                if (pdf instanceof org.apache.commons.fileupload.FileItem) {
                    pdfBytes = pdf.get()
                    pdfFileName = pdf.name
                } else if (pdf instanceof String) {
                    if (pdf.size() > 0) {
                        rr = ec.resource.getLocationReference(pdf)
                        pdfBytes = rr.openStream().readAllBytes()
                        pdfFileName = rr.getFileName()
                    }
                }

                if (xmlBytes) {
                    org.w3c.dom.Document doc = MoquiDTEUtils.parseDocument(xmlBytes)
                    org.w3c.dom.Element docElem = doc.getDocumentElement()
                    if (docElem.getNodeName() == "DTE") {
                        outMap = ec.service.sync().name("mchile.sii.dte.DteImportServices.load#DteFromDom").parameters(context + [domNode: docElem]).call()
                        if (outMap.estadoRecepDte == 0)
                            amountImportedOk++
                        else if (outMap.estadoRecepDte == 2)
                            amountRejected++
                        else if (outMap.estadoRecepDte == 1)
                            amountImportedWithDiscrepancies++
                        else
                            ec.message.addError("estadoRecepDte no reconocido: ${estadoRecepDte}")
                    } else if (docElem.getNodeName() == "SetDTE") {
                        XPath xpath = XPathFactory.newInstance().newXPath()
                        xpath.setNamespaceContext(new MoquiDTEUtils.DefaultNamespaceContext().addNamespace("sii", "http://www.sii.cl/SiiDte"))
                        XPathExpression expression = xpath.compile("/sii:SetDTE/sii:DTE")
                        org.w3c.dom.NodeList dteNodeList = (org.w3c.dom.NodeList) expression.evaluate(docElem, XPathConstants.NODESET)
                        if (dteNodeList.length == 0) {
                            expression = xpath.compile("/SetDTE/DTE")
                            dteNodeList = (org.w3c.dom.NodeList) expression.evaluate(docElem, XPathConstants.NODESET)
                        }
                        dteNodeList.each { org.w3c.dom.Node domNode ->
                            outMap = ec.service.sync().name("mchile.sii.dte.DteImportServices.load#DteFromDom").parameters(context + [domNode: domNode]).requireNewTransaction(true).call()
                            if (outMap.estadoRecepDte == 0)
                                amountImportedOk++
                            else if (outMap.estadoRecepDte == 2)
                                amountRejected++
                            else if (outMap.estadoRecepDte == 1)
                                amountImportedWithDiscrepancies++
                            else
                                ec.message.addError("estadoRecepDte no reconocido: ${estadoRecepDte}")
                        }
                        ec.message.addMessage("Procesados ${dteNodeList.length} DTEs")
                    } else if (docElem.getNodeName() in ['EnvioDTE', 'RESULTADO_ENVIO', 'RespuestaDTE', 'EnvioRecibos']) {
                        if (docElem.getNodeName() == 'EnvioDTE' && !MoquiDTEUtils.verifySignature(docElem, "/sii:EnvioDTE/sii:SetDTE", "./sii:Caratula/sii:TmstFirmaEnv/text()"))
                            ec.message.addMessage("Firma del envío inválida", "danger")
                        ec.service.sync().name("mchile.sii.dte.DteEnvioServices.store#ReceivedEnvio").parameters(context + [contentBytes: xmlBytes, fileName: xmlFileName]).call()
                        importedEnvios++
                    } else {
                        ec.message.addError("Unknown document ${docElem.getNodeName()}")
                    }
                }
                ec.message.addMessage("Importados: ${amountImportedOk}, Importados con Discrepancias: ${amountImportedWithDiscrepancies}, Rechazados: ${amountRejected}, Envios: ${importedEnvios}")
                ]]></script>
        </actions>
    </service>

    <service verb="create" noun="DteFromUrl">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="invoiceId" required="true"/>
            <parameter name="contentLocation" required="true"/>
            <parameter name="contentDate" required="true"/>
            <parameter name="issuerPartyId"/>
            <parameter name="receiverPartyId"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="fiscalTaxDocumentNumber" required="true"/>
            <parameter name="fiscalTaxDocumentContentTypeEnumId" default="Ftdct-Pdf"/>
            <parameter name="indTrasladoEnumId" default-value="IndTraslado-5"/>
            <parameter name="tipoDespachoEnumId" default-value="TpoDespacho-3"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <log message="[create#DteFromFile] Reading tax document from ${contentLocation}"/>
            <script><![CDATA[
                URL url = new URL(contentLocation)
                URLConnection hc = url.openConnection()
                hc.setRequestProperty("User-Agent", "Mozilla/5.0")
                byte[] contentFile
                if (hc.getResponseCode().equals(200)) {
                    contentFile = hc.getInputStream().getBytes()
                }
                ]]></script>

            <log message="[create#DteFromFile] orderId: ${orderId}"/>

            <entity-find entity-name="mantle.order.OrderHeaderAndPart" list="orderList" distinct="true">
                <econdition field-name="orderId" from="orderId"/>
            </entity-find>
            <set field="order" from="orderList?.first"/>

            <set field="issuerPartyId" from="issuerPartyId ? issuerPartyId : order.vendorPartyId"/>
            <set field="receiverPartyId" from="receiverPartyId ? receiverPartyId : order.customerPartyId"/>

            <if condition="fiscalTaxDocumentContentTypeEnumId == 'Ftdct-Pdf'"><then>
                <set field="sentRecStatusId" value="Ftd-NotSentRec"/>
            </then><else-if condition="fiscalTaxDocumentContentTypeEnumId == 'Ftdct-Xml'">
                <set field="sentRecStatusId" value="Ftd-SentRec"/>
            </else-if><else>
                <set field="sentRecStatusId" from="null"/>
            </else></if>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:issuerPartyId]" out-map="issuerRut"/>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:receiverPartyId]" out-map="receiverRut"/>
            <set field="createMap" from="[issuerPartyId:issuerPartyId, issuerPartyIdTypeEnumId:'PtidNationalTaxId', issuerPartyIdValue:issuerRut.rutSinFormato,
                                          receiverPartyId:receiverPartyId, receiverPartyIdTypeEnumId:'PtidNationalTaxId', receiverPartyIdValue:receiverRut.rutSinFormato,
                                          fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, fiscalTaxDocumentNumber:fiscalTaxDocumentNumber,
                                          statusId:'Ftd-Issued', sentAuthStatusId:'Ftd-SentAuthAccepted', sentRecStatusId:sentRecStatusId, date:contentDate, invoiceId:invoiceId,
                                          indTrasladoEnumId:indTrasladoEnumId, tipoDespachoEnumId:tipoDespachoEnumId]"/>
            <service-call name="create#mchile.dte.FiscalTaxDocument" out-map="context" in-map="createMap"/>
            <set field="pdfContentLocation" value="dbresource://moit/erp/dte/${issuerRut?.rutSinFormato?:('partyId-'+issuerPartyId)}/DTE-${fiscalTaxDocumentTypeEnumId}-${fiscalTaxDocumentNumber}.pdf"/>
            <set field="createMap" from="[fiscalTaxDocumentId:fiscalTaxDocumentId, fiscalTaxDocumentContentTypeEnumId:'Ftdct-Pdf', contentLocation:pdfContentLocation, contentDate:contentDate]"/>
            <script>ec.resource.getLocationReference(pdfContentLocation).putBytes(contentFile)</script>
            <service-call name="create#mchile.dte.FiscalTaxDocumentContent" out-map="context" in-map="createMap"/>

            <set field="updateMap" from="[fiscalTaxDocumentId:fiscalTaxDocumentId, emailEmisor:emailEmisor, amount:amount,
                                          montoNeto:montoNeto, tasaImpuesto:tasaImpuesto, tipoImpuesto:tipoImpuesto, razonSocial:razonSocial, fechaEmision:fechaEmision,
                                          documentoAnulado:documentoAnulado, montoExento:montoExento, montoIVARecuperable:montoIVARecuperable,
                                          codigoIVANoRecuperable:codigoIVANoRecuperable, montoIVANoRecuperable:montoIVANoRecuperable, montoIVAUsoComun:montoIVAUsoComun,
                                          codigoOtroImpuestoORetencion:codigoOtroImpuestoORetencion, tasaOtroImpuestoORetencion:tasaOtroImpuestoORetencion,
                                          montoOtroImpuestoORetencionConCredito:montoOtroImpuestoORetencionConCredito,
                                          montoOtroImpuestoORetencionSinCredito:montoOtroImpuestoORetencionSinCredito, montoNetoActivoFijo:montoNetoActivoFijo,
                                          montoIVAActivoFijo:montoIVAActivoFijo, montoIVANoRetenido:montoIVANoRetenido, codigoSucursal:codigoSucursal,
                                          notasDebitoCreditoFacturasCompra:notasDebitoCreditoFacturasCompra]"/>
            <service-call name="create#mchile.dte.FiscalTaxDocumentAttributes" out-map="context" in-map="updateMap"/>

        </actions>
    </service>

    <service verb="load" noun="Dt">
        <description>
            Carga documento tributario en papel recibido de tercero
        </description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentNumber" required="true"/>
            <parameter name="invoiceId"/>
            <parameter name="pdf" type="org.apache.commons.fileupload.FileItem" required="true"/>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="amount" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="montoNeto"/>
            <parameter name="tasaImpuesto"/>
            <parameter name="tipoImpuesto"/>
            <!--parameter name="razonSocial"/-->
            <parameter name="fechaEmision" required="true" type="Date"/>
            <parameter name="documentoAnulado"/>
            <parameter name="montoExento"/>
            <parameter name="montoIVARecuperable"/>
            <parameter name="codigoIVANoRecuperable"/>
            <parameter name="montoIVANoRecuperable"/>
            <parameter name="montoIVAUsoComun"/>
            <parameter name="codigoOtroImpuestoORetencion"/>
            <parameter name="tasaOtroImpuestoORetencion"/>
            <parameter name="montoOtroImpuestoORetencionConCredito"/>
            <parameter name="montoOtroImpuestoORetencionSinCredito"/>
            <parameter name="montoNetoActivoFijo"/>
            <parameter name="montoIVAActivoFijo"/>
            <parameter name="montoIVANoRetenido"/>
            <parameter name="codigoSucursal"/>
            <parameter name="notasDebitoCreditoFacturasCompra"/>
            <parameter name="receiverPartyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <set field="archivoPdf" from="pdf.getName()"/>
            <service-call name="mchile.sii.dte.DteInternalServices.load#DteConfig" in-map="[partyId:receiverPartyId]" out-map="context"/>

            <set field="ts" from="ec.l10n.parseTimestamp(fechaEmision, 'yyyy-MM-dd')"/>

            <set field="purchaseOutMap" from="[:]"/>
            <set field="invoiceOutMap" from="[:]"/>

            <if condition="!invoiceId">
                <service-call name="mchile.PurchaseServices.create#Purchase" in-map="[vendorPartyId:issuerPartyId]" out-map="purchaseOutMap"/>
                <!-- TODO: ¿Faltan items? -->
                <service-call name="mantle.account.InvoiceServices.create#EntireOrderPartInvoice" in-map="[orderId:purchaseOutMap.orderId, orderPartSeqId:purchaseOutMap.orderPartSeqId]" out-map="invoiceOutMap"/>
                <set field="invoiceId" from="invoiceOutMap.invoiceId"/>
            </if>

            <!-- Creación de FiscalTaxDocument -->
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:issuerPartyId]" out-map="issuerRut"/>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:receiverPartyId]" out-map="receiverRut"/>
            <set field="createMap" from="[issuerPartyId:issuerPartyId, issuerPartyIdTypeEnumId:'PtidNationalTaxId', issuerPartyIdValue:issuerRut.rutSinFormato, statusId:'Ftd-Issued',
                                          fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, fiscalTaxDocumentNumber:fiscalTaxDocumentNumber,
                                          receiverPartyId:receiverPartyId, receiverPartyIdTypeEnumId:'PtidNationalTaxId', receiverPartyIdValue:receiverRut.rutSinFormato,
                                          date:ts, invoiceId:invoiceId]"/>
            <service-call name="create#mchile.dte.FiscalTaxDocument" out-map="context" in-map="createMap"/>

            <!-- Creación de contenido (Solo PDF) -->
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="dteType" auto-field-map="[enumId:fiscalTaxDocumentTypeEnumId]"/>
            <set field="pdfContentLocation" value="dbresource://moit/erp/dte/${issuerRut?.rutSinFormato?:('partyId-'+issuerPartyId)}/DT-${dteType.enumCode}-${fiscalTaxDocumentNumber}.pdf"/>
            <set field="createMap" from="[fiscalTaxDocumentId:fiscalTaxDocumentId, contentDate:ts, fiscalTaxDocumentContentTypeEnumId:'Ftdct-Xml', contentLocation:pdfContentLocation]"/>
            <script>ec.resource.getLocationReference(pdfContentLocation).putStream(pdf.inputStream)</script>
            <service-call name="create#mchile.dte.FiscalTaxDocumentContent" out-map="context" in-map="createMap"/>

            <!-- Entrada en atributos -->
            <set field="updateMap" from="[fiscalTaxDocumentId:fiscalTaxDocumentId, emailEmisor:emailEmisor, amount:amount,
                                         montoNeto:montoNeto, tasaImpuesto:tasaImpuesto, tipoImpuesto:tipoImpuesto, razonSocial:razonSocial, fechaEmision:fechaEmision, documentoAnulado:documentoAnulado,
                                         montoExento:montoExento, montoIVARecuperable:montoIVARecuperable, codigoIVANoRecuperable:codigoIVANoRecuperable, montoIVANoRecuperable:montoIVANoRecuperable,
                                         montoIVAUsoComun:montoIVAUsoComun, codigoOtroImpuestoORetencion:codigoOtroImpuestoORetencion, tasaOtroImpuestoORetencion:tasaOtroImpuestoORetencion,
                                         montoOtroImpuestoORetencionConCredito:montoOtroImpuestoORetencionConCredito, montoOtroImpuestoORetencionSinCredito:montoOtroImpuestoORetencionSinCredito,
                                         montoNetoActivoFijo:montoNetoActivoFijo, montoIVAActivoFijo:montoIVAActivoFijo, montoIVANoRetenido:montoIVANoRetenido, codigoSucursal:codigoSucursal,
                                         notasDebitoCreditoFacturasCompra:notasDebitoCreditoFacturasCompra]"/>
            <service-call name="create#mchile.dte.FiscalTaxDocumentAttributes" out-map="context" in-map="updateMap"/>
        </actions>
    </service>

    <service verb="load" noun="DteContent">
        <description>
            Carga XML/PDF/PDF Cedible directo en la BD
        </description>
        <in-parameters>
            <parameter name="filename" type="org.apache.commons.fileupload.FileItem"/>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="fiscalTaxDocumentContentTypeEnumId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="ftdtList">
                <econdition field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" from="fiscalTaxDocumentContentTypeEnumId"/>
            </entity-find>

            <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="fiscalTaxDocument"/>
            <set field="tipoFactura" from="fiscalTaxDocument.FiscalTaxDocumentType.sequenceNum"/>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[rut:fiscalTaxDocument.issuerPartyId]" out-map="rut"/>
            <set field="rutEmisor" from="rut.rutSinFormato"/>

            <iterate list="ftdtList" entry="ftdtEntry">
                <set field="ftdtEntry.contentLocation" value="dbresource://moit/erp/dte/${rutEmisor}/DTE-${tipoFactura}-${folio}.xml"/>
                <script>
                    docRr = ec.resource.locationReference(ftdtEntry.contentLocation)
                    docRr.putStream(filename.getInputStream())
                </script>
                <entity-update value-field="ftdtEntry"/>
            </iterate>
        </actions>
    </service>

    <service verb="check" noun="Afecto">
        <in-parameters>
            <parameter name="productId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="afecto"/>
        </out-parameters>
        <actions>
            <set field="afecto" value="true"/>
            <entity-find entity-name="mantle.product.category.ProductCategoryMember" list="categoryMemberList">
                <econdition field-name="productId" from="productId"/>
                <econdition field-name="productCategoryId" value="ClVatTaxExento"/>
                <date-filter/>
            </entity-find>
            <if condition="categoryMemberList"><set field="afecto" value="false"/></if>
        </actions>
    </service>

</services>