<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">
    
    <service verb="store" noun="DteContent">
        <in-parameters>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="fiscalTaxDocumentContentTypeEnumId" required="true"><description>Content Type Enum ID, e.g. Ftdct-Xml, Ftdct-Pdf</description></parameter>
            <parameter name="documentContent" type="Object"><description>Content to store, can be a String, byte[] or InputStream</description></parameter>
            <parameter name="contentDate" type="Timestamp"/>
            <parameter name="failOnExisting" type="Boolean" default="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentContentId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="dte"/>
            <if condition="dte == null"><return error="true" message="Could not find FiscalTaxDocument ${fiscalTaxDocumentId}"/></if>
            <if condition="contentDate == null"><set field="contentDate" from="dte.date"/></if>
            <set field="prefix" value="DTE"/>
            <if condition="fiscalTaxDocumentContentTypeEnumId == 'Ftdct-Xml'"><then>
                <set field="extension" value="xml"/>
            </then><else-if condition="fiscalTaxDocumentContentTypeEnumId in ['Ftdct-Pdf', 'Ftdct-PdfCedible']">
                <set field="extension" value="pdf"/>
            </else-if><else-if condition="fiscalTaxDocumentContentTypeEnumId == 'Ftdct-CertifCesionHtml'">
                <set field="prefix" value="CertCesion"/>
                <set field="extension" value="html"/>
            </else-if><else-if condition="fiscalTaxDocumentContentTypeEnumId == 'Ftdct-CertifCesionPdf'">
                <set field="prefix" value="CertCesion"/>
                <set field="extension" value="pdf"/>
            </else-if><else>
                <return error="true" message="Unknown content type ${fiscalTaxDocumentContentTypeEnumId}"/>
            </else></if>
            <set field="tipoDte" from="dte.documentType?.enumCode"/>
            <set field="contentLocation" value="dbresource://moit/erp/dte/${dte.issuerPartyIdValue}/${prefix}-${tipoDte}-${dte.fiscalTaxDocumentNumber}.${extension}"/>
            <set field="contentResourceReference" from="ec.resource.getLocationReference(contentLocation)"/>
            <service-call name="create#mchile.dte.FiscalTaxDocumentContent" in-map="context" out-map="context"/>
            <if condition="contentResourceReference.exists &amp;&amp; failOnExisting">
                <return error="true" message="Content already exists at ${contentLocation}"/></if>
            <if condition="documentContent instanceof String"><then>
                <script>contentResourceReference.putText(documentContent)</script>
            </then><else-if condition="documentContent instanceof byte[]">
                <script>contentResourceReference.putBytes(documentContent)</script>
            </else-if><else-if condition="documentContent instanceof InputStream">
                <script>contentResourceReference.putStream(documentContent)</script>
            </else-if></if>
        </actions>
    </service>

    <service verb="get" noun="DteContent">
        <in-parameters>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="fiscalTaxDocumentContentTypeEnumId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="content"/>
            <parameter name="contentRef"/>
        </out-parameters>
        <actions>
            <set field="content" from="null"/>
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocumentContent" value-field="contentField"/>
            <if condition="contentField">
                <set field="content" from="contentField.contentLocation"/>
                <script>
                    docRr = ec.resource.getLocationReference(contentField.contentLocation)
                </script>
                <set field="contentRef" from="docRr"/>
            </if>
        </actions>
    </service>

    <service verb="regenerate" noun="Pdf">
        <in-parameters>
            <parameter name="fiscalTaxDocumentId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="dteList">
                <econdition field-name="fiscalTaxDocumentId"/>
                <econdition field-name="statusId" value="Ftd-Issued"/>
            </entity-find>
            <set field="dte" from="dteList.first"/>
            <if condition="!dte"><return error="true" message="Could not find FiscalTaxDocument ${fiscalTaxDocumentId}"/></if>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="xmlList">
                <econdition field-name="fiscalTaxDocumentId"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
            </entity-find>
            <set field="xmlLocation" from="xmlList.first.contentLocation"/>
            <if condition="!xmlLocation"><return error="true" message="No XML Found, cannot generate PDF"/></if>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="xmlList">
                <econdition field-name="fiscalTaxDocumentId"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Pdf"/>
            </entity-find>
            <if condition="xmlList"><then>
                <set field="contentLocation" from="xmlList.first.contentLocation"/>
            </then><else>
                <service-call name="mchile.sii.dte.DteInternalServices.get#SiiCode" in-map="[fiscalTaxDocumentTypeEnumId:dte.fiscalTaxDocumentTypeEnumId]" out-map="siiCodeMap"/>
                <set field="tipoDte" from="siiCodeMap.siiCode"/>
                <set field="contentLocation" value="dbresource://moit/erp/dte/${dte.issuerPartyIdValue}/DTE-${tipoDte}-${dte.fiscalTaxDocumentNumber}.pdf"/>
                <service-call name="create#mchile.dte.FiscalTaxDocumentContent" in-map="[fiscalTaxDocumentId:fiscalTaxDocumentId, fiscalTaxDocumentContentTypeEnumId:'Ftdct-Pdf', contentLocation:contentLocation]"/>
            </else></if>
            <service-call name="mchile.sii.dte.DteContentServices.generate#Pdf" in-map="[xmlLocation:xmlLocation, issuerPartyId:dte.issuerPartyId]" out-map="context"/>
            <script>ec.resource.getLocationReference(contentLocation).putBytes(pdfBytes)</script>
        </actions>
    </service>

    <service verb="generate" noun="Pdf">
        <description>
            Genera archivo PDF de Factura/Boleta (envio).
        </description>
        <in-parameters>
            <parameter name="xmlLocation" required="true"/>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="type" default-value="both"><description>nocedible, cedible, both or boleta</description></parameter>
            <parameter name="continua" type="Boolean"/>
            <parameter name="invoiceMessage"/>
        </in-parameters>
        <out-parameters>
            <parameter name="pdfBytes" type="byte[]"/>
            <parameter name="pdfCedibleBytes" type="byte[]"/>
        </out-parameters>
        <actions>
            <!-- Recuperacion de parametros de la organizacion -->
            <service-call name="mchile.sii.dte.DteInternalServices.load#DteConfig" in-map="[partyId:issuerPartyId]" out-map="context"/>
            <set field="template" from="pdfTemplate"/>
            <set field="giro" from="giroEmisor"/>
            <set field="pdfTemplateBoleta" from="pdfTemplateBoleta"/>
            <set field="pdfTemplateBoleta" from="pdfTemplate"/>
            <set field="pdfTemplateBoletaContinua" from="pdfTemplateBoletaContinua"/>

            <if condition="type == 'boleta'">
                <set field="template" from="pdfTemplateBoleta"/>
                <if condition="continua">
                    <set field="template" from="pdfTemplateBoletaContinua"/>
                </if>
            </if>

            <if condition="!template">
                <return error="true" message="OrganizaciÃ³n emisora no tiene definida plantilla para generar PDF"/>
            </if>

            <if condition="invoiceMessage">
                <if condition="commentAfterDetalle == null"><then>
                    <set field="commentAfterDetalle" from="invoiceMessage"/>
                </then><else>
                    <set field="commentAfterDetalle" value="${commentAfterDetalle}\n${invoiceMessage}"/>
                </else></if>
                <set field="transformParameters.commentAfterDetalle" from="commentAfterDetalle"/>
            </if>
            <service-call name="mchile.sii.dte.DteContentServices.generate#PdfInternal" in-map="context" out-map="context"/>
        </actions>
    </service>

    <service verb="generate" noun="PdfInternal">
        <in-parameters>
            <parameter name="xmlLocation" required="true"/>
            <parameter name="commentAfterDetalle"/>
            <parameter name="transformParameters" type="Map" default="[detailHeaderBgColor:'#eaeaea', detailHeaderFgColor:'black', detailHeaderSepColor:'white', tableBorderColor:'#eaeaea', vendorNameColor:'black']"/>
            <parameter name="template" allow-html="any"/>
            <parameter name="type" default-value="both"><description>nocedible, cedible, both or boleta</description></parameter>
        </in-parameters>
        <out-parameters>
            <parameter name="pdfBytes" type="byte[]"/>
            <parameter name="pdfCedibleBytes" type="byte[]"/>
        </out-parameters>
        <actions>
            <script>
                import javax.xml.transform.stream.StreamSource
            </script>
            <if condition="type in ['boleta', 'nocedible', 'both']">
                <script>
                    ByteArrayOutputStream pdf = new ByteArrayOutputStream()

                    pages = ec.resource.xslFoTransform(new StreamSource(ec.resource.getLocationReference(xmlLocation).openStream()), new StreamSource(new ByteArrayInputStream(template.getBytes("UTF-8"))), pdf, "application/pdf", transformParameters + [cedible:'false'])
                    pdf.close()
                    if (pages == null || pages == 0) ec.message.addError("Error generando PDF: pÃ¡ginas generadas: ${pages}")
                    pdfBytes = pdf.toByteArray()
                </script>
            </if>
            <if condition="type in ['cedible', 'both']">
                <script>
                    pdf = new ByteArrayOutputStream()
                    pages = ec.resource.xslFoTransform(new StreamSource(ec.resource.getLocationReference(xmlLocation).openStream()), new StreamSource(new ByteArrayInputStream(template.getBytes("UTF-8"))), pdf, "application/pdf", transformParameters + [cedible:'true'])
                    pdf.close()
                    if (pages == null || pages == 0) ec.message.addError("Error generando PDF: pÃ¡ginas generadas: ${pages}")
                    pdfCedibleBytes = pdf.toByteArray()
                </script>
            </if>
        </actions>
    </service>

    <service verb="download" noun="Document">
        <in-parameters>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="fiscalTaxDocumentContentTypeEnumId" required="true"/>
            <parameter name="generatePdfIfUnavailable" type="Boolean" default="false"/>
            <parameter name="forceGeneration" type="Boolean" default="false"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="documentList">
                <econdition field-name="fiscalTaxDocumentId"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId"/>
            </entity-find>
            <if condition="documentList">
                <set field="docRr" from="ec.resource.getLocationReference(documentList.first?.contentLocation)"/>
            </if>
            <if condition="docRr?.exists &amp;&amp; !forceGeneration"><then>
                <script>ec.web.sendResourceResponse(documentList.first.contentLocation)</script>
                <return/>
            </then><else-if condition="fiscalTaxDocumentContentTypeEnumId in ['Ftdct-Pdf', 'Ftdct-PdfCedible'] &amp;&amp; (generatePdfIfUnavailable || forceGeneration)">
                <set field="cedible" from="fiscalTaxDocumentContentTypeEnumId == 'Ftdct-PdfCedible'"/>
                <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="documentList" cache="false">
                    <econdition field-name="fiscalTaxDocumentId"/>
                    <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
                </entity-find>
                <if condition="documentList?.first">
                    <set field="template" from="ec.resource.getLocationReference('component://MoquiChile/DTE/TEMPLATES/plantilla_general.xsl').text"/>
                    <service-call name="mchile.sii.dte.DteContentServices.generate#PdfInternal" out-map="context"
                                  in-map="[xmlLocation:documentList.first.contentLocation, template:template, type:(cedible? 'cedible' : 'nocedible')]"/>
                    <if condition="cedible">
                        <set field="pdfBytes" from="pdfCedibleBytes"/>
                    </if>
                    <if condition="pdfBytes">
                        <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="dte"/>
                        <service-call name="mchile.sii.dte.DteInternalServices.get#SiiCode" in-map="[fiscalTaxDocumentTypeEnumId:dte.fiscalTaxDocumentTypeEnumId]" out-map="siiCodeMap"/>
                        <set field="tipoDte" from="siiCodeMap.siiCode"/>
                        <set field="contentLocation" value="dbresource://moit/erp/dte/${dte.issuerPartyIdValue}/DTE-${tipoDte}-${dte.fiscalTaxDocumentNumber}.pdf"/>
                        <service-call name="create#mchile.dte.FiscalTaxDocumentContent" in-map="[fiscalTaxDocumentId:fiscalTaxDocumentId, fiscalTaxDocumentContentTypeEnumId:'Ftdct-Pdf', contentLocation:contentLocation]"/>
                        <script>ec.resource.getLocationReference(contentLocation).putBytes(pdfBytes)</script>
                        <script>ec.web.sendResourceResponse(contentLocation)</script>
                        <return/>
                    </if>
                </if>
            </else-if></if>
            <message error="true">${ec.resource.expand('No se encontrÃ³ archivo en [${fiscalTaxDocumentId}] para tipo de contenido ${fiscalTaxDocumentContentTypeEnumId}','')}</message>
        </actions>
    </service>

    <service verb="load" noun="PdfTemplate">
        <description>Carga Plantilla para generar PDF</description>
        <in-parameters>
            <parameter name="templateFile" type="org.apache.commons.fileupload.FileItem"/>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="encoding" required="true"/>
            <parameter name="type" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.PartyDteParams" value-field="dteParams" for-update="true">
                <field-map field-name="partyId" from="organizationPartyId"/>
            </entity-find-one>


            <if condition="type == 'DTE'">
                <set field="dteParams.pdfTemplate" from="templateFile.getString(encoding)"/>
            </if>

            <if condition="type == 'Boleta'">
                <set field="dteParams.pdfTemplateBoleta" from="templateFile.getString(encoding)"/>
            </if>

            <if condition="type == 'BoletaContinua'">
                <set field="dteParams.pdfTemplateBoletaContinua" from="templateFile.getString(encoding)"/>
            </if>

            <set field="logFile" from="templateFile.getName()"/>
            <log level="info" message="Subiendo plantilla PDF $type:$type:  $logFile"/>

            <entity-update value-field="dteParams"/>
        </actions>
    </service>

</services>