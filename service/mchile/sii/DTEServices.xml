<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="get" noun="DteInfo">
        <in-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="issuerRut"/>
            <parameter name="issuerName"/>
            <parameter name="receiverRut"/>
            <parameter name="receiverName"/>
            <parameter name="doctypeName"/>
            <parameter name="folio"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="dte"/>
            <service-call name="mchile.GeneralServices.format#Rut" in-map="[rut:dte.issuerPartyIdValue]" out-map="issuerRutMap"/>
            <set field="issuerRut" from="issuerRutMap.rut"/>
            <service-call name="mchile.GeneralServices.format#Rut" in-map="[rut:dte.receiverPartyIdValue]" out-map="receiverRutMap"/>
            <set field="receiverRut" from="receiverRutMap.rut"/>
            <entity-find-one entity-name="mantle.party.PartyDetail" value-field="issuer" auto-field-map="[partyId:dte.issuerPartyId]"/>
            <set field="issuerName" from="issuer.taxOrganizationName?:ec.resource.expand('PartyNameOnlyTemplate', null, issuer)"/>
            <entity-find-one entity-name="mantle.party.PartyDetail" value-field="receiver" auto-field-map="[partyId:dte.receiverPartyId]"/>
            <set field="receiverName" from="receiver.taxOrganizationName?:ec.resource.expand('PartyNameOnlyTemplate', null, receiver)"/>
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="docTypeEnum" auto-field-map="[enumId:dte.fiscalTaxDocumentTypeEnumId]"/>
            <set field="doctypeName" from="docTypeEnum.description"/>
            <set field="folio" from="dte.fiscalTaxDocumentNumber"/>
        </actions>
    </service>

    <service verb="genera" noun="Factura" type="script" location="component://MoquiChile/service/mchile/sii/DTEServices/generaFactura.groovy">
        <description>
            Generación de DTE de acuerdo a plantilla
        </description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="rutReceptor" required="true"/>
            <parameter name="receiverPartyId" required="true"/>
            <parameter name="razonSocialReceptor" required="true"/>
            <parameter name="giroReceptor" required="true"/>
            <parameter name="contactoReceptor" required="true"/>
            <parameter name="direccionReceptor" required="true"/>
            <parameter name="comunaReceptor" required="true"/>
            <parameter name="ciudadReceptor" default-value="${comunaReceptor}"/>
            <parameter name="detailList" type="List"/>
            <parameter name="invoiceId"/>
            <parameter name="shipmentId"/>
            <parameter name="medioPago"/>
            <parameter name="formaPago"/>
            <parameter name="referenciaList" type="List"/>
            <parameter name="glosaPagos"/>
            <parameter name="indTrasladoEnumId"/>
            <parameter name="tipoDespacho" type="Integer"/>
            <parameter name="settlementTermId"/>
            <parameter name="invoiceMessage"/>
            <parameter name="fechaEmision" type="Date" default="ec.user.nowTimestamp" required="true"/>
            <parameter name="fechaVencimiento" type="Date"/>
            <parameter name="tipoDespacho"/>
            <parameter name="codigosActividadEconomica"/>
            <parameter name="descuentoORecargoGlobalList" type="List"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
    </service>

    <service verb="generaEnvio" noun="Documentos" type="script" location="component://MoquiChile/service/mchile/DTEServices/generaEnvio.groovy">
        <description>Generación de envio documento a partir de facturas ya generadas.</description>
        <in-parameters>
            <parameter name="rutReceptor" default-value="60803000-K"><description>El receptor del envio es el SII</description></parameter>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="documentIdList" required="true" type="List"/>
            <parameter name="saveSinFirma" type="Boolean" default="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="xmlContentLocation"/>
        </out-parameters>
    </service>

    <service verb="enviaSII" noun="Documento"  type="script" location="component://MoquiChile/service/mchile/DTEServices/enviaSiiDocumento.groovy">
        <description>
            Envio documento a partir de documento envio ya generado
            rutOrganizacion: rut de compañía que envía
            rutEnviador: rut de persona que envía
        </description>
        <in-parameters>
            <parameter name="rutOrganizacion" required="true"/>
            <parameter name="documentLocation" required="true"/>
            <parameter name="organizationPartyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trackId"/>
        </out-parameters>
    </service>

    <service verb="marcarEnviados" noun="Documentos">
        <description>
            Marca lista de documentos como enviados, usando el trackid devuelto por el SII
        </description>
        <in-parameters>
            <parameter name="trackId"/>
            <parameter name="documentIdList" required="true" type="List"/>
        </in-parameters>
        <actions>
            <iterate list="documentIdList" entry="documentId">
                <!-- Se marca DTE como enviada -->
                <set field="idDte" from="documentId"/>
                <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="dteEv" for-update="true">
                    <field-map field-name="fiscalTaxDocumentId" from="idDte"/>
                </entity-find-one>
                <set field="dteEv.fiscalTaxDocumentSentStatusEnumId" value="Ftdt-Sent"/>
                <set field="dteEv.trackId" from="trackId"/>
                <entity-update value-field="dteEv"/>
            </iterate>
        </actions>
    </service>

    <service verb="load" noun="DTEConfig">
        <description>
            Carga parametros desde archivo resources
        </description>
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <auto-parameters entity-name="mchile.dte.PartyDteParams"/>
            <parameter name="rutEmisor"/>
            <parameter name="rutEnviador"/>
            <parameter name="transformParameters"/>
            <parameter name="dteSystemIsProduction" type="Boolean"/>
            <parameter name="dteIsProduction" type="Boolean"/>
            <parameter name="boletaIsProduction" type="Boolean"/>
            <parameter name="certificate" type="java.security.cert.X509Certificate"/>
            <parameter name="pkey" type="java.security.PrivateKey"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.PartyDteParams" value-field="dteParams">
                <field-map field-name="partyId" from="partyId"/>
            </entity-find-one>

            <if condition="!dteParams">
                <message error="true">Organización no tiene datos para generar DTE</message>
            </if>

            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="context" out-map="context"/>
            <set field="rutEmisor" from="rutSinFormato"/>
            <if condition="rut == null"><message error="true">No se encuentra RUT para emisor (partyId ${partyId})</message></if>

            <check-errors/>

            <set field="certData" from="dteParams.certData"/>
            <set field="passCert" from="dteParams.passCert"/>

            <script><![CDATA[
                import java.security.KeyStore
                import java.security.PrivateKey
                import java.security.cert.X509Certificate
                import cl.moit.dte.MoquiDTEUtils

                if (certData && passCert) {
                    KeyStore ks = KeyStore.getInstance("PKCS12")
                    ks.load(new ByteArrayInputStream(certData.decodeBase64()), passCert.toCharArray())
                    String alias = ks.aliases().nextElement()
                    certificate = (X509Certificate) ks.getCertificate(alias)
                    rutEnviador = MoquiDTEUtils.getRutFromCertificate(certificate)
                    ec.service.sync().name("mchile.GeneralServices.verify#Rut").parameter("rut", rutEnviador).call()
                    pkey = (PrivateKey) ks.getKey(alias, ((String)passCert).toCharArray())
                }
            ]]></script>
            <set field="pdfTemplate" from="dteParams.pdfTemplate"/>
            <if condition="!pdfTemplate">
                <set field="pdfTemplate" from="ec.resource.getLocationReference('component://MoquiChile/DTE/TEMPLATES/plantilla_general.xsl').text"/>
            </if>
            <set field="pdfTemplateBoleta" from="dteParams.pdfTemplateBoleta"/>
            <set field="pdfTemplateBoletaContinua" from="dteParams.pdfTemplateBoletaContinua"/>
            <set field="logo" from="dteParams.logo ?: ''"/>
            <set field="fechaResolucionSii" from="dteParams.fechaResolucionSii ?: ''"/>
            <set field="numeroResolucionSii" from="dteParams.numeroResolucionSii ?: ''"/>
            <set field="razonSocialEmisor" from="dteParams.razonSocialEmisor"/>
            <set field="codigoSucursalSii" from="dteParams.codigoSucursalSii"/>
            <set field="direccionOrigen" from="dteParams.direccionOrigen"/>
            <set field="comunaOrigen" from="dteParams.comunaOrigen"/>
            <set field="ciudadOrigen" from="dteParams.ciudadOrigen"/>
            <set field="nombreContacto" from="dteParams.nombreContacto"/>
            <set field="mailContacto" from="dteParams.mailContacto ?: ''"/>
            <set field="fonoContacto" from="dteParams.fonoContacto ?: ''"/>
            <set field="oficinaSII" from="dteParams.oficinaSII ?: ''"/>
            <set field="showItemNumber" from="dteParams.showItemNumber ?: 'Y'"/>
            <set field="commentAfterDetalle" from="dteParams.commentAfterDetalle ?: ''"/>
            <set field="cuentaBancariaMail" from="dteParams.cuentaBancariaMail ?: ''"/>
            <set field="cuentaBancariaText" from="dteParams.cuentaBancariaText ?: ''"/>
            <set field="codigosActividadEconomica" from="dteParams.codigosActividadEconomica ?: ''"/>
            <set field="detailHeaderBgColor" from="dteParams.detailHeaderBgColor ?: '&#35;eaeaea'"/>
            <set field="detailHeaderFgColor" from="dteParams.detailHeaderFgColor ?: 'black'"/>
            <set field="detailHeaderSepColor" from="dteParams.detailHeaderSepColor ?: 'white'"/>
            <set field="tableBorderColor" from="dteParams.tableBorderColor ?: '&#35;eaeaea'"/>
            <set field="vendorNameColor" from="dteParams.vendorNameColor ?: 'black'"/>

            <set field="transformParameters" from="[fonoContacto:fonoContacto, mailContacto:mailContacto, oficinaSII:oficinaSII, logo:logo, numeroResolucionSii:numeroResolucionSii, fechaResolucionSii:fechaResolucionSii, maxItems:'14',
                                                    showItemNumber:'N', commentAfterDetalle:commentAfterDetalle, cuentaBancariaMail:cuentaBancariaMail, cuentaBancariaText:cuentaBancariaText,
                                                    detailHeaderBgColor:detailHeaderBgColor, detailHeaderFgColor:detailHeaderFgColor, detailHeaderSepColor:detailHeaderSepColor, tableBorderColor:tableBorderColor,
                                                    vendorNameColor:vendorNameColor]"/>

            <service-call name="mchile.sii.DTEServices.check#ProductionEnvironment" out-map="context"/>
            <set field="dteSystemIsProduction" from="systemIsProduction"/>
            <set field="dteIsProduction" from="dteIsProductionByPartyId[partyId]"/>
            <set field="boletaIsProduction" from="boletaIsProductionByPartyId[partyId]"/>
            <set field="ec.user.context.dteSystemIsProduction" from="systemIsProduction"/>
            <if condition="boletaIsProduction &amp;&amp; !dteIsProduction">
                <return error="true" message="Error de configuración, definido en producción para Boleta pero no para DTE"/>
            </if>
            <set field="tokenBoleta"/>
            <set field="tokenBoletaLastUsage"/>
        </actions>
    </service>

    <service verb="regenera" noun="PDF">
        <in-parameters>
            <parameter name="fiscalTaxDocumentId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="dteList">
                <econdition field-name="fiscalTaxDocumentId"/>
                <econdition field-name="statusId" value="Ftd-Issued"/>
            </entity-find>
            <set field="dte" from="dteList.first"/>
            <if condition="!dte"><return error="true" message="Could not find FiscalTaxDocument ${fiscalTaxDocumentId}"/></if>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="xmlList">
                <econdition field-name="fiscalTaxDocumentId"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
            </entity-find>
            <set field="xmlLocation" from="xmlList.first.contentLocation"/>
            <if condition="!xmlLocation"><return error="true" message="No XML Found, cannot generate PDF"/></if>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="xmlList">
                <econdition field-name="fiscalTaxDocumentId"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Pdf"/>
            </entity-find>
            <if condition="xmlList"><then>
                <set field="contentLocation" from="xmlList.first.contentLocation"/>
            </then><else>
                <service-call name="mchile.sii.DTEServices.get#SIICode" in-map="[fiscalTaxDocumentTypeEnumId:dte.fiscalTaxDocumentTypeEnumId]" out-map="siiCodeMap"/>
                <set field="tipoDte" from="siiCodeMap.siiCode"/>
                <set field="contentLocation" value="dbresource://moit/erp/dte/${dte.issuerPartyIdValue}/DTE-${tipoDte}-${dte.fiscalTaxDocumentNumber}.pdf"/>
                <service-call name="create#mchile.dte.FiscalTaxDocumentContent" in-map="[fiscalTaxDocumentId:fiscalTaxDocumentId, fiscalTaxDocumentContentTypeEnumId:'Ftdct-Pdf', contentLocation:contentLocation]"/>
            </else></if>
            <service-call name="mchile.sii.DTEServices.genera#PDF" in-map="[xmlLocation:xmlLocation, issuerPartyId:dte.issuerPartyId]" out-map="context"/>
            <script>ec.resource.getLocationReference(contentLocation).putBytes(pdfBytes)</script>
        </actions>
    </service>

    <service verb="genera" noun="PDF">
        <description>
            Genera archivo PDF de Factura/Boleta (envio).
        </description>
        <in-parameters>
            <parameter name="xmlLocation" required="true"/>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="boleta"/>
            <parameter name="continua"/>
            <parameter name="invoiceMessage"/>
        </in-parameters>
        <out-parameters>
            <parameter name="pdfBytes" type="byte[]"/>
            <parameter name="pdfCedibleBytes" type="byte[]"/>
        </out-parameters>
        <actions>
            <!-- Recuperacion de parametros de la organizacion -->
            <service-call name="mchile.sii.DTEServices.load#DTEConfig" in-map="[partyId:issuerPartyId]" out-map="context"/>
            <set field="template" from="pdfTemplate"/>
            <set field="giro" from="giroEmisor"/>
            <set field="pdfTemplateBoleta" from="pdfTemplateBoleta"/>
            <set field="pdfTemplateBoleta" from="pdfTemplate"/>
            <set field="pdfTemplateBoletaContinua" from="pdfTemplateBoletaContinua"/>

            <if condition="boleta">
                <set field="template" from="pdfTemplateBoleta"/>
                <if condition="continua">
                    <set field="template" from="pdfTemplateBoletaContinua"/>
                </if>
            </if>

            <if condition="!template">
                <return error="true" message="Organización emisora no tiene definida plantilla para generar PDF"/>
            </if>

            <script>
                import javax.xml.transform.stream.StreamSource

                if (invoiceMessage != null) {
                    if (commentAfterDetalle == null) {
                        commentAfterDetalle = invoiceMessage
                        transformParameters.commentAfterDetalle = invoiceMessage
                    } else {
                        commentAfterDetalle = "${commentAfterDetalle}\n${invoiceMessage}"
                        transformParameters.commentAfterDetalle = commentAfterDetalle
                    }
                }

                ByteArrayOutputStream pdf = new ByteArrayOutputStream()

                pages = ec.resource.xslFoTransform(new StreamSource(ec.resource.getLocationReference(xmlLocation).openStream()), new StreamSource(new ByteArrayInputStream(template.getBytes("UTF-8"))), pdf, "application/pdf", transformParameters + [cedible:'false'])
                pdf.close()
                if (pages == null || pages == 0) ec.message.addError("Error generando PDF: páginas generadas: ${pages}")
                pdfBytes = pdf.toByteArray()
            </script>
            <if condition="!boleta">
                <script>
                    pdf = new ByteArrayOutputStream()
                    pages = ec.resource.xslFoTransform(new StreamSource(ec.resource.getLocationReference(xmlLocation).openStream()), new StreamSource(new ByteArrayInputStream(template.getBytes("UTF-8"))), pdf, "application/pdf", transformParameters + [cedible:'true'])
                    pdf.close()
                    if (pages == null || pages == 0) ec.message.addError("Error generando PDF: páginas generadas: ${pages}")
                    pdfCedibleBytes = pdf.toByteArray()
                </script>
            </if>
        </actions>
    </service>

    <service verb="load" noun="Caf">
        <in-parameters>
            <parameter name="cafFile" type="org.apache.commons.fileupload.FileItem"/>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <actions>
            <set field="filename" from="cafFile.getName()"/>
            <service-call name="mchile.sii.DTEServices.load#DTEConfig" in-map="[partyId:partyId]" out-map="context"/>
            <set field="contentByteArray" from="cafFile.get()"/>
            <service-call name="mchile.sii.DTEServices.load#CafInternal" in-map="context" out-map="context"/>
        </actions>
    </service>

    <service verb="load" noun="CafInternal">
        <description>
            Carga CAF en Sistema
        </description>
        <in-parameters>
            <parameter name="contentLocation"/>
            <parameter name="contentByteArray" type="Object"/>
            <parameter name="filename"/>
            <parameter name="partyId" required="true"/>
            <parameter name="activateCaf" type="Boolean" default="false"/>
            <parameter name="markBlockedUpTo" type="Integer"/>
        </in-parameters>
        <out-parameters>
            <parameter name="cafId"/>
        </out-parameters>
        <actions>
            <if condition="contentLocation != null &amp;&amp; contentLocation.length() > 0 &amp;&amp; contentByteArray != null &amp;&amp; contentByteArray.size() > 0">
                <return error="true" message="Specified both, contentLocation and contentByteArray, please specify only one"/>
            </if>
            <if condition="contentByteArray == null || contentByteArray.size() == 0">
                <if condition="contentLocation == null || contentLocation.length() == 0">
                    <return error="true" message="One of contentByteArray or contentLocation is required"/>
                </if>
                <set field="contentRr" from="ec.resource.getLocationReference(contentLocation)"/>
                <set field="contentByteArray" from="contentRr.openStream().readAllBytes()"/>
                <set field="filename" from="contentRr.fileName"/>
            </if>
            <set field="cafDataString" from="new String(contentByteArray, 'ISO-8859-1')"/>
            <set field="autorizacion" from="new groovy.xml.XmlParser(false, false).parseText(cafDataString)"/>
            <set field="privateKey" from="autorizacion.RSASK.text()"/>
            <if condition="privateKey == null || privateKey.length() == 0"><then>
                <set field="privateKey" from="autorizacion.DSASK.text()"/>
                <set field="publicKey" from="autorizacion.DSAPUBK.text()"/>
                <set field="keyType" value="DSA"/>
            </then><else>
                <set field="publicKey" from="autorizacion.RSAPUBK.text()"/>
                <set field="keyType" value="RSA"/>
            </else></if>
            <script><![CDATA[
                StringWriter writer = new StringWriter()
                nodePrinter = new groovy.xml.XmlNodePrinter(new PrintWriter(writer))
                nodePrinter.setPreserveWhitespace(true)
                nodePrinter.print(autorizacion.CAF[0])
                writer.close()
                cafFragment = writer.toString()
            ]]></script>
            <set field="datosAutorizacion" from="autorizacion.CAF.DA"/>
            <set field="rango" from="datosAutorizacion.RNG"/>
            <set field="desde" from="rango.D.text()"/>
            <set field="hasta" from="rango.H.text()"/>
            <set field="fechaAutorizacion" from="ec.l10n.parseDate(datosAutorizacion.FA.text(), 'yyyy-MM-dd')"/>
            <set field="tipoDte" from="datosAutorizacion.TD.text()"/>
            <set field="fiscalTaxDocumentTypeEnumId" value="Ftdt-${tipoDte}"/>
            <set field="rutCaf" from="datosAutorizacion.RE.text()"/>

            <!-- Carga de RUT de empresa -->
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:partyId]" out-map="salidaRut"/>
            <set field="rut" from="salidaRut.rutSinFormato"/>
            <set field="rutNoDv" from="salidaRut.rutSinDv"/>

            <if condition="!rutCaf.equals(rut.trim())">
                <return error="true" message="RUT de archivo CAF no corresponde al registrado en el sistema como emisor: $rutCaf :: $rut"/>
            </if>

            <set field="createMap"
                 from="[filename:filename, desde:desde, hasta:hasta, fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, fechaAutorizacion:fechaAutorizacion,rut:rut, issuerPartyId:partyId,
                  cafData:cafDataString, publicKey:publicKey, privateKey:privateKey, keyType:keyType, cafFragment:cafFragment]"/>
            <service-call name="create#mchile.dte.Caf" out-map="context" in-map="createMap"/>


            <!-- Creación de registros para reservar folios -->
            <script><![CDATA[
                int inicio = Integer.parseInt(desde)
                int fin = Integer.parseInt(hasta)
                if (markBlockedUpTo != null && (markBlockedUpTo < inicio-1 || markBlockedUpTo > fin)) {
                    ec.message.addError("Valor markBlockedUpTo fuera de rango: ${markBlockedUpTo} no está dentro del rango del CAF de ${inicio} hasta ${fin}")
                }
                for (int folio = inicio; folio <= fin; folio++) {
                    fiscalTaxDocumentId = "$tipoDte-$rutNoDv-$folio"
                    if (markBlockedUpTo == null || folio > markBlockedUpTo)
                        statusId = 'Ftd-NotIssued'
                    else
                        statusId = 'Ftd-Blocked'
                    createMap = [fiscalTaxDocumentId:fiscalTaxDocumentId, fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, fiscalTaxDocumentNumber:folio, issuerPartyId:partyId,
                                 issuerPartyIdTypeEnumId:'PtidNationalTaxId', issuerPartyIdValue:rut, statusId:statusId, sentAuthStatusId:'Ftd-NotSentAuth', sentRecStatusId:'Ftd-NotSentRec']
                    context.putAll(ec.service.sync().name("create#mchile.dte.FiscalTaxDocument").parameters(createMap).call())
                }
            ]]></script>
            <if condition="activateCaf"><service-call name="mchile.sii.DTEServices.activar#Caf" in-map="context"/></if>
        </actions>
    </service>

    <service verb="get" noun="Folio">
        <description>
            Obtiene folio para el tipo de DTE especificado.
            Busca el folio más bajo disponible
        </description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="folio" type="Integer"/>
            <parameter name="cafFragment"/>
            <parameter name="keyType"/>
            <parameter name="privateKey"/>
        </out-parameters>
        <actions>

            <entity-find entity-name="mantle.party.PartyIdentification" list="partyIdentificationList">
                <econdition field-name="partyId"/>
                <econdition field-name="partyIdTypeEnumId" value="PtidNationalTaxId"/>
            </entity-find>
            <if condition="!partyIdentificationList.idValue[0]">
                <return error="true" message="Organización $partyId no tiene RUT definido"/>
            </if>
            <set field="rutEmisor" from="partyIdentificationList.idValue[0]"/>

            <!-- Se filtra por CAF activo (PK) para el tipo de DTE -->
            <entity-find entity-name="mchile.dte.Caf" list="cafEntryList" for-update="true">
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="issuerPartyId" from="partyId"/>
                <econdition field-name="activo" value="true"/>
                <order-by field-name="desde"/>
            </entity-find>

            <if condition="!cafEntryList">
                <return error="true" message="No existe CAF activo para DTE tipo ${fiscalTaxDocumentTypeEnumId}"/>
            </if>
            <script>
                Calendar cal = Calendar.instance
                cal.set(Calendar.HOUR_OF_DAY, 0)
                cal.set(Calendar.MINUTE, 0)
                cal.set(Calendar.SECOND, 0)
                cal.set(Calendar.MILLISECOND, 0)
                cal.add(Calendar.MONTH, -6)
                maximaFechaAutorizacion = new Timestamp(cal.timeInMillis)
            </script>
            <iterate list="cafEntryList" entry="cafEntry">
                <if condition="cafEntry.fechaAutorizacion.before(maximaFechaAutorizacion)">
                    <message type="warning">CAF ${cafEntry.cafId} expirado, no se considera</message>
                    <service-call name="mchile.sii.DTEServices.desactivar#Caf" in-map="[cafId:cafEntry.cafId]"/>
                    <continue/>
                </if>
                <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="reservedList" for-update="true">
                    <econdition field-name="fiscalTaxDocumentTypeEnumId" value="${fiscalTaxDocumentTypeEnumId}"/>
                    <econdition field-name="issuerPartyId" from="partyId"/>
                    <econdition field-name="fiscalTaxDocumentNumber" operator="greater-equals" from="cafEntry.desde"/>
                    <econdition field-name="fiscalTaxDocumentNumber" operator="less-equals" from="cafEntry.hasta"/>
                    <econdition field-name="statusId" value="Ftd-NotIssued"/>
                    <select-field field-name="fiscalTaxDocumentNumber"/>
                    <order-by field-name="fiscalTaxDocumentNumber"/>
                </entity-find>
                <if condition="reservedList"><then>
                    <set field="folio" from="reservedList.first().fiscalTaxDocumentNumber"/>
                    <set field="cafFragment" from="cafEntry.cafFragment"/>
                    <set field="privateKey" from="cafEntry.privateKey"/>
                    <set field="keyType" from="cafEntry.keyType"/>
                    <set field="rut" from="cafEntry.rut"/>
                    <set field="razonSocial" from="cafEntry.razonSocial"/>
                    <set field="desde" from="cafEntry.desde"/>
                    <set field="hasta" from="cafEntry.hasta"/>
                    <set field="fechaAutorizacion" from="cafEntry.fechaAutorizacion"/>
                    <set field="cafEntry.lastFolioUsed" from="folio"/>
                    <entity-update value-field="cafEntry"/>
                    <return/>
                </then><else>
                    <!-- No folio available, mark as inactive -->
                    <message>CAF ${cafEntry.cafId} utilizado completo, marcando como inactivo</message>
                    <service-call name="mchile.sii.DTEServices.desactivar#Caf" in-map="[cafId:cafEntry.cafId]"/>
                </else></if>
            </iterate>
            <return error="true" message="No hay folios disponibles para DTE tipo ${fiscalTaxDocumentTypeEnumId}"/>
        </actions>
    </service>

    <service verb="create" noun="DteFromInvoice">
        <description>
            Obtiene datos para llamar al método de creación de DTE
        </description>
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="sendToSii" type="Boolean" default="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/>
            <if condition="invoice == null">
                <return error="true" message="Invoice not found with ID ${invoiceId}"/>
            </if>

            <!-- Parche -->
            <set field="fechaEmision" from="ec.user.nowTimestamp"/>

            <service-call name="mantle.account.InvoiceServices.get#InvoiceDisplayInfo" in-map="[invoiceId:invoiceId]" out-map="context"/>


            <!-- Get DTE issuer and receiver from invoice -->
            <!-- For credit notes, fromPartyId and toPartyId are swapped (customer charges the vendor) -->
            <set field="issuerPartyId" from="invoice.fromPartyId"/>
            <set field="receiverPartyId" from="invoice.toPartyId"/>

            <if condition="fiscalTaxDocumentTypeEnumId == 'Ftdt-61'">
                <set field="issuerPartyId" from="invoice.toPartyId"/>
                <set field="receiverPartyId" from="invoice.fromPartyId"/>
            </if>

            <set field="fechaVencimiento" from="invoice.dueDate"/>
            <set field="fechaEmision" from="invoice.invoiceDate"/>

            <service-call name="mchile.sii.DTEServices.get#PaymentMethodInfo" in-map="[invoiceId:invoiceId]" out-map="context"/>

            <!-- Get notes for credit payment (glosa) -->
            <set field="glosaPagos" value=""/>
            <if condition="invoice.settlementTermId">
                <entity-find-one entity-name="mantle.account.invoice.SettlementTerm" value-field="settlementField">
                    <field-map field-name="settlementTermId" from="invoice.settlementTermId"/>
                    <select-field field-name="description"/>
                </entity-find-one>
                <if condition="!settlementField">
                    <return error="true" message="Credit terms do not exist"/>
                </if>
                <set field="glosaPagos" from="settlementField.description"/>
            </if>

            <!-- Return invoiceItemList, Applying discounts to parent when necessary -->
            <service-call name="mchile.sii.DTEServices.get#InvoiceItemsForDte" in-map="[invoiceId:invoiceId]" out-map="context"/>

            <!-- Calculate Sales Tax for Credit and Debit Notes -->
            <if condition="fiscalTaxDocumentTypeEnumId in ['Ftdt-56', 'Ftdt-61']">
                <service-call name="mchile.TaxServices.calculate#SalesTaxForInvoice" in-map="[invoiceId:invoiceId]"/>
            </if>

            <!-- Get issuer's RUT id -->
            <set field="partyIdTypeEnumId" value="PtidNationalTaxId"/>

            <entity-find-one entity-name="mantle.party.PartyIdentification" value-field="issuerPartyIdentification" auto-field-map="[partyId:issuerPartyId]"/>

            <if condition="!issuerPartyIdentification">
                <return error="true" message="Emisor no tiene RUT definido"/>
            </if>
            <set field="rutEmisor" from="issuerPartyIdentification.idValue"/>

            <!-- Get receiver's RUT id -->
            <entity-find-one entity-name="mantle.party.PartyIdentification" value-field="receiverPartyIdentification" auto-field-map="[partyId:receiverPartyId]"/>

            <!-- If RUT does not exist, a generic id value is used -->
            <if condition="receiverPartyIdentification"><then>
                <set field="rutReceptor" from="receiverPartyIdentification.idValue"/>
            </then><else>
                <if condition="!(fiscalTaxDocumentTypeEnumId in ['Ftdt-39','Ftdt-41'])">
                    <return error="true" message="Receiver has no RUT id value"/>
                </if>
                <set field="rutReceptor" value="66666666-6"/>
                <log level="warn" message="Receiver for DTE type ${fiscalTaxDocumentTypeEnumId}, invoice ${invoiceId}, has no RUT id value"/>
            </else></if>

            <!-- Get DTE references -->
            <service-call name="mchile.sii.DTEServices.get#Reference" in-map="context" out-map="context"/>

            <!-- Validate receiver's postal tax address -->
            <entity-find entity-name="mantle.party.contact.PartyContactMech" list="postalPcmList">
                <date-filter/>
                <econdition field-name="partyId" from="receiverPartyId"/>
                <econdition field-name="contactMechPurposeId" value="PostalTax"/>
                <econdition field-name="fromDate" operator="less-equals" from="ec.user.nowTimestamp"/>
                <econdition field-name="thruDate" from="null"/>
            </entity-find>

            <set field="contactMechId" from="postalPcmList.first?.contactMechId"/>

            <!-- Validate receiver's postal address -->
            <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="contactPostalAddressEv"/>
            <if condition="!contactPostalAddressEv"><then>
                <set field="direccionReceptor" value=""/>
                <set field="comunaReceptor" value=""/>
                <set field="ciudadReceptor" value=""/>
                <set field="receptorContactId" value=""/>
                <if condition="!(fiscalTaxDocumentTypeEnumId in ['Ftdt-39','Ftdt-41','Ftdt-56','Ftdt-61'])">
                    <return message="Receiver ${receiverPartyId} has no active postal address" error="true"/>
                </if>
            </then><else>
                <!-- Get receiver's postal address info -->
                <set field="direccionReceptor" value="${contactPostalAddressEv.address1?:''}${contactPostalAddressEv.unitNumber? (' ' + contactPostalAddressEv.unitNumber) : ''}${contactPostalAddressEv.address2? (', ' + contactPostalAddressEv.address2) : ''}"/>

                <!-- Comuna -->
                <entity-find-one entity-name="moqui.basic.Geo" value-field="geoField">
                    <field-map field-name="geoId" from="contactPostalAddressEv.stateProvinceGeoId"/>
                </entity-find-one>

                <if condition="geoField == null"><then>
                    <if condition="contactPostalAddressEv.countryGeoId == 'CHL'">
                        <return error="true" message="Dirección tributaria en Chile debe tener definida la comuna."/>
                    </if>
                    <if condition="contactPostalAddressEv.city"><then>
                        <set field="comunaReceptor" from="contactPostalAddressEv.city"/>
                    </then><else>
                        <entity-find-one entity-name="moqui.basic.Geo" value-field="geoField">
                            <field-map field-name="geoId" from="contactPostalAddressEv.countyGeoId"/>
                        </entity-find-one>
                        <set field="comunaReceptor" from="geoField.geoName"/>
                    </else></if>
                </then><else>
                    <set field="comunaReceptor" from="geoField.geoName"/>
                </else></if>

                <set field="ciudadReceptor" from="contactPostalAddressEv.city?:''"/>
                <set field="receptorContactId" from="contactPostalAddressEv.telecomContactMechId"/>
            </else></if>

            <!-- Get receiver info for DTE -->
            <entity-find-one entity-name="mantle.party.Party" value-field="partyEv">
                <field-map field-name="partyId" from="receiverPartyId"/>
            </entity-find-one>
            <set field="partyTypeEnumId" from="partyEv.partyTypeEnumId"/>
            <set field="razonSocialReceptor" value=""/>
            <set field="giroReceptor" value="Sin Giro"/>

            <!-- Case when DTE receiver is an Organization -->
            <if condition="partyTypeEnumId == 'PtyOrganization'"><then>
                <entity-find-one entity-name="mantle.party.Organization" value-field="organizationField">
                    <field-map field-name="partyId" from="receiverPartyId"/>
                </entity-find-one>
                <set field="razonSocialReceptor" from="organizationField.taxOrganizationName ?: organizationField.organizationName"/>

                <!-- Giro no es necesario en boleta - ¡CONFIRMAR! -->
                <if condition="!(fiscalTaxDocumentTypeEnumId in ['Ftdt-39', 'Ftdt-41'])">
                    <service-call name="mchile.sii.DTEServices.get#GiroPrimario" in-map="[partyId:receiverPartyId]" out-map="giroOutMap"/>
                    <set field="giroReceptor" from="giroOutMap.description"/>
                </if>

                <!-- Get tax contact and their postal address, and validate that they exist -->
                <service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="contactOut"
                              in-map="[partyId:receiverPartyId, postalContactMechPurposeId:'PostalTax']"/>
                <if condition="!contactOut.postalContactMechId">
                    <return error="true" message="Receiver has no postal tax contact"/>
                </if>

                <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="postalAddressField">
                    <field-map field-name="contactMechId" from="contactOut.postalContactMechId"/>
                </entity-find-one>
                <if condition="!postalAddressField">
                    <return error="true" message="Contacto tributario del receptor no tiene dirección postal"/>
                </if>

                <set field="contactoReceptor" from="postalAddressField.toName"/>
            </then><else-if condition="partyTypeEnumId == 'PtyPerson'">
                <!-- Case when DTE receiver is a Person -->
                <entity-find-one entity-name="mantle.party.Person" value-field="personField" auto-field-map="[partyId:receiverPartyId]"/>
                <if condition="!personField">
                    <return error="true" message="No existe persona para facturar"/>
                </if>

                <set field="razonSocialReceptor" value="${personField.firstName} ${personField.lastName}"/>
                <set field="contactoReceptor" from="razonSocialReceptor"/>
            </else-if></if>

            <!-- Get DTE references -->
            <entity-find entity-name="mchile.dte.ReferenciaDteAndFiscalCode" list="referenciaList">
                <econdition field-name="invoiceId" from="invoiceId"/>
                <order-by field-name="fiscalTaxDocumentTypeEnumId"/>
            </entity-find>
            <if condition="fiscalTaxDocumentTypeEnumId in ['Ftdt-39', 'Ftdt-41']"><then>
                <!-- Create Boleta -->
                <service-call name="mchile.sii.DTEServices.genera#Boleta" in-map="[fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, issuerPartyId:issuerPartyId,
                                        rutReceptor:rutReceptor, razonSocialReceptor:razonSocialReceptor, giroReceptor:giroReceptor, contactoReceptor:contactoReceptor,
                                        direccionReceptor:direccionReceptor, comunaReceptor:comunaReceptor, ciudadReceptor:ciudadReceptor, detailList:invoiceItemList,
                                        invoiceMessage:invoice.invoiceMessage, invoiceId:invoiceId, formaPago:formaPago, medioPago:medioPago, referenciaList:referenciaList,
                                        receiverPartyId:receiverPartyId, globalDiscount:globalDiscount, glosaDr:glosaDr, glosaPagos:glosaPagos, settlementTermId:settlementTermId,
                                        fechaEmision:fechaEmision, fechaVencimiento:fechaVencimiento]"
                              out-map="context"/>
            </then><else-if condition="fiscalTaxDocumentTypeEnumId in ['Ftdt-33', 'Ftdt-34']">
                <!-- Create Factura -->
                <service-call name="mchile.sii.DTEServices.genera#Factura" in-map="[fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, issuerPartyId:issuerPartyId,
                                    rutReceptor:rutReceptor, razonSocialReceptor:razonSocialReceptor, giroReceptor:giroReceptor, contactoReceptor:contactoReceptor,
                                    direccionReceptor:direccionReceptor, comunaReceptor:comunaReceptor, ciudadReceptor:ciudadReceptor, detailList:invoiceItemList,
                                    invoiceMessage:invoice.invoiceMessage, invoiceId:invoiceId, formaPago:formaPago, medioPago:medioPago, referenciaList:referenciaList,
                                    receiverPartyId:receiverPartyId, glosaPagos:glosaPagos, settlementTermId:settlementTermId, descuentoORecargoGlobalList:descuentoORecargoGlobalList,
                                    fechaEmision:fechaEmision, fechaVencimiento:fechaVencimiento]" out-map="context"/>
            </else-if><else-if condition="fiscalTaxDocumentTypeEnumId in ['Ftdt-56', 'Ftdt-61']">
                <!-- Create Credit or Debit Note -->
                <service-call name="mchile.sii.DTEServices.genera#Factura" in-map="[fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, rutEmisor:rutEmisor, rutReceptor:rutReceptor,
                                    razonSocialReceptor:razonSocialReceptor, giroReceptor:giroReceptor, contactoReceptor:contactoReceptor, direccionReceptor:direccionReceptor,
                                    comunaReceptor:comunaReceptor, ciudadReceptor:ciudadReceptor, detailList:invoiceItemList, invoiceId:invoiceId, returnId:returnId, formaPago:formaPago,
                                    descuentoORecargoGlobalList:descuentoORecargoGlobalList, medioPago:medioPago, referenciaList:referenciaList, issuerPartyId:issuerPartyId,
                                    receiverPartyId:receiverPartyId, fechaEmision:fechaEmision, fechaVencimiento:fechaVencimiento]" out-map="context"/>
            </else-if></if>

            <if condition="sendToSii">
                <if condition="fiscalTaxDocumentTypeEnumId in ['Ftdt-39', 'Ftdt-41']"><then>
                    <service-call name="mchile.sii.DTECommServices.genera#EnvioBoleta" in-map="[rutReceptor:'60803000-K', organizationPartyId:issuerPartyId, documentIdList:[fiscalTaxDocumentId]]" out-map="context"/>
                </then><else>
                    <service-call name="mchile.sii.DTECommServices.genera#EnvioDte" in-map="[rutReceptor:'60803000-K', organizationPartyId:issuerPartyId, documentIdList:[fiscalTaxDocumentId]]" out-map="context"/>
                </else></if>
                <script>ec.service.special().name("mchile.sii.DTECommServices.start#EnviaEnvioDteToSiiJob").parameter("envioId", envioId).registerOnCommit()</script>
            </if>
        </actions>
    </service>

    <service verb="get" noun="PaymentMethodInfo">
        <description>
            Obtains payment method and means for an invoice
        </description>
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="medioPago"/>
            <parameter name="formaPago"/>
        </out-parameters>
        <actions>
            <service-call name="mantle.account.InvoiceServices.get#InvoiceDisplayInfo" in-map="[invoiceId:invoiceId]" out-map="context"/>
            <set field="paymentId" from="paymentApplicationList.paymentId[0]"/>

            <if condition="paymentId"><then>
                <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
                <!-- Ajuste de forma de pago -->
                <set field="medioPago" value="OT"/>
                <set field="formaPago" value="3"/>
                <if condition="payment.paymentInstrumentEnumId == 'PiCreditCard'">
                    <set field="medioPago" value="TC"/>
                    <set field="formaPago" value="2"/>
                </if>
                <if condition="payment.paymentInstrumentEnumId == 'PiCompanyCheck'">
                    <set field="medioPago" value="CH"/>
                    <set field="formaPago" value="1"/>
                </if>
                <if condition="payment.paymentInstrumentEnumId == 'PiPersonalCheck'">
                    <set field="medioPago" value="CH"/>
                    <set field="formaPago" value="1"/>
                </if>
                <if condition="payment.paymentInstrumentEnumId == 'PiCompanyCheckDate'">
                    <set field="medioPago" value="CF"/>
                    <set field="formaPago" value="2"/>
                </if>
                <if condition="payment.paymentInstrumentEnumId == 'PiPersonalCheckDate'">
                    <set field="medioPago" value="CF"/>
                    <set field="formaPago" value="2"/>
                </if>
                <if condition="payment.paymentInstrumentEnumId == 'PiCash'">
                    <set field="medioPago" value="EF"/>
                    <set field="formaPago" value="1"/>
                </if>
                <if condition="payment.paymentInstrumentEnumId == 'PiLetra'">
                    <set field="medioPago" value="LT"/>
                    <set field="formaPago" value="2"/>
                </if>
                <if condition="payment.paymentInstrumentEnumId == 'PiBillingAccount'">
                    <set field="medioPago" value="PE"/>
                    <set field="formaPago" value="1"/>
                </if>
            </then><else>
                <set field="medioPago" value="PE"/>
                <set field="formaPago" value="2"/>
            </else></if>
        </actions>
    </service>

    <service verb="get" noun="InvoiceItemsForDte">
        <description>
            Obtains a list of discounted price items for an invoice
        </description>
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="invoiceItemList" type="List"/>
            <parameter name="descuentoORecargoGlobalList" type="List"/>
        </out-parameters>
        <actions>
            <!-- Items de invoice -->
            <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="invoiceItemEVList">
                <econdition field-name="invoiceId"/>
                <econdition field-name="itemTypeEnumId" operator="not-in" from="['ItemSalesTax', 'ItemVatTax', 'ItemDetailedDescription']" or-null="true"/>
                <econdition field-name="parentItemSeqId" operator="is-null"/>
                <order-by field-name="invoiceItemSeqId"/>
            </entity-find>
            <set field="invoiceItemList" from="[]"/>
            <set field="descuentoORecargoGlobalList" from="[]"/>
            <set field="numeroLineaDescuentoORecargoGlobal" from="0"/>
            <iterate list="invoiceItemEVList" entry="invoiceItemEV">
                <if condition="invoiceItemEV.itemTypeEnumId in ['ItemDiscount', 'ItemPromoDiscount']"><then>
                    <set field="numeroLineaDescuentoORecargoGlobal" from="numeroLineaDescuentoORecargoGlobal+1"/>
                    <set field="itemAmount" from="((invoiceItemEV.quantity?:0) * (invoiceItemEV.amount?:0)).setScale(0, java.math.RoundingMode.HALF_UP)"/>
                    <entity-find entity-name="mantle.order.OrderItemBilling" list="billingList">
                        <econdition field-name="invoiceId" from="invoiceId"/>
                        <econdition field-name="invoiceItemSeqId" from="invoiceItemEV.invoiceItemSeqId"/>
                    </entity-find>
                    <if condition="billingList"><then>
                        <entity-find-one entity-name="mantle.order.OrderItem" auto-field-map="billingList.first" value-field="orderItem"/>
                        <if condition="orderItem.sourcePercentage != null"><then>
                            <set field="valor" from="orderItem.sourcePercentage"/>
                            <set field="tipoValor" value="%"/>
                        </then><else>
                            <set field="valor" from="(orderItem.amount*orderItem.quantity).setScale(0, java.math.RoundingMode.HALF_UP)"/>
                            <set field="tipoValor" from="'$'"/>
                        </else></if>
                    </then><else>
                        <set field="valor" from="(orderItem.amount*orderItem.quantity).setScale(0, java.math.RoundingMode.HALF_UP)"/>
                        <set field="tipoValor" from="'$'"/>
                    </else></if>
                    <!-- ToDo: determine whether discount is afecto or exento -->
                    <script>descuentoORecargoGlobalList.add([numeroLinea:numeroLineaDescuentoORecargoGlobal, tipo:'D', afecto:true, glosa:invoiceItemEV.description, valor:valor, tipoValor:tipoValor, monto:itemAmount])</script>
                </then><else><!-- ceItemEV.description, -->
                    <set field="invoiceItem" from="invoiceItemEV.getMap()"/>
                    <script>invoiceItemList.add(invoiceItem)</script>
                    <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="subitemList">
                        <econdition field-name="invoiceId"/>
                        <econdition field-name="parentItemSeqId" from="invoiceItemEV.invoiceItemSeqId"/>
                    </entity-find>
                    <set field="first" from="true" type="Boolean"/>
                    <set field="totalDiscount" from="0" type="BigDecimal"/>
                    <iterate list="subitemList" entry="subitem">
                        <if condition="subitem.itemTypeEnumId == 'ItemDetailedDescription'"><then>
                            <set field="invoiceItem.detailedDescription" value="${invoiceItem.detailedDescription ? (invoiceItem.detailedDescription + '; '): ''}${subitem.description}"/>
                        </then><else-if condition="subitem.itemTypeEnumId == 'ItemDiscount'">
                            <entity-find entity-name="mantle.order.OrderItemBilling" list="billingList">
                                <econdition field-name="invoiceId" from="invoiceId"/>
                                <econdition field-name="invoiceItemSeqId" from="subitem.invoiceItemSeqId"/>
                            </entity-find>
                            <if condition="billingList"><then>
                                <entity-find-one entity-name="mantle.order.OrderItem" auto-field-map="billingList.first" value-field="orderItem"/>
                                <set field="hide" from="orderItem?.hideInParent == 'Y' &amp;&amp; (first || hide)"/>
                                <if condition="invoiceItem.porcentajeDescuento">
                                    <if condition="hide || invoiceItem.porcentajeDescuento == orderItem.sourcePercentage"><then>
                                        <set field="invoiceItem.porcentajeDescuento" from="orderItem.sourcePercentage"/>
                                    </then><else>
                                        <set field="invoiceItem.porcentajeDescuento" from="null"/>
                                    </else></if>
                                </if>
                            </then><else>
                                <set field="hide" from="ec.user.getPreference('mchile.dte.PreferHiddenDiscountInParent') == 'true' &amp;&amp; (first || hide)"/>
                                <set field="invoiceItem.porcentajeDescuento" from="null"/>
                            </else></if>
                            <set field="totalDiscount" from="totalDiscount + (subitem.amount*subitem.quantity as BigDecimal).setScale(0,java.math.RoundingMode.HALF_UP)"/>
                        </else-if><else-if condition="subitem.itemTypeEnumId == 'ItemDteRoundingAdjust'">
                            <set field="invoiceItem.ajusteDecimal" from="invoiceItem.ajusteDecimal?:0 + subitem.amount*subitem.quantity"/>
                        </else-if><else>
                            <return error="true" message="Unknown itemTypeEnumId for subitem ${invoiceId}:${subitem.invoiceItemSeqId}: ${subitem.itemTypeEnumId}"/>
                        </else></if>
                        <set field="first" from="false"/>
                    </iterate>
                        <if condition="hide">
                            <then>
                                <if condition="ec.user.getPreference('mchile.dte.AddDiscountSubitemDescription') == 'true'">
                                    <set field="invoiceItem.detailedDescription" value="${invoiceItem.detailedDescription ? (invoiceItem.detailedDescription + '; '): ''}Incluye ${subitem.description} por ${ec.l10n.formatCurrency((-1*subitem.amount*subitem.quantity/invoiceItem.quantity as BigDecimal).setScale(0, java.math.RoundingMode.HALF_UP), invoice.currencyUomId)}${invoiceItem.quantity > 1? ' (unitario)': ''}"/>
                                </if>
                                <set field="invoiceItem.amount" from="invoiceItem.amount + (totalDiscount/invoiceItem.quantity).setScale(0, java.math.RoundingMode.HALF_UP)"/>
                            </then>
                            <else>
                                <set field="invoiceItem.montoDescuento" from="-totalDiscount"/>
                            </else>
                        </if>
                    </else>
                </if>
            </iterate>
        </actions>
    </service>

    <service verb="validate" noun="InvoiceAndExistingDTE">
        <description>
            Validates invoice type and status, and that no previous DTE of the same type exists
        </description>
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
        </in-parameters>
        <actions>
            <if condition="!(fiscalTaxDocumentTypeEnumId in ['Ftdt-56','Ftdt-61'])">
                <return/>
            </if>

            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/>

            <if condition="fiscalTaxDocumentTypeEnumId == 'Ftdt-61'"><then>
                <if condition="!(invoice.invoiceTypeEnumId in ['InvoiceReturn', 'InvoiceCreditMemo'])">
                    <return error="true" message="Invalid invoice type (${invoice.invoiceTypeEnumId}) for DTE type ${fiscalTaxDocumentTypeEnumId}, invoiceId ${invoiceId}"/>
                </if>

                <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="existingFtdList">
                    <econdition field-name="issuerPartyId" from="invoice.toPartyId"/>
                    <econdition field-name="fiscalTaxDocumentTypeEnumId" operator="in" value="Ftdt-60,Ftdt-61"/>
                    <econdition field-name="invoiceId"/>
                </entity-find>
                <if condition="existingFtdList">
                    <return error="true" message="There is already a ${fiscalTaxDocumentTypeEnumId} DTE for invoice ${invoiceId}"/>
                </if>

                <if condition="!(invoice.statusId in ['InvoiceIncoming','InvoiceApproved','InvoicePmtSent','InvoiceReceived','InvoiceBilledThrough'])">
                    <return error="true" message="Invalid statusId for ${invoiceTypeEnumId} invoice: ${invoice.statusId}"/>
                </if>
            </then><else-if condition="fiscalTaxDocumentTypeEnumId == 'Ftdt-56'">
                <if condition="invoice.invoiceTypeEnumId != 'InvoiceDebitMemo'">
                    <return error="true" message="Invalid invoice type (${invoice.invoiceTypeEnumId}) for DTE type ${fiscalTaxDocumentTypeEnumId}, invoiceId ${invoiceId}"/>
                </if>

                <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="existingFtdList">
                    <econdition field-name="issuerPartyId" from="invoice.toPartyId"/>
                    <econdition field-name="fiscalTaxDocumentTypeEnumId" operator="in" value="Ftdt-55,Ftdt-56"/>
                    <econdition field-name="invoiceId"/>
                </entity-find>
                <if condition="existingFtdList">
                    <return error="true" message="There is already a ${fiscalTaxDocumentTypeEnumId} DTE for invoice ${invoiceId}"/>
                </if>

                <if condition="!(invoice.statusId in ['InvoiceInProcess','InvoiceIncoming','InvoiceApproved','InvoicePmtSent','InvoiceReceived','InvoiceBilledThrough'])">
                    <return error="true" message="Invalid statusId for ${invoiceTypeEnumId} invoice: ${invoice.statusId}"/>
                </if>
            </else-if></if>
        </actions>
    </service>

    <service verb="validate" noun="InvoiceItems">
        <description>
            Validates that the invoice has at least one item
        </description>
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
        </in-parameters>
        <actions>
            <if condition="fiscalTaxDocumentTypeEnumId != 'Ftdt-61'">
                <return/>
            </if>
            <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="items">
                <econdition field-name="invoiceId"/>
                <econdition field-name="itemTypeEnumId" operator="not-in" value="ItemSalesTax,ItemVatTax"/>
                <order-by field-name="invoiceItemSeqId"/>
            </entity-find>
            <if condition="!items || items.size() == 0">
                <return error="true" message="invoiceId ${invoiceId} must have at least one item"/>
            </if>
        </actions>
    </service>

    <service verb="get" noun="Reference">
        <description>
            Obtains Reference DTE for Credit or Debit Notes
        </description>
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
        </in-parameters>
        <actions>
            <if condition="!(fiscalTaxDocumentTypeEnumId in ['Ftdt-56','Ftdt-61'])">
                <return/>
            </if>

            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/>

            <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="items">
                <econdition field-name="invoiceId"/>
                <econdition field-name="itemTypeEnumId" operator="not-in" value="ItemSalesTax,ItemVatTax"/>
                <order-by field-name="invoiceItemSeqId"/>
            </entity-find>

            <entity-find entity-name="mchile.dte.ReferenciaDte" list="referenciaList">
                <econdition field-name="invoiceId" from="invoiceId"/>
                <econdition field-name="referenciaTypeEnumId" value="RefDteTypeInvoice"/>
                <order-by field-name="fiscalTaxDocumentTypeEnumId"/>
            </entity-find>
            <!-- Generacion de boletas -->
            <!--service-call name="mchile.sii.DTEServices.genera#Boleta" in-map="[fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, issuerPartyId:issuerPartyId, rutReceptor:rutReceptor, razonSocialReceptor:razonSocialReceptor, giroReceptor:giroReceptor,
                          contactoReceptor:contactoReceptor, direccionReceptor:direccionReceptor, comunaReceptor:comunaReceptor, ciudadReceptor:ciudadReceptor, detailList:invoiceItemList,
                          invoiceId:invoiceId, formaPago:formaPago, medioPago:medioPago, referenciaList:referenciaList, receiverPartyId:toPartyId, continua:continua]" out-map="context"/-->
            <if condition="referenciaList.size() == 0">
                <return error="true" message="No reference for DTE type ${fiscalTaxDocumentTypeEnumId}, invoiceId ${invoiceId}"/>
            </if>
            <if condition="referenciaList.size() > 1">
                <return error="true" message="More than one reference for DTE type ${fiscalTaxDocumentTypeEnumId}, invoiceId ${invoiceId}"/>
            </if>
            <set field="referencia" from="referenciaList.first"/>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="dteReferenciaList" for-update="true">
                <econdition field-name="issuerPartyId" from="issuerPartyId"/>
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="referencia.fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="fiscalTaxDocumentNumber" from="referencia.folio as Integer"/>
            </entity-find>
            <if condition="!dteReferenciaList">
                <return error="true" message="Could not find reference FiscalTaxDocumentId for DTE type ${fiscalTaxDocumentTypeEnumId} with invoiceId ${invoiceId}"/>
            </if>
            <if condition="!dteReferenciaList.first.invoiceId">
                <return error="true" message="Reference has no invoiceId associated (reference ${dteReferenciaList.first.referenciaId})"/>
            </if>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoiceReferencia" auto-field-map="[invoiceId:dteReferenciaList.first.invoiceId]"/>
            <if condition="invoice.invoiceTotal != null &amp;&amp; invoice.invoiceTotal != 0 &amp;&amp; invoice.invoiceTotal == invoiceReferencia.invoiceTotal"><then>
                <set field="referencia.codigoReferenciaEnumId" value="MCHRefDteCodeAnula"/>
            </then><else-if condition="invoice.invoiceTotal == 0">
                <set field="referencia.codigoReferenciaEnumId" value="MCHRefDteCodeCorrigeTexto"/>
            </else-if><else>
                <!-- Invoice must have at least one item when creating an amount correction DTE -->
                <service-call name="mchile.sii.DTEServices.validate#InvoiceItems" in-map="context"/>

                <set field="referencia.codigoReferenciaEnumId" value="MCHRefDteCodeCorrigeMonto"/>
            </else></if>
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="codRefEnum" auto-field-map="[enumId:referencia.codigoReferenciaEnumId]"/>
            <set field="referencia.razonReferencia" from="codRefEnum.description"/>
            <entity-update value-field="referencia"/>
        </actions>
    </service>

    <service verb="activar" noun="Caf">
        <description>
            Activa CAF para ser usado
        </description>
        <in-parameters>
            <parameter name="cafId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.Caf" value-field="cafField" for-update="true"/>

            <if condition="!cafField">
                <return error="true" message="No existe CAF"/>
            </if>

            <set field="cafField.activo" value="true"/>
            <entity-update value-field="cafField"/>
        </actions>
    </service>

    <service verb="desactivar" noun="Caf">
        <description>
            Desactiva CAF para no ser usado
        </description>
        <in-parameters>
            <parameter name="cafId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.Caf" value-field="cafField" for-update="true"/>

            <if condition="!cafField">
                <return error="true" message="No existe CAF"/>
            </if>

            <set field="cafField.activo" value=""/>
            <entity-update value-field="cafField"/>
        </actions>
    </service>

    <service verb="inicia" noun="EnvioLibrosSii">
        <in-parameters>
            <parameter name="documentIds" type="List" required="true"/>
        </in-parameters>
        <actions>
            <service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/>
            <if condition="!(issuerPartyId in userOrgIds)"><return error="true" message="Usuario no tiene autorización para enviar DTEs a nombre de partyId ${issuerPartyId}"/></if>

            <service-call name="mchile.sii.DTEServices.load#DTEConfig" in-map="[partyId:issuerPartyId]" out-map="context"/>

            <iterate list="documentList" entry="libroEntry">
                <set field="detailLibro" from="libroEntry instanceof List ? libroEntry : libroEntry.split('-') as List"/>
                <set field="fiscalTaxDocumentId" from="detailLibro[0]"/>
                <log level="warn" message="fiscalTaxDocumentId: $fiscalTaxDocumentId"/>
                <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="libroField">
                    <field-map field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
                </entity-find-one>
                <set field="xml" from="libroField.xml"/>

                <service-call name="mchile.sii.DTEServices.genera#EnvioLibro" in-map="[rutEnviador:rutEnviador, organizationPartyId:issuerPartyId, idS:'ID178', xml:xml ]" out-map="context"/>

                <service-call name="mchile.sii.DTECommServices.enviaSII#Envio" in-map="[envioId:envioId, organizationPartyId:issuerPartyId]" out-map="context"/>
            </iterate>
        </actions>
    </service>

    <service verb="inicia" noun="EnvioDocumentosSii">
        <description>
            Genera envíos para ser enviados al SII y/o gatilla el envío de un envío ya preparado
        </description>
        <in-parameters>
            <parameter name="documentIds" type="List" required="true"/>
        </in-parameters>
        <actions>

            <if condition="documentIds.size() &lt; 1"><return error="true" message="Debe seleccionar al menos 1 DTE para enviar"/></if>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="dteList">
                <econdition field-name="fiscalTaxDocumentId" operator="in" from="documentIds"/>
            </entity-find>
            <entity-find entity-name="mchile.dte.DteEnvioAndFiscalTaxDocument" list="envioFtdList">
                <econdition field-name="fiscalTaxDocumentId" operator="in" from="documentIds"/>
                <econdition field-name="rutReceptor" value="60803000-K"/>
                <econdition field-name="envioStatusId" value="Ftde-Created"/>
            </entity-find>
            <set field="documentosConEnvio" from="envioFtdList.fiscalTaxDocumentId"/>
            <set field="enviosAEnviar" from="new LinkedHashSet&lt;String&gt;()"/>
            <set field="dteIdList" from="[]"/>
            <set field="boletaIdList" from="[]"/>
            <iterate list="dteList" entry="dte">
                <if condition="issuerPartyId == null"><then>
                    <set field="issuerPartyId" from="dte.issuerPartyId"/>
                </then><else-if condition="dte.issuerPartyId != issuerPartyId">
                    <return error="true" message="No se pueden enviar simultáneamente DTEs de distintos emisores"/>
                </else-if></if>
                <if condition="dte.sentAuthStatusId != 'Ftd-NotSentAuth'"><then>
                    <log level="warn" message="Not sending FiscalTaxDocument ${dte.fiscalTaxDocumentId} with sentAuthStatus ${dte.sentAuthStatusId}"/>
                </then><else-if condition="dte.fiscalTaxDocumentId in documentosConEnvio">
                    <script>enviosAEnviar.addAll((envioFtdList.findAll { it -> it.fiscalTaxDocumentId == dte.fiscalTaxDocumentId }).collect { return it.envioId })</script>
                </else-if><else-if condition="dte.fiscalTaxDocumentTypeEnumId in ['Ftdt-39', 'Ftdt-41']">
                    <script>boletaIdList.add(dte.fiscalTaxDocumentId)</script>
                </else-if><else>
                    <script>dteIdList.add(dte.fiscalTaxDocumentId)</script>
                </else></if>
            </iterate>
            <service-call name="mantle.party.PartyServices.setup#UserOrganizationInfo" out-map="context"/>
            <if condition="!(issuerPartyId in userOrgIds)"><return error="true" message="Usuario no tiene autorización para enviar DTEs a nombre de partyId ${issuerPartyId}"/></if>

            <service-call name="mchile.sii.DTEServices.load#DTEConfig" in-map="[partyId:issuerPartyId]" out-map="context"/>

            <if condition="dteIdList">
                <service-call name="mchile.sii.DTECommServices.genera#EnvioDte" in-map="[organizationPartyId:issuerPartyId, documentIdList:dteIdList]" out-map="envio" transaction="force-new" ignore-error="true"/>
                <if condition="(envio?.envioId) &amp;&amp; dteIsProduction">
                    <service-call name="mchile.sii.DTECommServices.enviaSII#Envio" in-map="[envioId:envio.envioId, organizationPartyId:issuerPartyId]" out-map="context" transaction="force-new" ignore-error="true"/>
                </if>
            </if>
            <if condition="boletaIdList">
                <service-call name="mchile.sii.DTECommServices.genera#EnvioBoleta" in-map="[organizationPartyId:issuerPartyId, documentIdList:boletaIdList]" out-map="envio" transaction="force-new" ignore-error="true"/>
                <if condition="(envio?.envioId) &amp;&amp; boletaIsProduction">
                    <service-call name="mchile.sii.DTECommServices.enviaSII#EnvioBoleta" in-map="[envioId:envio.envioId, organizationPartyId:issuerPartyId]" out-map="context" transaction="force-new" ignore-error="true"/>
                </if>
            </if>
        </actions>
    </service>

    <service verb="preLoad" noun="Dte">
        <description>
            Servicio para simplificar carga de Facturas vs Boletas discriminando por los dos grandes tipos antes de parsear el XML
        </description>
        <in-parameters>
            <parameter name="invoiceId"/>
            <parameter name="xml" type="Object" required="true"/>
            <parameter name="pdf" type="Object"/>
            <parameter name="productMatch" default-value="false"/>
            <parameter name="fiscalTaxDocumentAggrEnumId" required="true"/>
            <parameter name="createUnknownIssuer" type="Boolean" default="false"/>
            <parameter name="requireIssuerInternalOrg" type="Boolean" default="false"/>
            <parameter name="createUnknownReceiver" type="Boolean" default="false"/>
            <parameter name="requireReceiverInternalOrg" type="Boolean" default="false"/>
            <parameter name="ignoreSignatureErrors" type="Boolean" default="false"/>
        </in-parameters>
        <actions>
            <if condition="fiscalTaxDocumentAggrEnumId == 'Ftdt-Boletas'"><then>
                <service-call name="mchile.sii.DTEServices.load#Boleta" in-map="context"/>
            </then><else>
                <service-call name="mchile.sii.DTEServices.load#DteFromFile" in-map="context"/>
            </else></if>
        </actions>
    </service>

    <service verb="load" noun="Boleta" type="script" location="component://MoquiChile/service/mchile/sii/DTEServices/loadBoleta.groovy">
        <description>
            Carga boleta en XML recibida por la organización
        </description>
        <in-parameters>
            <parameter name="invoiceId"/>
            <parameter name="xml" type="org.apache.commons.fileupload.FileItem" required="true"/>
            <parameter name="pdf" type="org.apache.commons.fileupload.FileItem" required="true"/>
            <parameter name="productMatch" default-value="false"/>
            <parameter name="organizationPartyId" required="true"/>
        </in-parameters>
    </service>

    <service verb="load" noun="DteFromDom" type="script" location="component://MoquiChile/service/mchile/sii/DTEServices/loadDteFromDom.groovy">
        <in-parameters>
            <parameter name="createUnknownIssuer" default="true" type="Boolean"/>
            <parameter name="requireIssuerInternalOrg" default="false" type="Boolean"/>
            <parameter name="createUnknownReceiver" default="false" type="Boolean"/>
            <parameter name="requireReceiverInternalOrg" default="false" type="Boolean"/>
            <parameter name="domNode" type="org.w3c.dom.Node" required="true"/>
            <parameter name="pdfBytes" type="Object"/>
            <parameter name="rutEmisorCaratula"><description>Rut de emisor cuando documento es enviado en un EnviaDTE con su respectiva carátula</description></parameter>
            <parameter name="rutReceptorCaratula"><description>Rut de receptor cuando documento es enviado en un EnviaDTE con su respectiva carátula</description></parameter>
            <parameter name="envioId"><description>Si el DTE forma parte de un EnvioDTE, el ID de envío DTE recibido en la BD para asociar el documento a crear</description></parameter>
            <parameter name="envioRespuestaId"><description>Si el DTE forma parte de un EnvioDTE, el ID de envío Respuesta en la BD para asociar el documento a crear</description></parameter>
            <parameter name="invoiceStatusId" default-value="InvoiceReceived"/>
            <parameter name="ignoreSignatureErrors" type="Boolean" default="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="tipoDte" type="Integer" required="true"/>
            <parameter name="folioDte" type="Integer" required="true"/>
            <parameter name="fechaEmision" required="true"/>
            <parameter name="rutEmisor" required="true"/>
            <parameter name="rutReceptor" required="true"/>
            <parameter name="montoTotal" required="true"/>
            <parameter name="estadoRecepDte" required="true"/>
            <parameter name="isDuplicated" type="Boolean"/>
            <parameter name="recepDteGlosa" required="true"/>
            <parameter name="warningMessages" type="List"/>
            <parameter name="errorMessages" type="List"/>
            <parameter name="discrepancyMessages" type="List"/>
            <parameter name="internalErrors" type="List"/>
        </out-parameters>
    </service>

    <service verb="load" noun="DteFromFile">
        <description>
            Carga DTE recibida al sistema y llama a servicio que crea orden de compra + invoice correspondiente
        </description>
        <in-parameters>
            <parameter name="createUnknownIssuer" default="true" type="Boolean"/>
            <parameter name="requireIssuerInternalOrg" default="false" type="Boolean"/>
            <parameter name="createUnknownReceiver" default="false" type="Boolean"/>
            <parameter name="requireReceiverInternalOrg" default="false" type="Boolean"/>
            <parameter name="xml" type="org.apache.commons.fileupload.FileItem" required="true"/>
            <parameter name="pdf" type="org.apache.commons.fileupload.FileItem"/>
            <parameter name="attemptProductMatch" default-value="false" type="Boolean"/>
            <parameter name="ignoreSignatureErrors" default-value="false" type="Boolean"/>
        </in-parameters>
        <out-parameters>
            <parameter name="amountImportedOk" type="Integer"/>
            <parameter name="amountImportedWithDiscrepancies" type="Integer"/>
            <parameter name="amountRejected" type="Integer"/>
            <parameter name="importedEnvios" type="Integer"/>
        </out-parameters>
        <actions>
            <script><![CDATA[
                import cl.moit.dte.MoquiDTEUtils
                import javax.xml.xpath.XPath
                import javax.xml.xpath.XPathConstants
                import javax.xml.xpath.XPathFactory
                import javax.xml.xpath.XPathExpression
                import org.moqui.context.ExecutionContext

                Integer amountImportedOk = 0
                Integer amountImportedWithDiscrepancies = 0
                Integer amountRejected = 0
                Integer importedEnvios = 0

                xmlBytes = null
                if (xml instanceof org.apache.commons.fileupload.FileItem) {
                    xmlBytes = xml.get()
                    xmlFileName = xml.name
                } else if (xml instanceof String) {
                    rr = ec.resource.getLocationReference(xml)
                    xmlBytes = rr.openStream().readAllBytes()
                    xmlFileName = rr.getFileName()
                }
                if (pdf instanceof org.apache.commons.fileupload.FileItem) {
                    pdfBytes = pdf.get()
                    pdfFileName = pdf.name
                } else if (pdf instanceof String) {
                    rr = ec.resource.getLocationReference(pdf)
                    pdfBytes = rr.openStream().readAllBytes()
                    pdfFileName = rr.getFileName()
                }

                if (xmlBytes) {
                    org.w3c.dom.Document doc = MoquiDTEUtils.parseDocument(xmlBytes)
                    org.w3c.dom.Element docElem = doc.getDocumentElement()
                    if (docElem.getNodeName() == "DTE") {
                        outMap = ec.service.sync().name("mchile.sii.DTEServices.load#DteFromDom").parameters(context + [domNode: docElem]).call()
                        if (outMap.estadoRecepDte == 0)
                            amountImportedOk++
                        else if (outMap.estadoRecepDte == 2)
                            amountRejected++
                        else if (outMap.estadoRecepDte == 1)
                            amountImportedWithDiscrepancies++
                        else
                            ec.message.addError("estadoRecepDte no reconocido: ${estadoRecepDte}")
                    } else if (docElem.getNodeName() == "SetDTE") {
                        XPath xpath = XPathFactory.newInstance().newXPath()
                        xpath.setNamespaceContext(new MoquiDTEUtils.DefaultNamespaceContext().addNamespace("sii", "http://www.sii.cl/SiiDte"))
                        XPathExpression expression = xpath.compile("/sii:SetDTE/sii:DTE")
                        org.w3c.dom.NodeList dteNodeList = (org.w3c.dom.NodeList) expression.evaluate(docElem, XPathConstants.NODESET)
                        if (dteNodeList.length == 0) {
                            expression = xpath.compile("/SetDTE/DTE")
                            dteNodeList = (org.w3c.dom.NodeList) expression.evaluate(docElem, XPathConstants.NODESET)
                        }
                        dteNodeList.each { org.w3c.dom.Node domNode ->
                            outMap = ec.service.sync().name("mchile.sii.DTEServices.load#DteFromDom").parameters(context + [domNode: domNode]).requireNewTransaction(true).call()
                            if (outMap.estadoRecepDte == 0)
                                amountImportedOk++
                            else if (outMap.estadoRecepDte == 2)
                                amountRejected++
                            else if (outMap.estadoRecepDte == 1)
                                amountImportedWithDiscrepancies++
                            else
                                ec.message.addError("estadoRecepDte no reconocido: ${estadoRecepDte}")
                        }
                        ec.message.addMessage("Procesados ${dteNodeList.length} DTEs")
                    } else if (docElem.getNodeName() in ['EnvioDTE', 'RESULTADO_ENVIO', 'RespuestaDTE', 'EnvioRecibos']) {
                        if (docElem.getNodeName() == 'EnvioDTE' && !MoquiDTEUtils.verifySignature(docElem, "/sii:EnvioDTE/sii:SetDTE", "./sii:Caratula/sii:TmstFirmaEnv/text()"))
                            ec.message.addMessage("Firma del envío inválida", "danger")
                        ec.service.sync().name("mchile.sii.DTECommServices.store#ReceivedEnvio").parameters(context + [contentBytes: xmlBytes, fileName: xmlFileName]).call()
                        importedEnvios++
                    } else {
                        ec.message.addError("Unknown document ${docElem.getNodeName()}")
                    }
                }
                ec.message.addMessage("Importados: ${amountImportedOk}, Importados con Discrepancias: ${amountImportedWithDiscrepancies}, Rechazados: ${amountRejected}, Envios: ${importedEnvios}")
                ]]></script>
        </actions>
    </service>

    <service verb="create" noun="DteFromUrl">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="invoiceId" required="true"/>
            <parameter name="contentLocation" required="true"/>
            <parameter name="contentDate" required="true"/>
            <parameter name="issuerPartyId"/>
            <parameter name="receiverPartyId"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="fiscalTaxDocumentNumber" required="true"/>
            <parameter name="fiscalTaxDocumentContentTypeEnumId" default="Ftdct-Pdf"/>
            <parameter name="indTrasladoEnumId" default-value="IndTraslado-5"/>
            <parameter name="tipoDespachoEnumId" default-value="TpoDespacho-3"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <log message="[create#DteFromFile] Reading tax document from ${contentLocation}"/>
            <script><![CDATA[
                URL url = new URL(contentLocation)
                URLConnection hc = url.openConnection()
                hc.setRequestProperty("User-Agent", "Mozilla/5.0")
                byte[] contentFile
                if (hc.getResponseCode().equals(200)) {
                    contentFile = hc.getInputStream().getBytes()
                }
            ]]></script>

            <log message="[create#DteFromFile] orderId: ${orderId}"/>

            <entity-find entity-name="mantle.order.OrderHeaderAndPart" list="orderList" distinct="true">
                <econdition field-name="orderId" from="orderId"/>
            </entity-find>
            <set field="order" from="orderList?.first"/>

            <set field="issuerPartyId" from="issuerPartyId ? issuerPartyId : order.vendorPartyId"/>
            <set field="receiverPartyId" from="receiverPartyId ? receiverPartyId : order.customerPartyId"/>

            <if condition="fiscalTaxDocumentContentTypeEnumId == 'Ftdct-Pdf'"><then>
                <set field="sentRecStatusId" value="Ftd-NotSentRec"/>
            </then><else-if condition="fiscalTaxDocumentContentTypeEnumId == 'Ftdct-Xml'">
                <set field="sentRecStatusId" value="Ftd-SentRec"/>
            </else-if><else>
                <set field="sentRecStatusId" from="null"/>
            </else></if>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:issuerPartyId]" out-map="issuerRut"/>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:receiverPartyId]" out-map="receiverRut"/>
            <set field="createMap" from="[issuerPartyId:issuerPartyId, issuerPartyIdTypeEnumId:'PtidNationalTaxId', issuerPartyIdValue:issuerRut.rutSinFormato,
                                          receiverPartyId:receiverPartyId, receiverPartyIdTypeEnumId:'PtidNationalTaxId', receiverPartyIdValue:receiverRut.rutSinFormato,
                                          fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, fiscalTaxDocumentNumber:fiscalTaxDocumentNumber,
                                          statusId:'Ftd-Issued', sentAuthStatusId:'Ftd-SentAuthAccepted', sentRecStatusId:sentRecStatusId, date:contentDate, invoiceId:invoiceId,
                                          indTrasladoEnumId:indTrasladoEnumId, tipoDespachoEnumId:tipoDespachoEnumId]"/>
            <service-call name="create#mchile.dte.FiscalTaxDocument" out-map="context" in-map="createMap"/>
            <set field="pdfContentLocation" value="dbresource://moit/erp/dte/${issuerRut?.rutSinFormato?:('partyId-'+issuerPartyId)}/DTE-${fiscalTaxDocumentTypeEnumId}-${fiscalTaxDocumentNumber}.pdf"/>
            <set field="createMap" from="[fiscalTaxDocumentId:fiscalTaxDocumentId, fiscalTaxDocumentContentTypeEnumId:'Ftdct-Pdf', contentLocation:pdfContentLocation, contentDate:contentDate]"/>
            <script>ec.resource.getLocationReference(pdfContentLocation).putBytes(contentFile)</script>
            <service-call name="create#mchile.dte.FiscalTaxDocumentContent" out-map="context" in-map="createMap"/>

            <set field="updateMap" from="[fiscalTaxDocumentId:fiscalTaxDocumentId, emailEmisor:emailEmisor, amount:amount,
                                          montoNeto:montoNeto, tasaImpuesto:tasaImpuesto, tipoImpuesto:tipoImpuesto, razonSocial:razonSocial, fechaEmision:fechaEmision,
                                          documentoAnulado:documentoAnulado, montoExento:montoExento, montoIVARecuperable:montoIVARecuperable,
                                          codigoIVANoRecuperable:codigoIVANoRecuperable, montoIVANoRecuperable:montoIVANoRecuperable, montoIVAUsoComun:montoIVAUsoComun,
                                          codigoOtroImpuestoORetencion:codigoOtroImpuestoORetencion, tasaOtroImpuestoORetencion:tasaOtroImpuestoORetencion,
                                          montoOtroImpuestoORetencionConCredito:montoOtroImpuestoORetencionConCredito,
                                          montoOtroImpuestoORetencionSinCredito:montoOtroImpuestoORetencionSinCredito, montoNetoActivoFijo:montoNetoActivoFijo,
                                          montoIVAActivoFijo:montoIVAActivoFijo, montoIVANoRetenido:montoIVANoRetenido, codigoSucursal:codigoSucursal,
                                          notasDebitoCreditoFacturasCompra:notasDebitoCreditoFacturasCompra]"/>
            <service-call name="create#mchile.dte.FiscalTaxDocumentAttributes" out-map="context" in-map="updateMap"/>

        </actions>
    </service>

    <service verb="load" noun="Dt">
        <description>
            Carga documento tributario en papel recibido de tercero
        </description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentNumber" required="true"/>
            <parameter name="invoiceId"/>
            <parameter name="pdf" type="org.apache.commons.fileupload.FileItem" required="true"/>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="amount" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="montoNeto"/>
            <parameter name="tasaImpuesto"/>
            <parameter name="tipoImpuesto"/>
            <!--parameter name="razonSocial"/-->
            <parameter name="fechaEmision" required="true"/>
            <parameter name="documentoAnulado"/>
            <parameter name="montoExento"/>
            <parameter name="montoIVARecuperable"/>
            <parameter name="codigoIVANoRecuperable"/>
            <parameter name="montoIVANoRecuperable"/>
            <parameter name="montoIVAUsoComun"/>
            <parameter name="codigoOtroImpuestoORetencion"/>
            <parameter name="tasaOtroImpuestoORetencion"/>
            <parameter name="montoOtroImpuestoORetencionConCredito"/>
            <parameter name="montoOtroImpuestoORetencionSinCredito"/>
            <parameter name="montoNetoActivoFijo"/>
            <parameter name="montoIVAActivoFijo"/>
            <parameter name="montoIVANoRetenido"/>
            <parameter name="codigoSucursal"/>
            <parameter name="notasDebitoCreditoFacturasCompra"/>
            <parameter name="receiverPartyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <set field="archivoPdf" from="pdf.getName()"/>
            <service-call name="mchile.sii.DTEServices.load#DTEConfig" in-map="[partyId:receiverPartyId]" out-map="context"/>

            <set field="ts" from="ec.l10n.parseTimestamp(fechaEmision, 'yyyy-MM-dd')"/>

            <set field="purchaseOutMap" from="[:]"/>
            <set field="invoiceOutMap" from="[:]"/>

            <if condition="!invoiceId">
                <service-call name="mchile.PurchaseServices.create#Purchase" in-map="[vendorPartyId:issuerPartyId]" out-map="purchaseOutMap"/>
                <!-- TODO: ¿Faltan items? -->
                <service-call name="mantle.account.InvoiceServices.create#EntireOrderPartInvoice" in-map="[orderId:purchaseOutMap.orderId, orderPartSeqId:purchaseOutMap.orderPartSeqId]" out-map="invoiceOutMap"/>
                <set field="invoiceId" from="invoiceOutMap.invoiceId"/>
            </if>

            <!-- Creación de FiscalTaxDocument -->
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:issuerPartyId]" out-map="issuerRut"/>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:receiverPartyId]" out-map="receiverRut"/>
            <set field="createMap" from="[issuerPartyId:issuerPartyId, issuerPartyIdTypeEnumId:'PtidNationalTaxId', issuerPartyIdValue:issuerRut.rutSinFormato, statusId:'Ftd-Issued',
                                          fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, fiscalTaxDocumentNumber:fiscalTaxDocumentNumber,
                                          receiverPartyId:receiverPartyId, receiverPartyIdTypeEnumId:'PtidNationalTaxId', receiverPartyIdValue:receiverRut.rutSinFormato,
                                          date:ts, invoiceId:invoiceId]"/>
            <service-call name="create#mchile.dte.FiscalTaxDocument" out-map="context" in-map="createMap"/>

            <!-- Creación de contenido (Solo PDF) -->
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="dteType" auto-field-map="[enumId:fiscalTaxDocumentTypeEnumId]"/>
            <set field="pdfContentLocation" value="dbresource://moit/erp/dte/${issuerRut?.rutSinFormato?:('partyId-'+issuerPartyId)}/DT-${dteType.enumCode}-${fiscalTaxDocumentNumber}.pdf"/>
            <set field="createMap" from="[fiscalTaxDocumentId:fiscalTaxDocumentId, contentDate:ts, fiscalTaxDocumentContentTypeEnumId:'Ftdct-Xml', contentLocation:pdfContentLocation]"/>
            <script>ec.resource.getLocationReference(pdfContentLocation).putStream(pdf.inputStream)</script>
            <service-call name="create#mchile.dte.FiscalTaxDocumentContent" out-map="context" in-map="createMap"/>

            <!-- Entrada en atributos -->
            <set field="updateMap" from="[fiscalTaxDocumentId:fiscalTaxDocumentId, emailEmisor:emailEmisor, amount:amount,
                                         montoNeto:montoNeto, tasaImpuesto:tasaImpuesto, tipoImpuesto:tipoImpuesto, razonSocial:razonSocial, fechaEmision:fechaEmision, documentoAnulado:documentoAnulado,
                                         montoExento:montoExento, montoIVARecuperable:montoIVARecuperable, codigoIVANoRecuperable:codigoIVANoRecuperable, montoIVANoRecuperable:montoIVANoRecuperable,
                                         montoIVAUsoComun:montoIVAUsoComun, codigoOtroImpuestoORetencion:codigoOtroImpuestoORetencion, tasaOtroImpuestoORetencion:tasaOtroImpuestoORetencion,
                                         montoOtroImpuestoORetencionConCredito:montoOtroImpuestoORetencionConCredito, montoOtroImpuestoORetencionSinCredito:montoOtroImpuestoORetencionSinCredito,
                                         montoNetoActivoFijo:montoNetoActivoFijo, montoIVAActivoFijo:montoIVAActivoFijo, montoIVANoRetenido:montoIVANoRetenido, codigoSucursal:codigoSucursal,
                                         notasDebitoCreditoFacturasCompra:notasDebitoCreditoFacturasCompra]"/>
            <service-call name="create#mchile.dte.FiscalTaxDocumentAttributes" out-map="context" in-map="updateMap"/>
        </actions>
    </service>

    <service verb="eliminar" noun="DTE">
        <description>
            Elimina registro de una DTE de cualquier tipo
        </description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="organizationPartyId" required="true"/>
        </in-parameters>
        <actions>

            <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="dteEv" for-update="true">
                <field-map field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
            </entity-find-one>
            <if condition="dteEv.statusId != 'Ftd-Issued'"><return error="true" message="No se puede eliminar DTE que no ha sido emitido"/></if>
            <if condition="dteEv.sentRecStatusId == 'Ftd-SentRec'"><return error="true" message="No se puede eliminar DTE enviada a receptor"/></if>
            <if condition="dteEv.sentAuthStatusId in ['Ftd-SentAuthAccepted', 'Ftd-SentAuthUnverified']"><return error="true" message="No se puede eliminar DTE enviada al SII"/></if>

            <!-- Borrado de atributos -->
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocumentAttributes" value-field="attributesToDelete">
                <field-map field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
            </entity-find-one>
            <if condition="attributesToDelete">
                <entity-delete value-field="attributesToDelete"/>
            </if>
            <!-- Borrado de XML -->
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocumentContent" value-field="xmlContentToDelete">
                <field-map field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
                <field-map field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
            </entity-find-one>
            <if condition="xmlContentToDelete">
                <entity-delete value-field="xmlContentToDelete"/>
            </if>
            <!-- Borrado de PDF -->
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocumentContent" value-field="pdfContentToDelete">
                <field-map field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
                <field-map field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Pdf"/>
            </entity-find-one>
            <if condition="pdfContentToDelete">
                <entity-delete value-field="pdfContentToDelete"/>
            </if>
            <!-- Borrado de PDF Cedible -->
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocumentContent" value-field="pdfContentToDelete">
                <field-map field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
                <field-map field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-PdfCedible"/>
            </entity-find-one>
            <if condition="pdfContentToDelete">
                <entity-delete value-field="pdfContentToDelete"/>
            </if>
            <!-- Se verifica si la DTE es de un tercero -->

            <set field="issuerId" from="dteEv.issuerPartyId"/>
            <if condition="issuerId == organizationPartyId"><then>
                <if condition="dteEv.invoiceId">
                    <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice" auto-field-map="[invoiceId:dteEv.invoiceId]" for-update="true"/>
                    <set field="invoice.statusId" value="InvoiceInProcess"/>
                    <entity-update value-field="invoice"/>
                </if>
                <set field="invoiceId" from="dteEv.invoiceId"/>
                <set field="dteEv.statusId" value="Ftd-NotIssued"/>
                <set field="dteEv.receiverPartyId" from="null"/>
                <set field="dteEv.receiverPartyIdTypeEnumId" from="null"/>
                <set field="dteEv.receiverPartyIdValue" from="null"/>
                <set field="dteEv.invoiceId" from="null"/>
                <set field="dteEv.trackId" from="null"/>
                <!-- TODO: Revisar que dejar receiverPartyID tal cual no afecte -->
                <!--set field="dteEv.receiverPartyId" value=""/-->
                <entity-update value-field="dteEv"/>
            </then><else><!-- DTE de tercero -->
                <!-- Si hay una aceptación creada debe borrarse -->
                <entity-find entity-name="mchile.dte.AceptacionDte" list="aceptacionList" for-update="true">
                    <econdition field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
                </entity-find>
                <iterate list="aceptacionList" entry="aceptacionEntry">
                    <entity-find-one entity-name="mchile.dte.AceptacionDte" value-field="aceptacionToDelete">
                        <field-map field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
                        <field-map field-name="aceptacionDteId" from="aceptacionEntry.aceptacionDteId"/>
                    </entity-find-one>
                    <entity-delete value-field="aceptacionToDelete"/>
                </iterate>
                <entity-delete value-field="dteEv"/>
            </else></if>
        </actions>
    </service>

    <service verb="anular" noun="DTE">
        <description>
            Marca una DTE (inicialmente boleta) como anulada
        </description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="organizationPartyId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="dteEv" for-update="true">
                <field-map field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
            </entity-find-one>

            <if condition="!dteEv">
                <return error="true" message="Boleta a anular no existe"/>
            </if>

            <set field="dteEv.statusId" value="Ftd-Cancelled"/>
            <entity-update value-field="dteEv"/>
        </actions>
    </service>

    <service verb="get" noun="InvoiceFromReturn">
        <description>
            Obtiene datos para llamar a método generar#Factura para Nota de Crédito
        </description>
        <in-parameters>
            <parameter name="returnId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="invoiceId"/>
        </out-parameters>
        <actions>
            <!-- Se busca el orderId de la devolución -->
            <entity-find entity-name="mantle.order.return.ReturnHeaderDetail" list="returnHeaderList">
                <select-field field-name="returnId,statusId,entryDate,facilityId,vendorPartyId,customerPartyId"/>
            </entity-find>

            <entity-find-one entity-name="mantle.order.return.ReturnItem" value-field="returnItemField">
                <field-map field-name="returnId" from="returnId"/>
                <select-field field-name="orderId"/>
                <select-field field-name="returnItemSeqId"/>
            </entity-find-one>

            <set field="orderId" from="returnItemField.orderId"/>
            <set field="returnItemSeqId" from="returnItemField.returnItemSeqId"/>

            <service-call name="mantle.order.OrderInfoServices.get#OrderDisplayInfo" in-map="[orderId:orderId]" out-map="invoiceList"/>

            <iterate list="invoiceList.invoiceIdSet" entry="invoiceEntry">
                <log message="Leyendo: ${invoiceEntry}" level="warn"/>
                <set field="invoiceId" from="invoiceEntry"/>
            </iterate>

        </actions>
    </service>

    <service verb="generar" noun="NotaCredito">
        <description>Obtiene datos para llamar a método generar#Factura para Nota de Crédito</description>
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
            <parameter name="sendToSii" type="Boolean" default="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <service-call name="mchile.TaxServices.calculate#SalesTaxForInvoice" in-map="[invoiceId:invoiceId]"/>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/>
            <if condition="!invoice"><return error="true" message="Could not find invoice ${invoiceId]"/></if>
            <if condition="!(invoice.invoiceTypeEnumId in ['InvoiceReturn', 'InvoiceCreditMemo'])">
                <return error="true" message="Invalid invoice type for Nota Credito ${invoice.invoiceTypeEnumId}, invoice ${invoiceId}"/>
            </if>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="existingFtdList">
                <econdition field-name="issuerPartyId" from="invoice.toPartyId"/>
                <econdition field-name="fiscalTaxDocumentTypeEnumId" operator="in" value="Ftdt-61,Ftdt-60"/>
                <econdition field-name="invoiceId"/>
            </entity-find>
            <if condition="existingFtdList"><return error="true" message="Ya existe una Nota de Crédito para invoice ${invoiceId}"/></if>
            <if condition="!(invoice.statusId in ['InvoiceIncoming','InvoiceApproved','InvoicePmtSent','InvoiceReceived','InvoiceBilledThrough'])">
                <return error="true" message="Invalid statusId for credit invoice: ${invoice.statusId}"/></if>

            <!-- En la nota de credito se invierten fromPartyId y toPartyId (cliente le cobra al vendedor) -->
            <set field="issuerPartyId" from="invoice.toPartyId"/>
            <set field="receiverPartyId" from="invoice.fromPartyId"/>

            <if condition="!receiverPartyId">
                <return error="true" message="No existe receptor asociado a Nota de Crédito invoiceId ${invoiceId}"/>
            </if>

            <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="items">
                <econdition field-name="invoiceId"/>
                <econdition field-name="itemTypeEnumId" operator="not-in" value="ItemSalesTax,ItemVatTax"/>
                <order-by field-name="invoiceItemSeqId"/>
            </entity-find>
            <if condition="!items">
                <return error="true" message="Deben existir items a corregir en Nota de Crédito"/>
            </if>

            <entity-find entity-name="mantle.party.PartyIdentification" list="partyIdentificationList">
                <econdition field-name="partyId" from="issuerPartyId"/>
                <econdition field-name="partyIdTypeEnumId" value="PtidNationalTaxId"/>
            </entity-find>

            <if condition="!partyIdentificationList">
                <return error="true" message="Organización emisora no tiene RUT definido"/>
            </if>
            <set field="rutEmisor" from="partyIdentificationList.first.idValue"/>

            <!-- Recuperación de referencias -->
            <entity-find entity-name="mchile.dte.ReferenciaDte" list="referenciaList">
                <econdition field-name="invoiceId" from="invoiceId"/>
                <econdition field-name="referenciaTypeEnumId" value="RefDteTypeInvoice"/>
                <order-by field-name="fiscalTaxDocumentTypeEnumId"/>
            </entity-find>
            <if condition="referenciaList.size() == 0">
                <return error="true" message="No hay referencia para Nota de Crédito invoiceId ${invoiceId}"/>
            </if>
            <if condition="referenciaList.size() > 1">
                <return error="true" message="Más de una referencia para Nota de Crédito invoiceId ${invoiceId}"/>
            </if>
            <set field="referencia" from="referenciaList.first"/>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="dteReferenciaList" for-update="true">
                <econdition field-name="issuerPartyId" from="invoice.toPartyId"/>
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="referencia.fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="fiscalTaxDocumentNumber" from="referencia.folio as Integer"/>
            </entity-find>
            <if condition="!dteReferenciaList"><return error="true" message="Could not find reference FiscalTaxDocumentId for credit note with invoiceId ${invoiceId}"/></if>
            <if condition="!dteReferenciaList.first.invoiceId">
                <return error="true" message="Reference has no invoiceId associated (reference ${dteReferenciaList.first.referenciaId})"/>
            </if>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoiceReferencia" auto-field-map="[invoiceId:dteReferenciaList.first.invoiceId]"/>
            <if condition="invoice.invoiceTotal != null &amp;&amp; invoice.invoiceTotal != 0 &amp;&amp; invoice.invoiceTotal == invoiceReferencia.invoiceTotal"><then>
                <set field="referencia.codigoReferenciaEnumId" value="MCHRefDteCodeAnula"/>
            </then><else-if condition="invoice.invoiceTotal == 0">
                <set field="referencia.codigoReferenciaEnumId" value="MCHRefDteCodeCorrigeTexto"/>
            </else-if><else>
                <set field="referencia.codigoReferenciaEnumId" value="MCHRefDteCodeCorrigeMonto"/>
            </else></if>
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="codRefEnum" auto-field-map="[enumId:referencia.codigoReferenciaEnumId]"/>
            <set field="referencia.razonReferencia" from="codRefEnum.description"/>
            <entity-update value-field="referencia"/>

            <set field="username"/>
            <service-call name="mantle.party.ContactServices.get#PrimaryEmailAddress" in-map="[partyId:receiverPartyId]" out-map="context"/>
            <if condition="!emailAddress"><then>
                <!--return error="true" message="Receptor no tiene dirección de correo"/-->
                <log level="warn" message="Receptor no tiene dirección de correo"/>
            </then><else>
                <set field="username" from="emailAddress"/>
            </else></if>

            <!-- rut receptor -->
            <set field="partyIdTypeEnumId" value="PtidNationalTaxId"/>
            <entity-find-one entity-name="mantle.party.PartyIdentification" value-field="partyIdentificationEv" auto-field-map="[partyId:receiverPartyId, partyIdTypeEnumId:'PtidNationalTaxId']"/>
            <set field="rutReceptor"/>
            <if condition="!partyIdentificationEv"><then>
                <log message="Receptor no tiene RUT" level="warn"/>
                <set field="rutReceptor" from="'66666666-6'"/>
            </then><else>
                <set field="rutReceptor" from="partyIdentificationEv.idValue"/>
            </else></if>

            <!-- Datos para encontrar contacto -->

            <set field="contactMechId"/>

            <!-- Modificado para quedarse con la dirección válida a la fecha actual -->
            <!--entity-find-one entity-name="mantle.party.contact.PartyContactMech" value-field="contactMechField">
                <field-map field-name="partyId" from="partyId"/>
                <field-map field-name="contactMechPurposeId" value="PostalTax"/>
            </entity-find-one-->

            <entity-find entity-name="mantle.party.contact.PartyContactMech" list="contactMechList">
                <econdition field-name="partyId" from="receiverPartyId"/>
                <econdition field-name="contactMechPurposeId" value="PostalTax"/>
                <date-filter/>
            </entity-find>

            <if condition="!contactMechList">
                <return error="true" message="Receptor no tiene dirección activa para impuestos"/>
            </if>

            <!--set field="contactMechId" from="contactMechField.contactMechId"/-->
            <set field="contactMechId" from="contactMechList.contactMechId.first()"/>

            <!-- Datos de contacto -->
            <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="contactPostalAddressEv"/>
            <set field="direccionReceptor" value="${contactPostalAddressEv.address1?:''}${contactPostalAddressEv.unitNumber? (' ' + contactPostalAddressEv.unitNumber) : ''}${contactPostalAddressEv.address2? (', ' + contactPostalAddressEv.address2) : ''}"/>

            <service-call name="mchile.GeoServices.get#ComunaFromGeoId" in-map="[stateProvinceGeoId:contactPostalAddressEv.stateProvinceGeoId]" out-map="comunaOut"/>

            <set field="comunaReceptor" from="comunaOut.comuna"/>

            <if condition="!comunaReceptor">
                <return error="true" message="Receptor no tiene comuna/ciudad definida $contactMechId"/>
            </if>
            <!-- ID Contacto receptor -->
            <set field="receptorContactId" from="contactPostalAddressEv.telecomContactMechId"/>

            <entity-find-one entity-name="mantle.party.Party" value-field="partyEv" auto-field-map="[partyId:receiverPartyId]"/>
            <if condition="!partyEv">
                <return error="true" message="Receptor no existe"/>
            </if>

            <set field="partyTypeEnumId" from="partyEv.partyTypeEnumId"/>

            <set field="razonSocialReceptor" value=""/>
            <set field="contactoReceptor" value=""/>
            <set field="giroReceptor" value="Sin Giro"/>

            <if condition="partyTypeEnumId == 'PtyOrganization'">
                <!-- Organizacion -->
                <entity-find-one entity-name="mantle.party.Organization" value-field="organizationField" auto-field-map="[partyId:receiverPartyId]"/>
                <set field="razonSocialReceptor" from="organizationField.organizationName"/>

                <service-call name="mchile.sii.DTEServices.get#GiroPrimario" in-map="[partyId:receiverPartyId]" out-map="giroOutMap"/>
                <set field="giroReceptor" from="giroOutMap.description"/>
                <!--set field="giroReceptor" from="organizationField.giro"/-->

                <!-- Obtención de contacto para impuestos en organización -->
                <service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="contactOut"
                              in-map="[partyId:receiverPartyId, postalContactMechPurposeId:'PostalTax']"/>
                <if condition="!contactOut.postalContactMechId">
                    <return error="true" message="Receptor no tiene contacto tributario asignado"/>
                </if>
                <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="postalAddressField">
                    <field-map field-name="contactMechId" from="contactOut.postalContactMechId"/>
                </entity-find-one>
                <!-- Obtención de contacto en organización -->
                <if condition="!postalAddressField">
                    <return error="true" message="Nombre receptor no encontrado"/>
                </if>

                <set field="contactoReceptor" from="postalAddressField.toName"/>
            </if>
            <if condition="partyTypeEnumId == 'PtyPerson'">
                <entity-find-one entity-name="mantle.party.Person" value-field="personField">
                    <field-map field-name="partyId" from="receiverPartyId" />
                </entity-find-one>
                <if condition="!personField">
                    <return error="true" message="No existe persona para facturar"/>
                </if>

                <set field="razonSocialReceptor" from="personField.firstName"/>
                <script>razonSocialReceptor = razonSocialReceptor + " " + personField.lastName</script>
                <set field="contactoReceptor" from="razonSocialReceptor"/>
            </if>

            <!-- Generacion de nota de crédito -->
            <service-call name="mchile.sii.DTEServices.genera#Factura" in-map="[fiscalTaxDocumentTypeEnumId:'Ftdt-61', rutEmisor:rutEmisor, rutReceptor:rutReceptor, razonSocialReceptor:razonSocialReceptor, giroReceptor:giroReceptor,
                          contactoReceptor:contactoReceptor, direccionReceptor:direccionReceptor, comunaReceptor:comunaReceptor, ciudadReceptor:ciudadReceptor, detailList:items,
                          invoiceId:invoiceId, returnId:returnId, formaPago:formaPago, medioPago:medioPago, referenciaList:referenciaList, issuerPartyId:issuerPartyId, receiverPartyId:receiverPartyId]" out-map="context"/>
            <if condition="sendToSii">
                <service-call name="mchile.sii.DTECommServices.genera#EnvioDte" in-map="[organizationPartyId:issuerPartyId, documentIdList:[fiscalTaxDocumentId]]" out-map="context"/>
                <if condition="dteIsProduction">
                    <script>ec.service.special().name("mchile.sii.DTECommServices.start#EnviaEnvioDteToSiiJob").parameter("envioId", envioId).registerOnCommit()</script>
                </if>
            </if>
        </actions>
    </service>

    <service verb="generar" noun="NotaDebito">
        <description>
            Obtiene datos para llamar a método generar#Factura para Nota de Debito
        </description>
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
            <parameter name="sendToSii" type="Boolean" default="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <service-call name="mchile.TaxServices.calculate#SalesTaxForInvoice" in-map="[invoiceId:invoiceId]"/>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/>
            <if condition="!invoice"><return error="true" message="Could not find invoice ${invoiceId]"/></if>
            <if condition="invoice.invoiceTypeEnumId != 'InvoiceDebitMemo'">
                <return error="true" message="Invalid invoice type for Nota Débito ${invoice.invoiceTypeEnumId}, invoice ${invoiceId}"/>
            </if>

            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="existingFtdList">
                <econdition field-name="issuerPartyId" from="invoice.toPartyId"/>
                <econdition field-name="fiscalTaxDocumentTypeEnumId" operator="in" value="Ftdt-55,Ftdt-56"/>
                <econdition field-name="invoiceId"/>
            </entity-find>
            <if condition="existingFtdList"><return error="true" message="Ya existe una Nota de Débito para invoice ${invoiceId}"/></if>

            <if condition="!(invoice.statusId in ['InvoiceInProcess','InvoiceIncoming','InvoiceApproved','InvoicePmtSent','InvoiceReceived','InvoiceBilledThrough'])">
                <return error="true" message="Invalid statusId for debit invoice: ${invoice.statusId}"/>
            </if>

            <!-- Recuperación de referencias -->
            <entity-find entity-name="mchile.dte.ReferenciaDte" list="referenciaList">
                <econdition field-name="invoiceId" from="invoiceId"/>
                <econdition field-name="referenciaTypeEnumId" value="RefDteTypeInvoice"/>
                <order-by field-name="fiscalTaxDocumentTypeEnumId"/>
            </entity-find>
            <if condition="referenciaList.size() == 0">
                <return error="true" message="No existen referencias para Nota de Débito invoiceId ${invoiceId}"/>
            </if>
            <if condition="referenciaList.size() > 1">
                <return error="true" message="Existe más de una referencia para Nota de Débito invoiceId ${invoiceId}"/>
            </if>
            <set field="referencia" from="referenciaList.first"/>

            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="dteReferenciaList" for-update="true">
                <!--<econdition field-name="issuerPartyId" from="invoice.fromPartyId"/>-->
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="referencia.fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="fiscalTaxDocumentNumber" from="referencia.folio as Integer"/>
            </entity-find>
            <if condition="!dteReferenciaList">
                <return error="true" message="Could not find reference FiscalTaxDocumentId for debit note with invoiceId ${invoiceId}"/>
            </if>
            <if condition="!dteReferenciaList.first.invoiceId">
                <return error="true" message="Reference has no invoiceId associated (reference ${dteReferenciaList.first.referenciaId})"/>
            </if>

            <set field="issuerPartyId" from="invoice.fromPartyId"/>
            <set field="receiverPartyId" from="invoice.toPartyId"/>
            <if condition="!receiverPartyId">
                <return error="true" message="No existe receptor asociado a Memo de Débito invoiceId ${invoiceId}"/>
            </if>

            <entity-find entity-name="mantle.party.PartyIdentification" list="partyIdentificationList">
                <econdition field-name="partyId" from="issuerPartyId"/>
                <econdition field-name="partyIdTypeEnumId" value="PtidNationalTaxId"/>
            </entity-find>
            <if condition="!partyIdentificationList">
                <return error="true" message="Organización emisora no tiene RUT definido"/>
            </if>
            <set field="rutEmisor" from="partyIdentificationList.first.idValue"/>

            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoiceReferencia" auto-field-map="[invoiceId:dteReferenciaList.first.invoiceId]"/>

            <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="items">
                <econdition field-name="invoiceId"/>
                <econdition field-name="itemTypeEnumId" operator="not-in" value="ItemSalesTax,ItemVatTax"/>
                <order-by field-name="invoiceItemSeqId"/>
            </entity-find>

            <if condition="invoice.invoiceTotal != null &amp;&amp; invoice.invoiceTotal != 0 &amp;&amp; invoice.invoiceTotal == invoiceReferencia.invoiceTotal"><then>
                <set field="referencia.codigoReferenciaEnumId" value="MCHRefDteCodeAnula"/>
            </then><else-if condition="invoice.invoiceTotal == 0">
                <set field="referencia.codigoReferenciaEnumId" value="MCHRefDteCodeCorrigeTexto"/>
            </else-if><else>
                <!-- Una Nota de Débito de correción de monto o cantidad debe llevar items -->
                <if condition="!items">
                    <return error="true" message="Deben existir items a corregir en Nota de Débito"/>
                </if>
                <set field="referencia.codigoReferenciaEnumId" value="MCHRefDteCodeCorrigeMonto"/>
            </else></if>

            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="codRefEnum" auto-field-map="[enumId:referencia.codigoReferenciaEnumId]"/>
            <set field="referencia.razonReferencia" from="codRefEnum.description"/>
            <entity-update value-field="referencia"/>

            <set field="username"/>
            <service-call name="mantle.party.ContactServices.get#PrimaryEmailAddress" in-map="[partyId:receiverPartyId]" out-map="context"/>
            <if condition="!emailAddress"><then>
                <log level="warn" message="Receptor no tiene dirección de correo"/>
            </then><else>
                <set field="username" from="emailAddress"/>
            </else></if>

            <!-- rut receptor -->
            <set field="partyIdTypeEnumId" value="PtidNationalTaxId"/>
            <entity-find-one entity-name="mantle.party.PartyIdentification" value-field="partyIdentificationEv" auto-field-map="[partyId:receiverPartyId, partyIdTypeEnumId:'PtidNationalTaxId']"/>
            <set field="rutReceptor"/>
            <if condition="!partyIdentificationEv"><then>
                <log message="Receptor no tiene RUT" level="warn"/>
                <set field="rutReceptor" from="'66666666-6'"/>
            </then><else>
                <set field="rutReceptor" from="partyIdentificationEv.idValue"/>
            </else></if>

            <!-- Datos para encontrar contacto -->
            <set field="contactMechId"/>
            <entity-find entity-name="mantle.party.contact.PartyContactMech" list="contactMechList">
                <econdition field-name="partyId" from="receiverPartyId"/>
                <econdition field-name="contactMechPurposeId" value="PostalTax"/>
                <date-filter/>
            </entity-find>

            <if condition="!contactMechList">
                <return error="true" message="Receptor no tiene dirección activa para impuestos"/>
            </if>

            <set field="contactMechId" from="contactMechList.contactMechId.first()"/>

            <!-- Datos de contacto -->
            <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="contactPostalAddressEv"/>
            <set field="direccionReceptor" value="${contactPostalAddressEv.address1?:''}${contactPostalAddressEv.unitNumber? (' ' + contactPostalAddressEv.unitNumber) : ''}${contactPostalAddressEv.address2? (', ' + contactPostalAddressEv.address2) : ''}"/>

            <service-call name="mchile.GeoServices.get#ComunaFromGeoId" in-map="[stateProvinceGeoId:contactPostalAddressEv.stateProvinceGeoId]" out-map="comunaOut"/>

            <set field="comunaReceptor" from="comunaOut.comuna"/>

            <if condition="!comunaReceptor">
                <return error="true" message="Receptor no tiene comuna/ciudad definida $contactMechId"/>
            </if>

            <!-- ID Contacto receptor -->
            <set field="receptorContactId" from="contactPostalAddressEv.telecomContactMechId"/>

            <entity-find-one entity-name="mantle.party.Party" value-field="partyEv" auto-field-map="[partyId:receiverPartyId]"/>
            <if condition="!partyEv">
                <return error="true" message="Receptor no existe"/>
            </if>

            <set field="partyTypeEnumId" from="partyEv.partyTypeEnumId"/>

            <set field="razonSocialReceptor" value=""/>
            <set field="contactoReceptor" value=""/>
            <set field="giroReceptor" value="Sin Giro"/>

            <if condition="partyTypeEnumId == 'PtyOrganization'"><then>
                <!-- Organización -->
                <entity-find-one entity-name="mantle.party.Organization" value-field="organizationField" auto-field-map="[partyId:receiverPartyId]"/>
                <set field="razonSocialReceptor" from="organizationField.organizationName"/>

                <service-call name="mchile.sii.DTEServices.get#GiroPrimario" in-map="[partyId:receiverPartyId]" out-map="giroOutMap"/>
                <set field="giroReceptor" from="giroOutMap.description"/>

                <!-- Obtención de contacto tributario en organización -->
                <service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="contactOut"
                              in-map="[partyId:receiverPartyId, postalContactMechPurposeId:'PostalTax']"/>
                <if condition="!contactOut.postalContactMechId">
                    <return error="true" message="Receptor no tiene contacto tributario asignado"/>
                </if>
                <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="postalAddressField">
                    <field-map field-name="contactMechId" from="contactOut.postalContactMechId"/>
                </entity-find-one>

                <!-- Obtención de contacto en organización -->
                <if condition="!postalAddressField">
                    <return error="true" message="Nombre receptor no encontrado"/>
                </if>

                <set field="contactoReceptor" from="postalAddressField.toName"/>
            </then><else-if condition="partyTypeEnumId == 'PtyPerson'">
                <entity-find-one entity-name="mantle.party.Person" value-field="personField">
                    <field-map field-name="partyId" from="receiverPartyId" />
                </entity-find-one>
                <if condition="!personField">
                    <return error="true" message="No existe persona para facturar"/>
                </if>

                <set field="razonSocialReceptor" from="personField.firstName"/>
                <script>razonSocialReceptor = razonSocialReceptor + " " + personField.lastName</script>
                <set field="contactoReceptor" from="razonSocialReceptor"/>
            </else-if></if>

            <!-- Generacion de nota de débito -->
            <service-call name="mchile.sii.DTEServices.genera#Factura" in-map="[fiscalTaxDocumentTypeEnumId:'Ftdt-56', rutEmisor:rutEmisor, rutReceptor:rutReceptor, razonSocialReceptor:razonSocialReceptor, giroReceptor:giroReceptor,
                          contactoReceptor:contactoReceptor, direccionReceptor:direccionReceptor, comunaReceptor:comunaReceptor, ciudadReceptor:ciudadReceptor, detailList:items,
                          invoiceId:invoiceId, returnId:returnId, formaPago:formaPago, medioPago:medioPago, referenciaList:referenciaList, issuerPartyId:issuerPartyId, receiverPartyId:receiverPartyId]" out-map="context"/>
            <if condition="sendToSii">
                <service-call name="mchile.sii.DTECommServices.genera#EnvioDte" in-map="[organizationPartyId:issuerPartyId, documentIdList:[fiscalTaxDocumentId]]"
                              out-map="context"/>
                <script>ec.service.job("sii_dte_EnviaEnvioDteToSii").parameter("envioId", envioId).run()</script>
            </if>
        </actions>
    </service>

    <service verb="agregar" noun="Referencia">
        <description>
            Agrega una referencia para DTE (excepto Nota de Débito)
        </description>
        <in-parameters>
            <parameter name="invoiceId"/>
            <parameter name="shipmentId"/>
            <parameter name="folio" required="true"/>
            <parameter name="rutOtroContribuyente" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="idAdicional"/>
            <parameter name="fecha" required="true"/>
            <parameter name="codigoReferenciaEnumId" required="true"/>
            <parameter name="razonReferencia"/>
        </in-parameters>
        <actions>
            <!-- Verificación de RUT -->
            <service-call name="mchile.GeneralServices.verify#Rut" in-map="[rut:rutOtroContribuyente]"/>
            <set field="createMap" from="[fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, codigoReferenciaEnumId:codigoReferenciaEnumId, fecha:fecha, rut:rutOtroContribuyente, idAdicional:idAdicional,
                                          folio:folio, invoiceId:invoiceId, razonReferencia:razonReferencia, referenciaTypeEnumId:'RefDteTypeInvoice']"/>
            <service-call name="create#mchile.dte.ReferenciaDte" out-map="context" in-map="createMap"/>
        </actions>
    </service>

    <service verb="agregar" noun="RefNotaDebito">
        <description>Agrega una referencia para asociar DTE con nota de débito</description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentId"/>
            <parameter name="folio" required="true"/>
            <parameter name="rutOtroContribuyente" required="true"/>
            <parameter name="idAdicional"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="fecha" type="Date" required="true"/>
            <parameter name="codigoReferenciaEnumId" required="true"/>
            <parameter name="razonReferencia"/>
        </in-parameters>
        <actions>
            <!-- Verificación de RUT -->
            <service-call name="mchile.GeneralServices.verify#Rut" in-map="[rut:rutOtroContribuyente]"/>

            <!-- Inserción en tabla referenciaFactura -->
            <set field="createMap" from="[codigoReferenciaEnumId:codigoReferenciaEnumId, fecha:fecha, rut:rutOtroContribuyente, idAdicional:idAdicional,
                                          folio:folio, fiscalTaxDocumentId:fiscalTaxDocumentId, razonReferencia:razonReferencia, fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId,
                                          referenciaTypeEnumId:'RefDteTypeNotaDebito']"/>
            <service-call name="create#mchile.dte.ReferenciaDte" out-map="context" in-map="createMap"/>
        </actions>
    </service>

    <service verb="agregar" noun="RefShipment">
        <description>
            Agrega una referencia para asociar DTE shipment/guía de despacho
        </description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentId"/>
            <parameter name="folio" required="true"/>
            <parameter name="rutOtroContribuyente" required="true"/>
            <parameter name="idAdicional"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="fecha" required="true"/>
            <parameter name="codigoReferenciaEnumId" required="true"/>
            <parameter name="razonReferencia"/>
            <parameter name="shipmentId" required="true"/>
        </in-parameters>
        <actions>
            <!-- Verificación de RUT -->
            <service-call name="mchile.GeneralServices.verify#Rut" in-map="[rut:rutOtroContribuyente]"/>

            <!-- Inserción en tabla referenciaShipment -->
            <set field="createMap" from="[shipmentId:shipmentId, codigoReferenciaEnumId:codigoReferenciaEnumId, fecha:fecha, rut:rutOtroContribuyente, idAdicional:idAdicional,
                                          folio:folio, fiscalTaxDocumentId:fiscalTaxDocumentId, razonReferencia:razonReferencia, fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId,
                                          referenciaTypeEnumId:'RefDteTypeShipment']"/>
            <service-call name="create#mchile.dte.ReferenciaDte" out-map="context" in-map="createMap"/>
        </actions>
    </service>

    <service verb="eliminar" noun="Referencia">
        <description>Eliminar referencia de una DTE</description>
        <in-parameters>
            <parameter name="referenciaId"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.ReferenciaDte" value-field="referenciaField" for-update="true"/>
            <entity-delete value-field="referenciaField"/>
        </actions>
    </service>

    <service verb="get" noun="DteContent">
        <in-parameters>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="fiscalTaxDocumentContentTypeEnumId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="content"/>
            <parameter name="contentRef"/>
        </out-parameters>
        <actions>
            <set field="content" from="null"/>
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocumentContent" value-field="contentField"/>
            <if condition="contentField">
                <set field="content" from="contentField.contentLocation"/>
                <script>
                    docRr = ec.resource.getLocationReference(contentField.contentLocation)
                </script>
                <set field="contentRef" from="docRr"/>
            </if>
        </actions>
    </service>

    <service verb="get" noun="SIICode">
        <in-parameters>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="enumTypeId" default-value="FiscalTaxDocumentType"/>
        </in-parameters>
        <out-parameters>
            <parameter name="siiCode" type="Integer"/>
        </out-parameters>
        <actions>
            <set field="siiCode" from="null"/>
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="enumField">
                <field-map field-name="enumId" from="fiscalTaxDocumentTypeEnumId"/>
                <field-map field-name="enumTypeId"/>
            </entity-find-one>
            <set field="siiCode" from="enumField.enumCode" type="Integer"/>
        </actions>
    </service>

    <service verb="get" noun="MoquiSIICode">
        <in-parameters>
            <parameter name="siiCode" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentTypeEnumId"/>
        </out-parameters>
        <actions>
            <set field="fiscalTaxDocumentTypeEnumId" from="null"/>
            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="enumField">
                <field-map field-name="enumCode" from="siiCode"/>
                <field-map field-name="enumTypeId" value="FiscalTaxDocumentType"/>
            </entity-find-one>
            <set field="fiscalTaxDocumentTypeEnumId" from="enumField?.enumId"/>
        </actions>
    </service>

    <service verb="check" noun="Afecto">
        <in-parameters>
            <parameter name="productId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="afecto"/>
        </out-parameters>
        <actions>
            <set field="afecto" value="true"/>
            <entity-find entity-name="mantle.product.category.ProductCategoryMember" list="categoryMemberList">
                <econdition field-name="productId" from="productId"/>
                <econdition field-name="productCategoryId" value="ClVatTaxExento"/>
                <date-filter/>
            </entity-find>
            <if condition="categoryMemberList"><set field="afecto" value="false"/></if>
        </actions>
    </service>

    <service verb="genera" noun="Boleta" type="script" location="component://MoquiChile/service/mchile/sii/DTEServices/generaBoleta.groovy">
        <description>
            Generación de Boleta acuerdo a plantilla
        </description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="rutReceptor" required="true"/>
            <parameter name="receiverPartyId" required="true"/>
            <parameter name="razonSocialReceptor" required="true"/>
            <parameter name="giroReceptor"/>
            <parameter name="contactoReceptor"/>
            <parameter name="direccionReceptor"/>
            <parameter name="comunaReceptor"/>
            <parameter name="ciudadReceptor"/>
            <parameter name="detailList" type="List"/>
            <parameter name="invoiceId"/>
            <parameter name="shipmentId"/>
            <parameter name="medioPago"/>
            <parameter name="formaPago"/>
            <parameter name="referenciaList" type="List"/>
            <parameter name="globalDiscount"/>
            <parameter name="glosaDr"/>
            <parameter name="glosaPagos"/>
            <parameter name="indTrasladoEnumId"/>
            <parameter name="tipoDespacho" type="Integer"/>
            <parameter name="settlementTermId"/>
            <parameter name="invoiceMessage"/>
            <parameter name="fechaEmision" type="Date" default="ec.user.nowTimestamp"/>
            <parameter name="fechaVencimiento" type="Date"/>
            <parameter name="tipoDespacho"/>
            <parameter name="codigosActividadEconomica"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
    </service>

    <service verb="genera" noun="RCOF" type="script" location="component://MoquiChile/service/mchile/sii/DTEServices/generaRCOF.groovy">
        <description>Generación de Registro de Consumo de Folios</description>
        <in-parameters>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="fechaInicio"/>
            <parameter name="fechaFin"/>
            <parameter name="saveSinFirma" type="Boolean" default="false"/>
        </in-parameters>
    </service>

    <service verb="genera" noun="DailyRCOF">
        <description>Generación de Registro de Consumo de Folios</description>
        <in-parameters>
            <parameter name="organizationPartyId" required="true"/>
        </in-parameters>
        <actions>
            <!-- Obtencion de fecha actual, formato YYYY-MM-DD -->
            <script>
                import java.text.DateFormat;
                import java.text.SimpleDateFormat;
                import java.util.Date;

                java.sql.Timestamp timestamp = new Timestamp(System.currentTimeMillis());
                Date d = new java.sql.Date(timestamp.getTime());
                DateFormat f = new SimpleDateFormat("YYYY-MM-dd");
                fecha = f.format(d);

            </script>
            <service-call name="mchile.sii.DTEServices.genera#RCOF" out-map="context" in-map="[fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId, fechaInicio:fecha, fechaFin:fecha,organizationPartyId:organizationPartyId]"/>
        </actions>
    </service>

    <service verb="update" noun="ShipmentIndTraslado">
        <in-parameters>
            <parameter name="shipmentId" required="true"/>
            <parameter name="indTrasladoEnumId" required="true"/>
            <parameter name="tipoDespachoEnumId"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipmentEv">
                <field-map field-name="shipmentId" from="shipmentId"/>
            </entity-find-one>
            <set field="shipmentEv.indTrasladoEnumId" from="indTrasladoEnumId"/>
            <if condition="tipoDespachoEnumId">
                <set field="shipmentEv.tipoDespachoEnumId" from="tipoDespachoEnumId"/>
            </if>
            <entity-update value-field="shipmentEv"/>
        </actions>
    </service>

    <service verb="generar" noun="GuiaDespacho" no-tx-cache="true">
        <description>
            Obtiene datos para generar Guía de Despacho a partir de un shipment
        </description>
        <in-parameters>
            <parameter name="shipmentId" required="true"/>
            <parameter name="indTrasladoEnumId" required="true"/>
            <parameter name="tipoDespachoEnumId"/>
            <parameter name="settlementTermId"/>
            <parameter name="sendToSii" type="Boolean" default="true"/>
            <parameter name="fechaEmision" type="Date" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <set field="glosaPagos"/>
            <if condition="settlementTermId">
                <entity-find-one entity-name="mantle.account.invoice.SettlementTerm" value-field="settlementField">
                    <field-map field-name="settlementTermId" from="settlementTermId"/>
                    <select-field field-name="description"/>
                </entity-find-one>
                <if condition="!settlementTermId">
                    <return error="true" message="Términos de crédito no existentes"/>
                </if>
                <set field="glosaPagos" from="settlementField.description"/>
            </if>
            <if condition="!glosaPagos"><set field="glosaPagos" value=""/></if>

            <entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment"/>
            <if condition="!shipment">
                <return error="true" message="No existe despacho"/>
            </if>
            <entity-find entity-name="mantle.shipment.ShipmentItemDetail" list="shipmentItemDetailList">
                <econdition field-name="shipmentId"/>
                <order-by field-name="productId"/>
            </entity-find>
            <if condition="shipmentItemDetailList.size() == 0">
                <return message="No hay elementos a enviar"/>
            </if>

            <set field="issuerPartyId" from="shipment.fromPartyId"/>
            <entity-find entity-name="mantle.party.PartyIdentification" list="partyIdentificationList">
                <econdition field-name="partyId" from="issuerPartyId"/>
                <econdition field-name="partyIdTypeEnumId" value="PtidNationalTaxId"/>
            </entity-find>

            <if condition="!partyIdentificationList.idValue[0]">
                <return error="true" message="Organización no tiene RUT definido"/>
            </if>
            <set field="rutEmisor" from="partyIdentificationList.idValue[0]"/>

            <!-- Recuperación de referencias -->
            <entity-find entity-name="mchile.dte.ReferenciaDte" list="referenciaList">
                <econdition field-name="shipmentId" from="shipmentId"/>
                <econdition field-name="referenciaTypeEnumId" value="RefDteTypeShipment"/>
            </entity-find>

            <if condition="!shipment.toPartyId">
                <return error="true" message="No existe tercero asociado a despacho"/>
            </if>
            <set field="partyId" from="shipment.toPartyId"/>
            <set field="indTrasladoEnumId" from="shipment.indTrasladoEnumId"/>
            <set field="tipoDespachoEnumId" from="shipment.tipoDespachoEnumId"/>

            <service-call name="mantle.party.ContactServices.get#PrimaryEmailAddress" in-map="[partyId:shipment.toPartyId]" out-map="context"/>
            <if condition="!emailAddress">
                <return error="true" message="Receptor no tiene dirección de correo"/>
            </if>
            <set field="username" from="emailAddress"/>

            <!-- rut receptor -->
            <set field="partyIdTypeEnumId" value="PtidNationalTaxId"/>
            <entity-find-one entity-name="mantle.party.PartyIdentification" value-field="partyIdentificationEv"/>

            <if condition="!partyIdentificationEv">
                <return error="true" message="Receptor no tiene RUT"/>
            </if>

            <set field="rutReceptor" from="partyIdentificationEv.idValue"/>

            <!-- Datos para encontrar contacto -->
            <entity-find entity-name="mantle.party.contact.PartyContactMech" list="contactMechList">
                <econdition field-name="partyId" from="partyId"/>
                <econdition field-name="contactMechPurposeId" value="PostalTax"/>
                <econdition field-name="fromDate" operator="less-equals" from="ec.user.nowTimestamp"/>
                <econdition field-name="thruDate" from="null"/>
            </entity-find>

            <if condition="!contactMechList">
                <return error="true" message="Receptor no tiene dirección para impuestos"/>
            </if>
            <set field="contactMechId" from="contactMechList.contactMechId.first()"/>

            <!-- Datos de contacto -->
            <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="contactPostalAddressEv"/>

            <if condition="!contactPostalAddressEv">
                <return error="true" message="Receptor no tiene dirección postal"/>
            </if>

            <set field="direccionReceptor" value="${contactPostalAddressEv.address1?:''}${contactPostalAddressEv.unitNumber? (' ' + contactPostalAddressEv.unitNumber) : ''}${contactPostalAddressEv.address2? (', ' + contactPostalAddressEv.address2) : ''}"/>
            <set field="comunaReceptor" from="contactPostalAddressEv.city"/>

            <!-- Obtención de contacto para impuestos en organización -->
            <service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="contactOut"
                          in-map="[partyId:partyId, postalContactMechPurposeId:'PostalTax']"/>
            <if condition="!contactOut.postalContactMechId">
            </if>
            <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="postalAddressField">
                <field-map field-name="contactMechId" from="contactOut.postalContactMechId"/>
            </entity-find-one>

            <set field="comunaReceptor" from="postalAddressField.stateProvinceGeoId"/>

            <service-call name="mchile.GeoServices.get#ComunaFromGeoId" in-map="[stateProvinceGeoId:postalAddressField.stateProvinceGeoId]" out-map="comunaOut"/>

            <set field="comunaReceptor" from="comunaOut.comuna"/>
            <!-- ID Contacto receptor -->
            <set field="receptorContactId" from="contactPostalAddressEv.telecomContactMechId"/>

            <entity-find-one entity-name="mantle.party.Party" value-field="partyEv"/>
            <if condition="!partyEv">
                <return error="true" message="Receptor no existe"/>
            </if>

            <set field="partyTypeEnumId" from="partyEv.partyTypeEnumId"/>
            <set field="razonSocialReceptor" value=""/>
            <set field="contactoReceptor" value=""/>
            <set field="giroReceptor" value="Sin Giro"/>

            <if condition="partyTypeEnumId == 'PtyOrganization'">
                <!-- Organizacion -->
                <entity-find-one entity-name="mantle.party.Organization" value-field="organizationField"/>
                <set field="razonSocialReceptor" from="organizationField.organizationName"/>
                <!--set field="giroReceptor" from="organizationField.giro"/!>
                <if condition="!giroReceptor">
                    <return error="true" message="Organización no tiene giro ingresado"/>
                </if-->
                <service-call name="mchile.sii.DTEServices.get#GiroPrimario" in-map="[partyId:partyId]" out-map="giroOutMap"/>
                <set field="giroReceptor" from="giroOutMap.description"/>
                <!-- Obtención de contacto para impuestos en organización -->
                <service-call name="mantle.party.ContactServices.get#PartyContactInfo" out-map="contactOut"
                              in-map="[partyId:partyId, postalContactMechPurposeId:'PostalTax']"/>
                <if condition="!contactOut.postalContactMechId">
                    <return error="true" message="Receptor no tiene contacto tributario asignado"/>
                </if>
                <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="postalAddressField">
                    <field-map field-name="contactMechId" from="contactOut.postalContactMechId"/>
                </entity-find-one>
                <!-- Obtención de contacto en organización -->
                <if condition="!postalAddressField">
                    <return error="true" message="Nombre receptor no encontrado"/>
                </if>

                <set field="contactoReceptor" from="postalAddressField.toName"/>
            </if>

            <if condition="partyTypeEnumId == 'PtyPerson'">
                <!-- Persona Natural -->
                <entity-find-one entity-name="mantle.party.Person" value-field="personField"/>
                <if condition="!personField">
                    <return error="true" message="No existe persona para facturar"/>
                </if>

                <set field="razonSocialReceptor" from="personField.firstName"/>
                <script>
                    razonSocialReceptor = razonSocialReceptor + " " + personField.lastName
                </script>
                <set field="contactoReceptor" from="razonSocialReceptor"/>
            </if>

            <if condition="tipoDespachoEnumId">
                <service-call name="mchile.sii.DTEServices.get#SIICode" in-map="[fiscalTaxDocumentTypeEnumId:tipoDespachoEnumId, enumTypeId:'TipoDespacho']" out-map="codeOut"/>
                <set field="tipoDespacho" from="codeOut.siiCode"/>
            </if>

            <set field="medioPago" value="PE"/>
            <set field="formaPago" value="2"/>

            <!-- Generacion de guía de despacho -->
            <service-call name="mchile.sii.DTEServices.genera#Factura" in-map="[fiscalTaxDocumentTypeEnumId:'Ftdt-52', rutEmisor:rutEmisor, rutReceptor:rutReceptor,
                                razonSocialReceptor:razonSocialReceptor, giroReceptor:giroReceptor, contactoReceptor:contactoReceptor,direccionReceptor:direccionReceptor,
                                comunaReceptor:comunaReceptor, ciudadReceptor:ciudadReceptor, detailList:shipmentItemDetailList, invoiceId:invoiceId, returnId:returnId,
                                formaPago:formaPago, medioPago:medioPago, referenciaList:referenciaList, issuerPartyId:issuerPartyId, receiverPartyId:partyId,
                                indTrasladoEnumId:indTrasladoEnumId, tipoDespacho:tipoDespacho, shipmentId:shipmentId, glosaPagos:glosaPagos, settlementTermId:settlementTermId,
                                fechaEmision:fechaEmision]" out-map="context"/>
            <if condition="sendToSii">
                <service-call name="mchile.sii.DTECommServices.genera#EnvioDte" in-map="[organizationPartyId:issuerPartyId, documentIdList:[fiscalTaxDocumentId]]" out-map="context"/>
                <script>ec.service.special().name("mchile.sii.DTECommServices.start#EnviaEnvioDteToSiiJob").parameter("envioId", envioId).registerOnCommit()</script>
            </if>
        </actions>
    </service>

    <service verb="get" noun="GiroPrimario">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="giroId"/>
            <parameter name="description"/>
        </out-parameters>
        <actions>

            <entity-find-one entity-name="mchile.dte.PartyGiro" value-field="giroField">
                <field-map field-name="partyId" from="partyId"/>
                <field-map field-name="isPrimary" value="Primario"/>
            </entity-find-one>
            <if condition="giroField == null">
                <then>
                    <entity-find-one entity-name="mchile.dte.PartyGiro" value-field="giroField">
                        <field-map field-name="partyId" from="partyId"/>
                    </entity-find-one>
                    <if condition="!giroField">
                        <return error="true" message="Empresa de ID ${partyId} no tiene giro primario o giro registrado"/>
                    </if>
                </then>
            </if>
            <set field="giroId" from="giroField.giroId"/>
            <set field="description" from="giroField.description"/>
        </actions>
    </service>

    <service verb="validar" noun="DTE" authenticate="anonymous-all">
        <in-parameters>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="rutEmisor" required="true"/>
            <parameter name="folio" required="true" type="Integer"/>
            <parameter name="fechaEmision" required="true"/>
            <parameter name="monto" required="true" type="Integer"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <!-- Se busca partyId de acuerdo a emisor -->
            <entity-find-one entity-name="mantle.party.PartyIdentification" value-field="partyIdentificationEv">
                <field-map field-name="idValue" from="rutEmisor"/>
                <field-map field-name="partyIdTypeEnumId" value="PtidNationalTaxId"/>
            </entity-find-one>
            <if condition="!partyIdentificationEv">
                <message>No se encontró documento con los parámetros ingresados</message>
                <set field="fiscalTaxDocumentId"/>
                <return/>
            </if>
            <set field="issuerPartyId" from="partyIdentificationEv.partyId"/>

            <!-- Se verifica en tabla principal -->
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdtList">
                <econdition field-name="fiscalTaxDocumentNumber" from="folio"/>
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="statusId" value="Ftd-Issued"/>
                <econdition field-name="issuerPartyId" from="issuerPartyId"/>
            </entity-find>
            <set field="ftdtField" from="ftdtList.first"/>
            <if condition="!ftdtField">
                <message>No se encontró documento con los parámetros ingresados</message>
                <set field="fiscalTaxDocumentId"/>
                <return/>
            </if>

            <set field="fiscalTaxDocumentId" from="ftdtField.fiscalTaxDocumentId"/>
            <log level="warn" message="DTE Encontrada: $fiscalTaxDocumentId"/>
            <!-- Se buscan atributos en mchile.dte.FiscalTaxDocumentAttributes -->
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentAttributes" list="ftdtAttList">
                <econdition field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
                <econdition field-name="amount" from="monto"/>
                <econdition field-name="fechaEmision" from="fechaEmision"/>
            </entity-find>

            <if condition="!ftdtAttList">
                <message>No se encontró documento con los parámetros ingresados</message>
                <set field="fiscalTaxDocumentId"/>
                <return/>
            </if>

        </actions>
    </service>

    <service verb="get" noun="ResumenRcof">
        <in-parameters>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="fechaInicio" required="true" type="Timestamp"/>
            <parameter name="fechaFin" required="true" type="Timestamp"/>
            <parameter name="organizationPartyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="totalMontoNeto" type="BigDecimal"/>
            <parameter name="totalMontoIva" type="BigDecimal"/><!-- Se toma monto IVA Recuperable -->
            <parameter name="tasaIva"/>
            <parameter name="totalMontoExento"/>
            <parameter name="totalMontoTotal"/>
            <parameter name="cantDocEmitidos"/>
            <parameter name="cantFoliosAnulados"/>
            <parameter name="cantDocUtilizados"/>
            <parameter name="rangosFoliosUtilizados" type="List"/>
            <parameter name="rangosFoliosAnulados" type="List"/>
        </out-parameters>
        <actions>
            <set field="totalMontoNeto" from="0"/>
            <set field="totalMontoIva" from="0"/>
            <set field="totalMontoExento" from="0"/>
            <set field="totalMontoTotal" from="0"/>
            <set field="cantDocEmitidos" from="0"/>
            <set field="cantFoliosAnulados" from="0"/>
            <set field="cantDocUtilizados" from="0"/>
            <set field="tasaIva" from="19"/>
            <set field="rangosFoliosUtilizados" type="List"/>
            <set field="rangosFoliosAnulados" type="List"/>
            <script>
                Calendar cal = Calendar.getInstance()
                cal.setTimeInMillis(fechaFin.getTime())
                // add x hours
                cal.add(Calendar.HOUR, 24)
                fechaFin = new Timestamp(cal.getTime().getTime())
            </script>

            <entity-find entity-name="mchile.dte.FtdtAttributesView" list="dteList">
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="statusId" operator="in" value="Ftd-Issued,Ftd-Cancelled"/>
                <econdition field-name="issuerPartyId" from="organizationPartyId"/>
                <econdition field-name="date" operator="greater-equals" from="fechaInicio"/>
                <econdition field-name="date" operator="less" from="fechaFin"/>
                <order-by field-name="fiscalTaxDocumentId"/>
            </entity-find>


            <iterate list="dteList" entry="dteEv">
                <!--log level="warn" message="Atributos encontrados: $dteEv.fiscalTaxDocumentId, Monto Neto: $dteEv.montoNeto, monto IVA: $dteEv.montoIVARecuperable, tipo: $dteEv.statusId"/-->
                <if condition="!dteEv.statusId.equals('Ftd-Cancelled')">
                    <then>
                        <script>
                            if (dteEv.montoNeto != null) {
                                long montoNeto = (long) dteEv.montoNeto
                                totalMontoNeto = totalMontoNeto + montoNeto
                            }
                            if (dteEv.montoIVARecuperable != null) {
                                long montoIva = (long) dteEv.montoIVARecuperable
                                totalMontoIva = totalMontoIva + montoIva
                            }
                            if (dteEv.montoExento != null) {
                                long montoExento = (long) dteEv.montoExento
                                totalMontoExento = totalMontoExento + montoExento
                            }
                            cantDocEmitidos = cantDocEmitidos + 1
                        </script>
                    </then>
                    <else><!-- Documento cancelado -->
                        <!--log message="DTE Cancelada" level="warn"/-->
                        <script>
                            cantFoliosAnulados = cantFoliosAnulados + 1
                        </script>
                    </else>
                </if>
            </iterate>
            <set field="cantDocUtilizados" from="cantFoliosAnulados + cantDocEmitidos"/>
            <set field="totalMontoTotal" from="totalMontoNeto + totalMontoExento + totalMontoIva"/>

            <!-- TODO: Consulta para ver todos los folios usados -->
            <entity-find entity-name="mchile.dte.FtdtAttributesView" list="dteList">
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="statusId" value="Ftd-Issued"/>
                <econdition field-name="issuerPartyId" from="organizationPartyId"/>
                <econdition field-name="date" operator="greater-equals" from="fechaInicio"/>
                <econdition field-name="date" operator="less-equals" from="fechaFin"/>
                <order-by field-name="fiscalTaxDocumentId"/>
            </entity-find>
            <script>
                List&lt;Integer&gt; list
                List&lt;List&lt;Integer&gt;&gt; lList = new ArrayList&lt;List&lt;Integer&gt;&gt;()
                int i = 0
                int start = 0
                List&lt;Integer&gt; sList = new ArrayList&lt;Integer&gt;(2)
                int listSize = 0

                for (i = 1; i &lt; dteList.size(); i++) {
                    if (dteList.get(i-1).fiscalTaxDocumentNumber + 1 != dteList.get(i).fiscalTaxDocumentNumber) {
                        sList.add(dteList.get(start).fiscalTaxDocumentNumber)
                        sList.add(dteList.get(i-1).fiscalTaxDocumentNumber)
                        lList.add(sList)
                        sList = new ArrayList&lt;Integer&gt;(2)
                        start = i
                    }
                }
                if (dteList.size() &gt; 0) {
                    sList.add(dteList.get(start).fiscalTaxDocumentNumber)
                    sList.add(dteList.get(dteList.size()-1).fiscalTaxDocumentNumber)
                    lList.add(sList)
                }
                logger.warn("Lista de rangos emitidos: " + lList)

            </script>

            <!-- TODO: Consulta para ver todos los folios anulados -->
            <entity-find entity-name="mchile.dte.FtdtAttributesView" list="dteList">
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="statusId" value="Ftd-Cancelled"/>
                <econdition field-name="issuerPartyId" from="organizationPartyId"/>
                <econdition field-name="date" operator="greater-equals" from="fechaInicio"/>
                <econdition field-name="date" operator="less-equals" from="fechaFin"/>
                <order-by field-name="fiscalTaxDocumentId"/>
            </entity-find>


            <script>
                List&lt;Integer&gt; listc
                List&lt;List&lt;Integer&gt;&gt; lListc = new ArrayList&lt;List&lt;Integer&gt;&gt;()
                i = 0
                start = 0
                List&lt;Integer&gt; sListc = new ArrayList&lt;Integer&gt;(2)
                for (i = 1; i &lt; dteList.size(); i++) {
                    if (dteList.get(i-1).fiscalTaxDocumentNumber + 1 != dteList.get(i).fiscalTaxDocumentNumber) {
                        sListc.add(dteList.get(start).fiscalTaxDocumentNumber)
                        sListc.add(dteList.get(i-1).fiscalTaxDocumentNumber)
                        lListc.add(sList)
                        sListc = new ArrayList&lt;Integer&gt;(2)
                        start = i
                    }
                }
                if (dteList.size() &gt; 0) {
                    sListc.add(dteList.get(start).fiscalTaxDocumentNumber)
                    sListc.add(dteList.get(dteList.size()-1).fiscalTaxDocumentNumber)
                    lListc.add(sListc)
                }
                logger.warn("Lista de rangos anulados: " + lListc)
            </script>
            <set field="rangosFoliosUtilizados" from="lList"/>
            <set field="rangosFoliosAnulados" from="lListc"/>
        </actions>
    </service>

    <service verb="get" noun="ResumenRcofNC">
        <description>
            Servicio que devuelve resumen de NC emitidas que refieren a boletas (39, 41)
        </description>
        <in-parameters>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="fechaInicio" required="true" type="Timestamp"/>
            <parameter name="fechaFin" required="true" type="Timestamp"/>
            <parameter name="organizationPartyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="totalMontoNeto" type="BigDecimal"/>
            <parameter name="totalMontoIva" type="BigDecimal"/><!-- Se toma monto IVA Recuperable -->
            <parameter name="tasaIva"/>
            <parameter name="totalMontoExento"/>
            <parameter name="totalMontoTotal"/>
            <parameter name="cantDocEmitidos"/>
            <parameter name="cantFoliosAnulados"/>
            <parameter name="cantDocUtilizados"/>
            <parameter name="rangosFoliosUtilizados" type="List"/>
            <parameter name="rangosFoliosAnulados" type="List"/>
        </out-parameters>
        <actions>
            <set field="totalMontoNeto" from="0"/>
            <set field="totalMontoIva" from="0"/>
            <set field="totalMontoExento" from="0"/>
            <set field="totalMontoTotal" from="0"/>
            <set field="cantDocEmitidos" from="0"/>
            <set field="cantFoliosAnulados" from="0"/>
            <set field="cantDocUtilizados" from="0"/>
            <set field="tasaIva" from="19"/>
            <set field="rangosFoliosUtilizados" type="List"/>
            <set field="rangosFoliosAnulados" type="List"/>
            <script>
                Calendar cal = Calendar.getInstance()
                cal.setTimeInMillis(fechaFin.getTime())
                // add x hours
                cal.add(Calendar.HOUR, 24)
                fechaFin = new Timestamp(cal.getTime().getTime())
            </script>

            <entity-find entity-name="mchile.dte.FtdtAttributesView" list="dteList">
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="statusId" operator="in" value="Ftd-Issued,Ftd-Cancelled"/>
                <econdition field-name="issuerPartyId" from="organizationPartyId"/>
                <econdition field-name="date" operator="greater-equals" from="fechaInicio"/>
                <econdition field-name="date" operator="less-equals" from="fechaFin"/>
                <order-by field-name="fiscalTaxDocumentId"/>
            </entity-find>


            <iterate list="dteList" entry="dteEv">
                <!--log level="warn" message="Atributos encontrados: $dteEv.fiscalTaxDocumentId, Monto Neto: $dteEv.montoNeto, monto IVA: $dteEv.montoIVARecuperable, tipo: $dteEv.statusId"/-->
                <if condition="!dteEv.statusId.equals('Ftd-Cancelled')">
                    <then>
                        <script>
                            if (dteEv.montoNeto != null) {
                                long montoNeto = (long) dteEv.montoNeto
                                totalMontoNeto = totalMontoNeto + montoNeto
                            }
                            if (dteEv.montoIVARecuperable != null) {
                                long montoIva = (long) dteEv.montoIVARecuperable
                                totalMontoIva = totalMontoIva + montoIva
                            }
                            if (dteEv.montoExento != null) {
                                long montoExento = (long) dteEv.montoExento
                                totalMontoExento = totalMontoExento + montoExento
                            }
                            cantDocEmitidos = cantDocEmitidos + 1
                        </script>
                    </then>
                    <else><!-- Documento cancelado -->
                        <!--log message="DTE Cancelada" level="warn"/-->
                        <script>
                            cantFoliosAnulados = cantFoliosAnulados + 1
                        </script>
                    </else>
                </if>
            </iterate>
            <set field="cantDocUtilizados" from="cantFoliosAnulados + cantDocEmitidos"/>
            <set field="totalMontoTotal" from="totalMontoNeto + totalMontoExento + totalMontoIva"/>
            <!--return error="true" message="NC: $cantDocUtilizados - $totalMontoTotal"/-->

            <!-- TODO: Consulta para ver todos los folios usados -->
            <entity-find entity-name="mchile.dte.FtdtAttributesView" list="dteList">
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="statusId" value="Ftd-Issued"/>
                <econdition field-name="issuerPartyId" from="organizationPartyId"/>
                <econdition field-name="date" operator="greater-equals" from="fechaInicio"/>
                <econdition field-name="date" operator="less-equals" from="fechaFin"/>
                <order-by field-name="fiscalTaxDocumentId"/>
            </entity-find>
            <script>
                List&lt;Integer&gt; list
                List&lt;List&lt;Integer&gt;&gt; lList = new ArrayList&lt;List&lt;Integer&gt;&gt;()
                int i = 0
                int start = 0
                List&lt;Integer&gt; sList = new ArrayList&lt;Integer&gt;(2)
                int listSize = 0

                for (i = 1; i &lt; dteList.size(); i++) {
                    if (dteList.get(i-1).fiscalTaxDocumentNumber + 1 != dteList.get(i).fiscalTaxDocumentNumber) {
                        sList.add(dteList.get(start).fiscalTaxDocumentNumber)
                        sList.add(dteList.get(i-1).fiscalTaxDocumentNumber)
                        lList.add(sList)
                        sList = new ArrayList&lt;Integer&gt;(2)
                        start = i
                    }
                }
                if (dteList.size() &gt; 0) {
                    sList.add(dteList.get(start).fiscalTaxDocumentNumber)
                    sList.add(dteList.get(dteList.size()-1).fiscalTaxDocumentNumber)
                    lList.add(sList)
                }
                logger.warn("Lista de rangos emitidos: " + lList)

            </script>

            <!-- TODO: Consulta para ver todos los folios anulados -->
            <entity-find entity-name="mchile.dte.FtdtAttributesView" list="dteList">
                <econdition field-name="fiscalTaxDocumentTypeEnumId" from="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="statusId" value="Ftd-Cancelled"/>
                <econdition field-name="issuerPartyId" from="organizationPartyId"/>
                <econdition field-name="date" operator="greater-equals" from="fechaInicio"/>
                <econdition field-name="date" operator="less-equals" from="fechaFin"/>
                <order-by field-name="fiscalTaxDocumentId"/>
            </entity-find>


            <script>
                List&lt;Integer&gt; listc
                List&lt;List&lt;Integer&gt;&gt; lListc = new ArrayList&lt;List&lt;Integer&gt;&gt;()
                i = 0
                start = 0
                List&lt;Integer&gt; sListc = new ArrayList&lt;Integer&gt;(2)
                for (i = 1; i &lt; dteList.size(); i++) {
                    if (dteList.get(i-1).fiscalTaxDocumentNumber + 1 != dteList.get(i).fiscalTaxDocumentNumber) {
                        sListc.add(dteList.get(start).fiscalTaxDocumentNumber)
                        sListc.add(dteList.get(i-1).fiscalTaxDocumentNumber)
                        lListc.add(sList)
                        sListc = new ArrayList&lt;Integer&gt;(2)
                        start = i
                    }
                }
                if (dteList.size() &gt; 0) {
                    sListc.add(dteList.get(start).fiscalTaxDocumentNumber)
                    sListc.add(dteList.get(dteList.size()-1).fiscalTaxDocumentNumber)
                    lListc.add(sListc)
                }
                logger.warn("Lista de rangos anulados: " + lListc)
            </script>
            <set field="rangosFoliosUtilizados" from="lList"/>
            <set field="rangosFoliosAnulados" from="lListc"/>
        </actions>
    </service>

    <service verb="load" noun="DteContent">
        <description>
            Carga XML/PDF/PDF Cedible directo en la BD
        </description>
        <in-parameters>
            <parameter name="filename" type="org.apache.commons.fileupload.FileItem"/>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="fiscalTaxDocumentContentTypeEnumId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="ftdtList">
                <econdition field-name="fiscalTaxDocumentId" from="fiscalTaxDocumentId"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" from="fiscalTaxDocumentContentTypeEnumId"/>
            </entity-find>

            <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="fiscalTaxDocument"/>
            <set field="tipoFactura" from="fiscalTaxDocument.FiscalTaxDocumentType.sequenceNum"/>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[rut:fiscalTaxDocument.issuerPartyId]" out-map="rut"/>
            <set field="rutEmisor" from="rut.rutSinFormato"/>

            <iterate list="ftdtList" entry="ftdtEntry">
                <set field="ftdtEntry.contentLocation" value="dbresource://moit/erp/dte/${rutEmisor}/DTE-${tipoFactura}-${folio}.xml"/>
                <script>
                    docRr = ec.resource.locationReference(ftdtEntry.contentLocation)
                    docRr.putStream(filename.getInputStream())
                </script>
                <entity-update value-field="ftdtEntry"/>
            </iterate>
        </actions>
    </service>

    <service verb="update" noun="PartyDteParameters">
        <in-parameters>
            <auto-parameters entity-name="mchile.dte.PartyDteParams"/>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.PartyDteParams" list="paramsList">
                <econdition field-name="partyId"/>
            </entity-find>

            <if condition="paramsList"><then>
                <service-call name="update#mchile.dte.PartyDteParams" in-map="context"/>
            </then><else>
                <service-call name="create#mchile.dte.PartyDteParams" in-map="[partyId:partyId, templatePdf:templatePdf, templatePdfBoleta:templatePdfBoleta,
                                  templatePdfBoletaContinua:templatePdfBoletaContinua, logo:logo, fechaResolucionSii:fechResol, numeroResolucionSii:numeroResolucionSii, rutEmisor:rutEmisor,
                                  rutEnviador:rutEnviador, razonSocialEmisor:razonSocialEmisor, codigoSucursalSii:codigoSucursalSii, direccionOrigen:direccionOrigen, comunaOrigen:comunaOrigen, ciudadOrigen:ciudadOrigen,
                                  passCert:passCert, nombreContacto:nombreContacto, mailContacto:mailContacto, fonoContacto:fonoContacto]"/>
            </else></if>
        </actions>
    </service>

    <service verb="load" noun="Certificate">
        <description>Carga Certificado Digital para firmar DTE</description>
        <in-parameters>
            <parameter name="certificateFile" type="org.apache.commons.fileupload.FileItem"/>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="encoding" default-value="UTF-8"/>
            <parameter name="passCert" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.PartyDteParams" value-field="dteParams" for-update="true">
                <field-map field-name="partyId" from="organizationPartyId"/>
            </entity-find-one>
            <if condition="!dteParams">
                <return error="true" message="Primero complete parametros de organizacion"/>
            </if>
            <set field="dteParams.certData" from="certificateFile.get().encodeBase64()" type="String"/>
            <set field="dteParams.passCert" from="passCert"/>
            <!--set field="dteParams.certData" from="certificateFile.getString(encoding)"/-->

            <entity-update value-field="dteParams"/>
        </actions>
    </service>

    <service verb="load" noun="PDFTemplate">
        <description>Carga Plantilla para generar PDF</description>
        <in-parameters>
            <parameter name="templateFile" type="org.apache.commons.fileupload.FileItem"/>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="encoding" required="true"/>
            <parameter name="type" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.PartyDteParams" value-field="dteParams" for-update="true">
                <field-map field-name="partyId" from="organizationPartyId"/>
            </entity-find-one>


            <if condition="type == 'DTE'">
                <set field="dteParams.pdfTemplate" from="templateFile.getString(encoding)"/>
            </if>

            <if condition="type == 'Boleta'">
                <set field="dteParams.pdfTemplateBoleta" from="templateFile.getString(encoding)"/>
            </if>

            <if condition="type == 'BoletaContinua'">
                <set field="dteParams.pdfTemplateBoletaContinua" from="templateFile.getString(encoding)"/>
            </if>

            <set field="logFile" from="templateFile.getName()"/>
            <log level="info" message="Subiendo plantilla PDF $type:$type:  $logFile"/>

            <entity-update value-field="dteParams"/>
        </actions>
    </service>

    <service verb="add" noun="ReferenceToInvoice">
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
            <parameter name="referenceText" default-value=" - "/>
            <parameter name="folioRef"/>
            <parameter name="tipoDocRef"/>
            <parameter name="fecha" type="Date"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.ReferenciaDte" value-field="refEv" for-update="true">
                <field-map field-name="invoiceId" from="invoiceId"/>
                <field-map field-name="fiscalTaxDocumentTypeEnumId" from="tipoDocRef"/>
                <field-map field-name="folio" from="folioRef"/>
                <field-map field-name="referenciaTypeEnumId" value="RefDteTypeInvoice"/>
            </entity-find-one>

            <if condition="!refEv">
                <then>
                    <!-- Hay que crear entrada para referencia de invoiceId -->
                    <set field="createMap" from="[fiscalTaxDocumentTypeEnumId:tipoDocRef, codigoReferenciaEnumId:codigoReferenciaEnumId, fecha:fecha, folio:folioRef, invoiceId:invoiceId, razonReferencia:referenceText, referenciaTypeEnumId:'RefDteTypeInvoice']"/>
                    <service-call name="create#mchile.dte.ReferenciaDte" out-map="context" in-map="createMap"/>
                </then>
                <else>
                    <!-- Ya existe una referencia -->
                    <set field="refEv.folio" from="folioRef"/>
                    <set field="refEv.fiscalTaxDocumentTypeEnumId" from="tipoDocRef"/>
                    <set field="refEv.fecha" from="fecha"/>
                    <set field="refEv.razonReferencia" from="referenceText"/>
                    <entity-update value-field="refEv"/>
                </else>
            </if>
        </actions>
    </service>

    <service verb="add" noun="ReferenceToShipment">
        <in-parameters>
            <parameter name="shipmentId" required="true"/>
            <parameter name="referenceText" default-value=" - "/>
            <parameter name="folioRef"/>
            <parameter name="tipoDocRef"/>
            <parameter name="fecha" type="Date"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.ReferenciaDte" value-field="refEv" for-update="true">
                <field-map field-name="shipmentId" from="shipmentId"/>
                <field-map field-name="fiscalTaxDocumentTypeEnumId" from="tipoDocRef"/>
                <field-map field-name="folio" from="folioRef"/>
                <field-map field-name="referenciaTypeEnumId" value="RefDteTypeShipment"/>
            </entity-find-one>
            <if condition="!refEv">
                <then>
                    <!-- Hay que crear entrada para referencia de invoiceId -->
                    <set field="createMap" from="[fiscalTaxDocumentTypeEnumId:tipoDocRef, codigoReferenciaEnumId:codigoReferenciaEnumId, fecha:fecha, folio:folioRef, shipmentId:shipmentId, razonReferencia:referenceText, referenciaTypeEnumId:'RefDteTypeShipment']"/>
                    <service-call name="create#mchile.dte.ReferenciaDte" out-map="context" in-map="createMap"/>
                </then>
                <else>
                    <!-- Ya existe la referencia -->
                    <set field="refEv.folio" from="folioRef"/>
                    <set field="refEv.fiscalTaxDocumentTypeEnumId" from="tipoDocRef"/>
                    <set field="refEv.fecha" from="fecha"/>
                    <set field="refEv.razonReferencia" from="referenceText"/>
                    <entity-update value-field="refEv"/>
                </else>
            </if>
        </actions>
    </service>

    <service verb="download" noun="Document">
        <in-parameters>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="fiscalTaxDocumentContentTypeEnumId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocumentContent" value-field="document" cache="false">
                <field-map field-name="fiscalTaxDocumentId"/>
                <field-map field-name="fiscalTaxDocumentContentTypeEnumId"/>
            </entity-find-one>
            <script>
                docRr = ec.resource.getLocationReference(document.contentLocation)
                if (docRr?.exists)
                    ec.web.sendResourceResponse(document.contentLocation)
                else
                    ec.message.addError(ec.resource.expand('No se encontró archivo en [${fiscalTaxDocumentId}]',''))
            </script>
        </actions>
    </service>

    <service verb="check" noun="ProductionEnvironment" authenticate="anonymous-view">
        <out-parameters>
            <parameter name="systemIsProduction" type="Boolean"/>
            <parameter name="dteIsProductionByPartyId" type="List"/>
            <parameter name="boletaIsProductionByPartyId" type="List"/>
        </out-parameters>
        <actions>
            <set field="systemIsProduction" from="org.moqui.util.SystemBinding.getPropOrEnv('moquichile.dte.systemIsProduction') == 'true'"/>
            <set field="dteIsProductionByPartyId" from="[:]"/>
            <set field="boletaIsProductionByPartyId" from="[:]"/>
            <entity-find entity-name="mantle.party.PartyRole" list="internalOrgList">
                <econdition field-name="roleTypeId" value="OrgInternal"/>
            </entity-find>
            <iterate list="internalOrgList" entry="internalOrg">
                <service-call name="mantle.party.PartyServices.get#PartySettingValue" in-map="[partyId:internalOrg.partyId, partySettingTypeId:'moit.dte.DteIsProduction']" out-map="settingMap" out-map-add-to-existing="false"/>
                <set field="dteIsProductionByPartyId[internalOrg.partyId]" from="systemIsProduction &amp;&amp; (settingMap.settingValue == 'true')"/>
                <service-call name="mantle.party.PartyServices.get#PartySettingValue" in-map="[partyId:internalOrg.partyId, partySettingTypeId:'moit.dte.BoletaIsProduction']" out-map="settingMap" out-map-add-to-existing="false"/>
                <set field="boletaIsProductionByPartyId[internalOrg.partyId]" from="systemIsProduction &amp;&amp; (settingMap.settingValue == 'true')"/>
            </iterate>
        </actions>
    </service>

    <service verb="revert" noun="FiscalTaxDocumentGeneration">
        <in-parameters>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="fiscalTaxDocumentNumber" required="true" type="Integer"/>
            <parameter name="fiscalTaxDocumentId" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList" for-update="true">
                <econdition field-name="issuerPartyId"/>
                <econdition field-name="fiscalTaxDocumentNumber"/>
                <econdition field-name="fiscalTaxDocumentId"/>
                <econdition field-name="fiscalTaxDocumentTypeEnumId"/>
            </entity-find>
            <set field="ftd" from="ftdList.first"/>
            <if condition="ftd == null"><return error="true" message="No se encuentra FiscalTaxDocument ${fiscalTaxDocumentId}"/></if>
            <if condition="ftd.statusId != 'Ftd-Issued'"><return error="true" message="Estado de FiscalTaxDocument ${fiscalTaxDocumentId} es ${ftd.statusId}, debe ser Ftd-Issued"/></if>
            <if condition="ftd.sentAuthStatusId != 'Ftd-NotSentAuth'"><return error="true" message="Estado de envío de FiscalTaxDocument ${fiscalTaxDocumentId} es ${ftd.sentAuthStatusId}, debe ser Ftd-NotSentAuth"/></if>
            <entity-delete-by-condition entity-name="mchile.dte.FiscalTaxDocumentContent">
                <econdition field-name="fiscalTaxDocumentId"/>
            </entity-delete-by-condition>
            <entity-delete-by-condition entity-name="mchile.dte.FiscalTaxDocumentAttributes">
                <econdition field-name="fiscalTaxDocumentId"/>
            </entity-delete-by-condition>
            <set field="ftd.statusId" value="Ftd-NotIssued"/>
            <set field="ftd.invoiceId" from="null"/>
            <entity-update value-field="ftd"/>
        </actions>
    </service>

    <service verb="reissue" noun="FiscalTaxDocument">
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/>
            <if condition="!invoice"><return error="true" message="Could not find invoice ${invoiceId}"/></if>
            <set field="issuerPartyId" from="invoice.fromPartyId"/>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList">
                <econdition field-name="issuerPartyId"/>
                <econdition field-name="invoiceId"/>
                <econdition field-name="fiscalTaxDocumentTypeEnumId"/>
            </entity-find>
            <set field="ftd" from="ftdList.first"/>
            <if condition="!ftd"><return error="true" message="Could not find FiscalTaxDocument for invoice ${invoiceId}"/></if>
            <service-call name="mchile.sii.DTEServices.revert#FiscalTaxDocumentGeneration" in-map="[issuerPartyId:issuerPartyId, fiscalTaxDocumentNumber:ftd.fiscalTaxDocumentNumber,
                                fiscalTaxDocumentId:ftd.fiscalTaxDocumentId, fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId]"/>
            <service-call name="mchile.sii.DTEServices.create#DteFromInvoice" in-map="[invoiceId:invoiceId, fiscalTaxDocumentTypeEnumId:fiscalTaxDocumentTypeEnumId]"/>
        </actions>
    </service>

    <service verb="create" noun="PrefilledCreditMemo">
        <description>
            Crea un invoice que se usa para generar Nota de Crédito, y lo pre-rellena con los contenidos de DTE especificado.
            No considera manejar la logística inversa (devolver productos a Bodega u otro lado), para eso
            se debiera usar un Return, ver moit.erp.ReturnServices.create#Return.
        </description>
        <in-parameters>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="fiscalTaxDocumentNumber" required="true" type="Integer"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="razonReferencia" default-value="Error de Facturación"/>
            <parameter name="fechaEmision" type="java.sql.Timestamp" default="ec.user.nowTimestamp" format="dd-MM-yyyy"/>
        </in-parameters>
        <out-parameters>
            <parameter name="returnInvoiceId"/>
        </out-parameters>
        <actions>
            <service-call name="mchile.sii.DTEServices.create#EmptyCreditMemo" in-map="context" out-map="context"/>
            <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="itemList">
                <econdition field-name="invoiceId" from="originalInvoiceId"/>
            </entity-find>
            <iterate list="itemList" entry="item">
                <service-call name="create#mantle.account.invoice.InvoiceItem" in-map="item.getMap()+[invoiceId:invoiceId]"/>
            </iterate>
        </actions>
    </service>
    
    <service verb="create" noun="EmptyCreditMemo">
        <description>
            Crea un invoice que se usa para generar Nota de Crédito. No considera manejar la logística inversa (devolver productos a Bodega u otro lado), para eso
            se debiera usar un Return, ver moit.erp.ReturnServices.create#Return.
        </description>
        <in-parameters>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="fiscalTaxDocumentNumber" required="true" type="Integer"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="razonReferencia" default-value="Error de Facturación"/>
            <parameter name="fechaEmision" type="java.sql.Timestamp" default="ec.user.nowTimestamp" format="dd-MM-yyyy"/>
        </in-parameters>
        <out-parameters>
            <parameter name="originalInvoiceId"/>
            <parameter name="invoiceId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="dte">
                <field-map field-name="issuerPartyId"/>
                <field-map field-name="fiscalTaxDocumentNumber"/>
                <field-map field-name="fiscalTaxDocumentTypeEnumId"/>
                <field-map field-name="statusId" value="Ftd-Issued"/>
                <field-map field-name="sentAuthStatusId" value="Ftd-SentAuthAccepted"/>
            </entity-find-one>
            <if condition="!dte"><return error="true" message="Could not find FiscalTaxDocument"/></if>
            <if condition="dte.invoiceId == null"><return error="true" message="FiscalTaxDocument has no invoice associated"/></if>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="originalInvoice">
                <field-map field-name="invoiceId" from="dte.invoiceId"/></entity-find-one>
            <if condition="!originalInvoice"><return error="true" message="Could not find invoice ${dte.invoiceId}"/></if>
            <set field="originalInvoiceId" from="originalInvoice.invoiceId"/>
            <service-call name="mantle.account.InvoiceServices.create#Invoice" out-map="context"
                          in-map="[originalInvoiceId:originalInvoice.invoiceId, invoiceTypeEnumId:'InvoiceCreditMemo', fromPartyId:originalInvoice.toPartyId,
                           toPartyId:originalInvoice.fromPartyId, invoiceDate:fechaEmision, currencyUomId:originalInvoice.currencyUomId, otherPartyOrderId:originalInvoice.otherPartyOrderId,
                        productStoreId:originalInvoice.productStoreId, systemMessageRemoteId:originalInvoice.systemMessageRemoteId, referenceNumber:originalInvoiceId]"/>
            <script><![CDATA[
                java.text.SimpleDateFormat formatDate = new java.text.SimpleDateFormat("yyyy-MM-dd")
                fecha = formatDate.format(dte.date)
                ]]></script>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:dte.receiverPartyId]" out-map="receiverRut"/>
            <set field="referenceMap" from="[invoiceId:invoiceId, fiscalTaxDocumentTypeEnumId:dte.fiscalTaxDocumentTypeEnumId, folio:dte.fiscalTaxDocumentNumber, fecha:fecha,
                 rutOtroContribuyente:receiverRut.rutSinFormato, codigoReferenciaEnumId:'MCHRefDteCodeAnula', razonReferencia:razonReferencia, referenceTypeEnumId:'RefDteTypeInvoice']"/>
            <service-call name="mchile.sii.DTEServices.agregar#Referencia" in-map="referenceMap"/>
        </actions>
    </service>

    <service verb="create" noun="PrefilledDebitMemo">
        <description>
            Crea un invoice que se usa para generar Nota de Débito, y lo pre-rellena con los contenidos de DTE especificado.
        </description>
        <in-parameters>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="fiscalTaxDocumentNumber" required="true" type="Integer"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="razonReferencia" default-value="Error de Facturación"/>
            <parameter name="fechaEmision" type="java.sql.Timestamp" default="ec.user.nowTimestamp" format="dd-MM-yyyy"/>
        </in-parameters>
        <out-parameters>
            <parameter name="returnInvoiceId"/>
        </out-parameters>
        <actions>
            <if condition="!(fiscalTaxDocumentTypeEnumId in ['Ftdt-33','Ftdt-61'])">
                <return error="true" message="Debit Memos are not supported for the provided document type."/>
            </if>

            <service-call name="mchile.sii.DTEServices.create#EmptyDebitMemo" in-map="context" out-map="context"/>
            <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="itemList">
                <econdition field-name="invoiceId" from="originalInvoiceId"/>
            </entity-find>
            <iterate list="itemList" entry="item">
                <service-call name="create#mantle.account.invoice.InvoiceItem" in-map="item.getMap()+[invoiceId:invoiceId]"/>
            </iterate>
        </actions>
    </service>

    <service verb="create" noun="EmptyDebitMemo">
        <description>
            Crea un invoice que se usa para generar Nota de Débito.
        </description>
        <in-parameters>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="fiscalTaxDocumentNumber" required="true" type="Integer"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="razonReferencia" default-value="Error de Facturación"/>
            <parameter name="fechaEmision" type="java.sql.Timestamp" default="ec.user.nowTimestamp" format="dd-MM-yyyy"/>
        </in-parameters>
        <out-parameters>
            <parameter name="originalInvoiceId"/>
            <parameter name="invoiceId"/>
        </out-parameters>
        <actions>
            <if condition="!(fiscalTaxDocumentTypeEnumId in ['Ftdt-33','Ftdt-61'])">
                <return error="true" message="Debit Memos are not supported for the provided document type."/>
            </if>

            <entity-find-one entity-name="mchile.dte.FiscalTaxDocument" value-field="dte">
                <field-map field-name="issuerPartyId"/>
                <field-map field-name="fiscalTaxDocumentNumber"/>
                <field-map field-name="fiscalTaxDocumentTypeEnumId"/>
                <field-map field-name="statusId" value="Ftd-Issued"/>
                <field-map field-name="sentAuthStatusId" value="Ftd-SentAuthAccepted"/>
            </entity-find-one>

            <if condition="!dte">
                <return error="true" message="Could not find FiscalTaxDocument"/>
            </if>

            <if condition="dte.invoiceId == null">
                <return error="true" message="FiscalTaxDocument has no invoice associated"/>
            </if>

            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="originalInvoice">
                <field-map field-name="invoiceId" from="dte.invoiceId"/>
            </entity-find-one>

            <if condition="!originalInvoice">
                <return error="true" message="Could not find invoice ${dte.invoiceId}"/>
            </if>

            <!-- Si el DTE de referencia es una Nota de Crédito, se invierten fromPartyId y toPartyId (cliente le cobra al vendedor) -->
            <!-- Si es una factura, se mantienen ambos roles (vendedor le cobra al cliente) -->
            <if condition="dte.fiscalTaxDocumentTypeEnumId == 'Ftdt-61'"><then>
                <set field="fromPartyId" from="originalInvoice.toPartyId"/>
                <set field="toPartyId" from="originalInvoice.fromPartyId"/>
            </then><else>
                <set field="fromPartyId" from="originalInvoice.fromPartyId"/>
                <set field="toPartyId" from="originalInvoice.toPartyId"/>
            </else></if>

            <set field="originalInvoiceId" from="originalInvoice.invoiceId"/>
            <service-call name="mantle.account.InvoiceServices.create#Invoice" out-map="context"
                          in-map="[originalInvoiceId:originalInvoice.invoiceId, invoiceTypeEnumId:'InvoiceDebitMemo', fromPartyId:fromPartyId,
                            toPartyId:toPartyId, invoiceDate:fechaEmision, currencyUomId:originalInvoice.currencyUomId, otherPartyOrderId:originalInvoice.otherPartyOrderId,
                            productStoreId:originalInvoice.productStoreId, systemMessageRemoteId:originalInvoice.systemMessageRemoteId, referenceNumber:originalInvoiceId]"/>
            <script><![CDATA[
                java.text.SimpleDateFormat formatDate = new java.text.SimpleDateFormat("yyyy-MM-dd")
                fecha = formatDate.format(dte.date)
            ]]></script>
            <service-call name="mchile.GeneralServices.get#RutForParty" in-map="[partyId:dte.receiverPartyId]" out-map="receiverRut"/>
            <set field="referenceMap" from="[invoiceId:invoiceId, fiscalTaxDocumentTypeEnumId:dte.fiscalTaxDocumentTypeEnumId, folio:dte.fiscalTaxDocumentNumber, fecha:fecha,
                 rutOtroContribuyente:receiverRut.rutSinFormato, codigoReferenciaEnumId:'MCHRefDteCodeAnula', razonReferencia:razonReferencia, referenceTypeEnumId:'RefDteTypeInvoice']"/>
            <service-call name="mchile.sii.DTEServices.agregar#Referencia" in-map="referenceMap"/>
        </actions>
    </service>

    <service verb="create" noun="DebitNoteFromDebitMemo">
        <in-parameters>
            <parameter name="invoiceId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="debitMemo" for-update="true"/>
            <if condition="debitMemo.invoiceTypeEnumId != 'InvoiceDebitMemo'"><return error="true" message="Cannot find Debit Memo with ID ${invoiceId}"/></if>
            <if condition="!(debitMemo.statusId in ['InvoiceInProcess','InvoiceIncoming','InvoiceApproved','InvoicePmtSent','InvoiceReceived','InvoiceBilledThrough'])"><return error="true" message="Invalid statusId for debitMemo: ${debitMemo.statusId}"/></if>

            <set field="debitMemo.statusId" value="InvoiceApproved"/>
            <entity-update value-field="debitMemo"/>
            <service-call name="mchile.sii.DTEServices.create#DteFromInvoice" in-map="context+[fiscalTaxDocumentTypeEnumId:'Ftdt-56']" out-map="context"/>

        </actions>
    </service>

    <service verb="create" noun="CreditNoteFromCreditMemo">
        <in-parameters>
            <parameter name="invoiceId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="fiscalTaxDocumentId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="creditMemo" for-update="true"/>
            <if condition="creditMemo.invoiceTypeEnumId != 'InvoiceCreditMemo'"><return error="true" message="Cannot find Credit Memo with ID ${invoiceId}"/></if>
            <if condition="!(creditMemo.statusId in ['InvoiceIncoming','InvoiceInProcess','InvoiceApproved','InvoicePmtSent','InvoiceReceived','InvoiceBilledThrough'])"><return error="true" message="Invalid statusId for creditMemo: ${creditMemo.statusId}"/></if>

            <set field="creditMemo.statusId" value="InvoiceApproved"/>
                <entity-update value-field="creditMemo"/>
            <service-call name="mchile.sii.DTEServices.create#DteFromInvoice" in-map="context+[fiscalTaxDocumentTypeEnumId:'Ftdt-61']" out-map="context"/>
        </actions>
    </service>

    <service verb="compare" noun="RazonSocial">
        <in-parameters>
            <parameter name="rs1"/>
            <parameter name="rs2"/>
        </in-parameters>
        <out-parameters>
            <parameter name="equivalent" type="Boolean"/>
        </out-parameters>
        <actions>
            <set field="equivalent" from="false"/>
            <if condition="rs1 == null || rs2 == null"><return/></if>
            <set field="rs1" from="rs1.toUpperCase().replaceAll('Á', 'A').replaceAll('É', 'E').replaceAll('Í', 'I').replaceAll('Ó', 'O').replaceAll('[ÚÜ]', 'U').replaceAll('Ñ', 'N').replaceAll('[^A-Z ]', '')"/>
            <set field="rs2" from="rs2.toUpperCase().replaceAll('Á', 'A').replaceAll('É', 'E').replaceAll('Í', 'I').replaceAll('Ó', 'O').replaceAll('[ÚÜ]', 'U').replaceAll('Ñ', 'N').replaceAll('[^A-Z ]', '')"/>
            <if condition="rs1.size() == 0 || rs2.size() == 0"><return/></if>
            <if condition="rs1.equals(rs2)"><set field="equivalent" from="true"/><return/></if>
            <set field="replaceItems" from="[' LTDA':' LIMITADA', ' HNOS':' HERMANOS', 'Y CIA':'Y COMPANIA', ' S A':' SA']"/>
            <iterate list="replaceItems" key="pattern" entry="replacement">
                <set field="rs1" from="rs1.replaceAll(pattern, replacement)"/>
                <set field="rs2" from="rs2.replaceAll(pattern, replacement)"/>
            </iterate>

            <if condition="rs1.equals(rs2)"><set field="equivalent" from="true"/><return/></if>
        </actions>
    </service>

    <service verb="enforce" noun="RoundedTotalOrderItem">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderPartSeqId" required="true"/>
            <parameter name="quantity" type="BigDecimal"/>
            <parameter name="unitAmount" type="BigDecimal"/>
            <parameter name="orderItemSeqId" required="true"/>
            <parameter name="itemTypeEnumId"/>
            <parameter name="parentItemSeqId"/>
        </in-parameters>
        <actions>
            <if condition="itemTypeEnumId == 'ItemDteRoundingAdjust'">
                <entity-delete-by-condition entity-name="mantle.order.OrderItem">
                    <econdition field-name="orderId"/>
                    <econdition field-name="orderPartSeqId"/>
                    <econdition field-name="itemTypeEnumId" value="ItemDteRoundingAdjust"/>
                    <econdition field-name="parentItemSeqId"/>
                    <econdition field-name="orderItemSeqId" operator="not-equals"/>
                </entity-delete-by-condition>
                <return/>
            </if>
            <set field="roundingAdjustmentItemAmount" from="0" type="BigDecimal"/>
            <set field="itemTotal" from="(quantity?:0)*(unitAmount?:0)" type="BigDecimal"/>
            <set field="montoItem" from="itemTotal.setScale(0, java.math.RoundingMode.HALF_UP)"/>
            <if condition="itemTotal != montoItem">
                <set field="roundingAdjustmentItemAmount" from="montoItem - itemTotal.setScale(6, java.math.RoundingMode.HALF_UP)" type="BigDecimal"/>
                <if condition="roundingAdjustmentItemAmount != 0">
                    <if condition="itemTotal + roundingAdjustmentItemAmount != montoItem">
                        <set field="roundingAdjustmentItemAmount" from="0"/>
                        <set field="dteQuantity" from="quantity"/>
                        <set field="dteAmount" from="unitAmount"/>
                        <set field="unitAmount" from="(unitAmount * quantity).setScale(0, java.math.RoundingMode.HALF_UP)"/>
                        <set field="quantity" from="1"/>
                    </if>
                    <set field="description" value="Ajuste redondeo DTE (precio ${dteAmount?:unitAmount}, cantidad ${dteQuantity?:quantity}, montoItem ${montoItem}"/>
                    <service-call name="create#mantle.order.OrderItem" in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId, itemTypeEnumId:'ItemDteRoundingAdjust', description: description,
                                quantity: 1, unitAmount:roundingAdjustmentItemAmount, parentItemSeqId:orderItemSeqId]"/>
                </if>
            </if>
        </actions>
    </service>

    <service verb="block" noun="Folio">
        <in-parameters>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="issuerPartyIdValue" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="fiscalTaxDocumentNumber" type="Integer" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList" for-update="true">
                <econdition field-name="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="fiscalTaxDocumentNumber"/>
                <econdition field-name="issuerPartyId"/>
                <econdition field-name="issuerPartyIdValue"/>
                <econdition field-name="statusId" value="Ftd-NotIssued"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <service-call name="update#mchile.dte.FiscalTaxDocument" in-map="[fiscalTaxDocumentId:ftd.fiscalTaxDocumentId, statusId:'Ftd-Blocked']"/>
            </iterate>
        </actions>
    </service>

    <service verb="unblock" noun="Folio">
        <in-parameters>
            <parameter name="issuerPartyId" required="true"/>
            <parameter name="issuerPartyIdValue" required="true"/>
            <parameter name="fiscalTaxDocumentTypeEnumId" required="true"/>
            <parameter name="fiscalTaxDocumentNumber" type="Integer" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList" for-update="true">
                <econdition field-name="fiscalTaxDocumentTypeEnumId"/>
                <econdition field-name="fiscalTaxDocumentNumber"/>
                <econdition field-name="issuerPartyId"/>
                <econdition field-name="issuerPartyIdValue"/>
                <econdition field-name="statusId" value="Ftd-Blocked"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <service-call name="update#mchile.dte.FiscalTaxDocument" in-map="[fiscalTaxDocumentId:ftd.fiscalTaxDocumentId, statusId:'Ftd-NotIssued']"/>
            </iterate>
        </actions>
    </service>

</services>
