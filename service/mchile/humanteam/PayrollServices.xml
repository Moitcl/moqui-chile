<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="create" noun="PayrollPeriod">
        <in-parameters>
            <parameter name="timePeriodTypeId"/>
            <parameter name="date" type="Timestamp"/>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="timePeriodId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.party.time.TimePeriodType" value-field="timePeriodType"/>
            <if condition="timePeriodType == null"><return error="true" message="Could not find time period type ${timePeriodTypeId}"/></if>
            <!-- find existing time period -->
            <entity-find entity-name="mantle.party.time.TimePeriod" list="existingList">
                <econdition field-name="timePeriodTypeId" from="timePeriodTypeId"/>
                <date-filter valid-date="date"/>
            </entity-find>
            <if condition="existingList">
                <return error="true" message="Error creating Payroll Period of type ${timePeriodTypeId}, existing period for same date (${date}): ${existingList.first.timePeriodId}"/>
            </if>
            <!-- find from and thru dates -->
            <script>
                Calendar cal = Calendar.instance
                cal.setTimeInMillis(date.time)
                cal.set(Calendar.MILLISECOND, 0)
                cal.set(Calendar.SECOND, 0)
                cal.set(Calendar.MINUTE, 0)
                cal.set(Calendar.HOUR, 0)
                if (timePeriodType.lengthUomId == 'TF_mon') {
                    cal.set(Calendar.DAY_OF_MONTH, 1)
                } else {
                    ec.message.addError("Unhandled Uom: ${timePeriodType.lengthUomId}")
                }
                fromDate = new java.sql.Timestamp(cal.time.time)
                cal.add(Calendar.MILLISECOND, -1)
                previousThruDate = new java.sql.Timestamp(cal.time.time)
                if (timePeriodType.lengthUomId == 'TF_mon') {
                    cal.add(Calendar.MONTH, 1)
                }
                thruDate = cal.time
            </script>
            <!-- find previous by dates -->
            <entity-find entity-name="mantle.party.time.TimePeriod" list="previousList">
                <econdition field-name="timePeriodTypeId" from="timePeriodTypeId"/>
                <date-filter valid-date="previousThruDate"/>
            </entity-find>
            <if condition="previousList"><then>
                <service-call name="mantle.party.TimeServices.create#TimePeriod" in-map="[previousPeriodId:previousList.first.timePeriodId]"/>
            </then><else>
                <service-call name="mantle.party.TimeServices.create#TimePeriod" in-map="[partyId:partyId, timePeriodTypeId:timePeriodTypeId, fromDate:fromDate]"/>
            </else></if>
        </actions>
    </service>

    <service verb="get" noun="TimePeriod">
        <in-parameters>
            <parameter name="activeOrgId"/>
            <parameter name="timePeriodId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="payrollTimePeriodId"/>
            <parameter name="payrollTimePeriod"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.party.time.TimePeriod" list="periods" limit="1">
                <econdition field-name="timePeriodId" ignore-if-empty="true"/>
                <econdition field-name="timePeriodTypeId" value="PayrollMonth"/>
                <econdition field-name="partyId" from="activeOrgId"/>
                <order-by field-name="-fromDate"/>
            </entity-find>
            <set field="payrollTimePeriod" from="periods.first"/>
            <set field="payrollTimePeriodId" from="timePeriod?.timePeriodId"/>
        </actions>
    </service>

    <service verb="get" noun="PeriodParameters">
        <in-parameters>
            <parameter name="activeOrgId"/>
            <parameter name="timePeriodId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="periodFromDate" type="Date"/>
            <parameter name="periodThruDate" type="Date"/>
            <parameter name="periodUfValue" type="BigDecimal"/>
            <parameter name="periodUfTitle"/>
            <parameter name="previousUfValue" type="BigDecimal"/>
            <parameter name="previousUfTitle"/>
            <parameter name="periodUtmValue" type="BigDecimal"/>
            <parameter name="periodUtaValue" type="BigDecimal"/>
            <parameter name="topeImponibleAfpUf" type="BigDecimal"/>
            <parameter name="topeImponibleAfp" type="BigDecimal"/>
            <parameter name="topeImponibleIpsUf" type="BigDecimal"/>
            <parameter name="topeImponibleIps" type="BigDecimal"/>
            <parameter name="topeImponibleAfcUf" type="BigDecimal"/>
            <parameter name="topeImponibleAfc" type="BigDecimal"/>
            <parameter name="rentaMinimaGeneral" type="BigDecimal"/>
            <parameter name="rentaMinimaMenores" type="BigDecimal"/>
            <parameter name="rentaMinimaCasa" type="BigDecimal"/>
            <parameter name="rentaMinimaNorem" type="BigDecimal"/>
            <parameter name="topeApvMensualUf" type="BigDecimal"/>
            <parameter name="topeApvMensual" type="BigDecimal"/>
            <parameter name="topeApvAnualUf" type="BigDecimal"/>
            <parameter name="topeApvAnual" type="BigDecimal"/>
            <parameter name="topeDepositoConvenidoAnualUf" type="BigDecimal"/>
            <parameter name="topeDepositoConvenidoAnual" type="BigDecimal"/>
            <parameter name="tasaAfcCoIndefinidoEmpleador" type="BigDecimal"/>
            <parameter name="tasaAfcCoIndefinidoTrabajador" type="BigDecimal"/>
            <parameter name="tasaAfcCoFijoEmpleador" type="BigDecimal"/>
            <parameter name="tasaAfcCoFijoTrabajador" type="BigDecimal"/>
            <parameter name="tasaAfcCo11AEmpleador" type="BigDecimal"/>
            <parameter name="tasaAfcCo11ATrabajador" type="BigDecimal"/>
            <parameter name="tasaSis" type="BigDecimal"/>
            <parameter name="afpRateList" type="List"/>
            <parameter name="asignacionFamiliarList" type="List"/>
            <parameter name="trabajoPesadoEmpleador" type="BigDecimal"/>
            <parameter name="trabajoPesadoTrabajador" type="BigDecimal"/>
            <parameter name="trabajoMenosPesadoEmpleador" type="BigDecimal"/>
            <parameter name="trabajoMenosPesadoTrabajador" type="BigDecimal"/>
        </out-parameters>
        <actions>
            <service-call name="mchile.humanteam.PayrollServices.get#TimePeriod" in-map="context" out-map="context"/>
            <if condition="!payrollTimePeriod">
                <return error="true" message="Did not find Payroll Time Period"/>
            </if>
            <if condition="payrollTimePeriod">
                <set field="periodFromDate" from="new java.sql.Timestamp(payrollTimePeriod.fromDate.time)"/>
                <set field="periodThruDate" from="new java.sql.Timestamp(payrollTimePeriod.thruDate.time)"/>
                <service-call name="mchile.CurrencyServices.get#ExchangeRate" in-map="[fromCurrencyUomId:'CLF', date:periodThruDate]" out-map="periodUf"/>
                <set field="periodUfValue" from="periodUf.value"/>
                <set field="periodUfTitle" from="ec.l10n.format(periodThruDate, '\'al\' dd \'de\' MMMM yyyy')"/>
                <service-call name="mchile.CurrencyServices.get#ExchangeRate" in-map="[fromCurrencyUomId:'CL_UTM', date:periodThruDate]" out-map="periodUtm"/>
                <set field="periodUtmValue" from="periodUtm.value"/>
                <set field="periodUtaValue" from="periodUtmValue*12"/>
                <set field="previousThruDate" from="new java.sql.Timestamp(payrollTimePeriod.fromDate.time-10)"/>
                <service-call name="mchile.CurrencyServices.get#ExchangeRate" in-map="[fromCurrencyUomId:'CLF', date:previousThruDate]" out-map="previousUf"/>
                <set field="previousUfValue" from="previousUf.value"/>
                <set field="previousUfTitle" from="ec.l10n.format(previousThruDate, '\'al\' dd \'de\' MMMM yyyy')"/>
            </if>
            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTopeImponibleAfp"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="topeImponibleAfpUf" from="parameterList.first.value"/>
                <set field="topeImponibleAfp" from="topeImponibleAfpUf*periodUfValue"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTopeImponibleIps"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="topeImponibleIpsUf" from="parameterList.first.value"/>
                <!-- Valor para IPS se calcula con UF del último día del mes anterior -->
                <set field="topeImponibleIps" from="topeImponibleIpsUf*previousUfValue"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTopeImponibleAfc"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="topeImponibleAfcUf" from="parameterList.first.value"/>
                <set field="topeImponibleAfc" from="topeImponibleAfcUf*periodUfValue"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptRentaMinimaGeneral"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="rentaMinimaGeneral" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptRentaMinimaMenores"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="rentaMinimaMenores" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptRentaMinimaCasa"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="rentaMinimaCasa" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptRentaMinimaNorem"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="rentaMinimaNorem" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTopeApvMensual"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="topeApvMensualUf" from="parameterList.first.value"/>
                <set field="topeApvMensual" from="topeApvMensualUf*periodUfValue"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTopeApvAnual"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="topeApvAnualUf" from="parameterList.first.value"/>
                <set field="topeApvAnual" from="topeApvAnualUf*periodUfValue"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTopeDepositoConvenidoAnual"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="topeDepositoConvenidoAnualUf" from="parameterList.first.value"/>
                <set field="topeDepositoConvenidoAnual" from="topeDepositoConvenidoAnualUf*periodUfValue"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTasaAfcCoIndefinidoEmpleador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="tasaAfcCoIndefinidoEmpleador" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTasaAfcCoIndefinidoTrabajador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="tasaAfcCoIndefinidoTrabajador" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTasaAfcCoFijoEmpleador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="tasaAfcCoFijoEmpleador" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTasaAfcCoFijoTrabajador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="tasaAfcCoFijoTrabajador" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTasaAfcCo11AEmpleador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="tasaAfcCo11AEmpleador" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTasaAfcCo11ATrabajador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="tasaAfcCo11ATrabajador" from="parameterList.first.value"/></if>

            <!-- Cobro AFP y Tasa SiS -->
            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTasaSis"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="tasaSis" from="parameterList.first.value"/></if>
            <entity-find entity-name="mchile.humanteam.payroll.AfpRate" list="afpRateListEV">
                <date-filter valid-date="periodFromDate"/>
                <order-by field-name="afpPartyId"/>
            </entity-find>
            <set field="afpRateList" from="[]"/>
            <iterate entry="afpRate" list="afpRateListEV">
                <entity-find-one entity-name="mantle.party.Organization" value-field="afpOrganization" auto-field-map="[partyId:afpRate.afpPartyId]"/>
                <script>afpRateList.add([partyId:afpRate.afpPartyId, rate:afpRate.rate, organizationName:afpOrganization.organizationName])</script>
            </iterate>
            
            <!-- Asignación Familiar -->
            <entity-find entity-name="mchile.humanteam.payroll.AsignacionFamiliar" list="asignacionFamiliarListEV">
                <econdition field-name="currencyUomId" value="CLP"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <set field="asignacionFamiliarList" from="[]"/>
            <iterate list="asignacionFamiliarListEV" entry="af">
                <set field="requisitoRenta" from="(af.lowThreshold == 0? '': (ec.l10n.formatCurrency(af.lowThreshold, 'CLP') + ' &lt;= ')) + 'Renta' + (af.highThreshold? (' &lt;= ' + ec.l10n.formatCurrency(af.highThreshold, 'CLP')): '')"/>
                <script>asignacionFamiliarList.add([tramo:af.tramo, monto:af.amount, requisitoRenta:requisitoRenta])</script>
            </iterate>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTrabajoPesadoEmpleador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="trabajoPesadoEmpleador" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTrabajoPesadoTrabajador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="trabajoPesadoTrabajador" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTrabajoMenosPesadoEmpleador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="trabajoMenosPesadoEmpleador" from="parameterList.first.value"/></if>

            <entity-find entity-name="mchile.humanteam.payroll.PayrollParameter" list="parameterList">
                <econdition field-name="payrollParameterTypeEnumId" value="MchPptTrabajoMenosPesadoTrabajador"/>
                <date-filter valid-date="periodFromDate"/>
            </entity-find>
            <if condition="parameterList">
                <set field="trabajoMenosPesadoTrabajador" from="parameterList.first.value"/></if>
        </actions>
    </service>

    <service verb="get" noun="PayrollPeriodTypes">
        <out-parameters>
            <parameter name="payrollPeriodTypes"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.party.time.TimePeriodType" list="timePeriodTypeList">
                <econdition field-name="periodPurposeEnumId" value="Payroll"/>
            </entity-find>
            <set field="payrollPeriodTypes" from="timePeriodTypeList.timePeriodTypeId"/>
        </actions>
    </service>

</services>