<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="unscramble" noun="PartyIdentification">
        <actions>
            <entity-find entity-name="mantle.party.PartyIdentification" list="pidList">
                <use-iterator/>
            </entity-find>
            <iterate list="pidList" entry="pid">
                <if condition="pid.idValue.matches('[0-9A-F]+')"><then>
                    <service-call name="update#mantle.party.PartyIdentification" in-map="pid.getMap()+[idValue:org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(pid.idValue, false, ec.entity)]"/>
                    <log message="changing ${pid.idValue} to ${org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(pid.idValue, false, ec.entity)}"/>
                </then><else>
                    <log message="Not changing ${pid.idValue}"/>
                </else></if>
            </iterate>
            <script>pidList.close()</script>
        </actions>
    </service>

    <service verb="unscramble" noun="MothersMaidenName">
        <actions>
            <entity-find entity-name="mantle.party.Person" list="personList">
                <use-iterator/>
            </entity-find>
            <iterate list="personList" entry="person">
                <if condition="person.mothersMaidenName == null"><continue/></if>
                <if condition="person.mothersMaidenName.matches('[0-9A-F]+')"><then>
                    <service-call name="update#mantle.party.Person" in-map="[partyId:person.partyId, mothersMaidenName:org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(person.mothersMaidenName, false, ec.entity)]"/>
                    <log message="changing ${person.mothersMaidenName} to ${org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(person.mothersMaidenName, false, ec.entity)}"/>
                </then><else>
                    <log message="Not changing ${person.mothersMaidenName}"/>
                </else></if>
            </iterate>
        </actions>
    </service>
    
    <service verb="migrate" noun="DteSentAuthStatus">
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList" for-update="true">
                <econdition field-name="sentAuthStatusId" value="Ftd-SentAuth"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <log message="updating ftd ${ftd.fiscalTaxDocumentId}"/>
                <set field="ftd.sentAuthStatusId" value="Ftd-SentAuthAccepted"/>
                <entity-update value-field="ftd"/>
            </iterate>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList" for-update="true">
                <econdition field-name="statusId" value="Ftd-SentAuth"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <log message="updating ftd ${ftd.fiscalTaxDocumentId}"/>
                <set field="ftd.statusId" value="Ftd-Issued"/>
                <entity-update value-field="ftd"/>
            </iterate>
        </actions>
    </service>

    <service verb="add" noun="AmountToFtd">
        <actions>
            <script><![CDATA[
                import java.lang.NumberFormatException
            ]]></script>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentAndContent" list="ftdList">
                <econdition field-name="amount" operator="is-null"/>
                <econdition field-name="statusId" value="Ftd-Issued"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <script><![CDATA[
                    if (ftd.contentLocation) {
                        docRr = ec.resource.getLocationReference(ftd.contentLocation)
                        ftdDoc = new groovy.xml.XmlParser(false, false).parse(docRr.openStream())
                        BigDecimal amount = null
                        try {
                            amount = new BigDecimal(ftdDoc.Documento.Encabezado.Totales.MntTotal.text())
                            ec.service.sync().name("update#mchile.dte.FiscalTaxDocument").parameters([fiscalTaxDocumentId: ftd.fiscalTaxDocumentId, amount: amount]).call()
                        } catch (NumberFormatException e) {
                            ec.message.addError("Error obtaining Total from Ftd ${ftd.fiscalTaxDocumentId}, fiscalTaxDocumentContentId ${ftd.fiscalTaxDocumentContentId}")
                        }
                    }
                    ]]></script>
            </iterate>
        </actions>
    </service>

    <service verb="move" noun="TipoTrasladoToGuiaDespacho">
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentDetail" list="gdList">
                <econdition field-name="fiscalTaxDocumentTypeEnumId" value="Ftdt-52"/>
                <econdition field-name="indTrasladoEnumId" operator="is-null"/>
                <econdition field-name="statusId" value="Ftd-Issued"/>
                <order-by field-name="fiscalTaxDocumentNumber"/>
            </entity-find>
            <log message="Found ${gdList.size()} Guías de Despacho with no indTrasladoEnumId"/>
            <iterate list="gdList" entry="gd">
                <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="xmlList">
                    <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
                    <econdition field-name="fiscalTaxDocumentId" from="gd.fiscalTaxDocumentId"/>
                </entity-find>
                <if condition="xmlList.size() != 1">
                    <return error="true" message="For fiscalTaxDocumentId ${gd.fiscalTaxDocumentId} expected to find 1 XML content, but found ${xmlList.size()}"/>
                </if>
                <set field="gdXmlString" from="ec.resource.getLocationReference(xmlList.first.contentLocation).getText()"/>
                <set field="gdDom" from="new groovy.xml.XmlParser(false, false).parseText(gdXmlString)"/>
                <set field="xmlIndTraslado" from="gdDom.Documento.Encabezado.IdDoc.IndTraslado.text()"/>
                <entity-find entity-name="moqui.basic.Enumeration" list="enumList">
                    <econdition field-name="enumTypeId" value="IndTraslado"/>
                    <econdition field-name="enumCode" from="xmlIndTraslado"/>
                </entity-find>
                <if condition="!enumList"><message error="true">Could not find enum for indTraslado ${xmlIndTraslado}, fiscalTaxDocumentId ${gd.fiscalTaxDocumentId}</message></if>
                <set field="indTrasladoEnumId" from="enumList.first.enumId"/>
                <log message="Asignando IndTraslado para guía ${gd.fiscalTaxDocumentNumber} es ${indTrasladoEnumId}"/>
                <service-call name="store#mchile.dte.GuiaDespacho" in-map="[fiscalTaxDocumentId:gd.fiscalTaxDocumentId, indTrasladoEnumId:indTrasladoEnumId]"/>
            </iterate>
        </actions>
    </service>

    <service verb="check" noun="DateOnFiscalTaxDocument">
        <in-parameters>
            <parameter name="fix" type="Boolean" default="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="mismatchCount"/>
        </out-parameters>
        <actions>
            <script><![CDATA[
                import java.lang.NumberFormatException
                ]]></script>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentAndContent" list="ftdList">
                <econdition field-name="statusId" value="Ftd-Issued"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
            </entity-find>
            <set field="mismatchCount" from="0"/>
            <iterate list="ftdList" entry="ftd">
                <script><![CDATA[
                    if (ftd.contentLocation) {
                        docRr = ec.resource.getLocationReference(ftd.contentLocation)
                        ftdDoc = new groovy.xml.XmlParser(false, false).parse(docRr.openStream())
                        BigDecimal amount = null
                        Calendar cal = Calendar.instance
                        cal.setTimeInMillis(ftd.date.time)
                        cal.set(Calendar.HOUR_OF_DAY, 0)
                        cal.set(Calendar.MINUTE, 0)
                        cal.set(Calendar.SECOND, 0)
                        cal.set(Calendar.MILLISECOND, 0)
                        ftdDate = new Timestamp(cal.timeInMillis)
                        date = ec.l10n.parseTimestamp(ftdDoc.Documento.Encabezado.IdDoc.FchEmis.text(), 'yyyy-MM-dd')
                        if (date != ftdDate) {
                            mismatchCount++
                            ec.logger.info("Found date mismatch for DTE ${ftd.fiscalTaxDocumentId}, in XML ${date}, in DB ${ftdDate}")
                            if (fix)
                                ec.service.sync().name("update#mchile.dte.FiscalTaxDocument").parameters([fiscalTaxDocumentId: ftd.fiscalTaxDocumentId, date: date]).call()
                        }
                    }
                    ]]></script>
            </iterate>
        </actions>
    </service>

    <service verb="retry" noun="AllEnvioDteFailedToProcess">
        <actions>
            <entity-find entity-name="mchile.dte.DteEnvio" list="envioList">
                <econdition field-name="statusId" value="Ftde-ProcessFailed"/>
            </entity-find>
            <iterate list="envioList" entry="envio">
                <service-call name="mchile.sii.DTECommServices.reenable#EnvioFailedToProcess" in-map="[envioId:envio.envioId]" transaction="force-new"/>
            </iterate>
            <service-call name="mchile.sii.DTECommServices.process#PendingEnvioDte" in-map="[envioIdList:envioList.envioId]"/>
        </actions>
    </service>

    <service verb="add" noun="PartyIdsToDteEnvio">
        <actions>
            <entity-find entity-name="mchile.dte.DteEnvio" list="envioList" for-update="true">
                <econditions combine="or">
                    <econdition field-name="issuerPartyId" operator="is-null"/>
                    <econdition field-name="receiverPartyId" operator="is-null"/>
                </econditions>
            </entity-find>
            <entity-find entity-name="mantle.party.PartyRole" list="internalOrgList">
                <econdition field-name="roleTypeId" value="OrgInternal"/>
            </entity-find>
            <entity-find entity-name="mchile.dte.PartyDteParams" list="dtePartyList">
                <econdition field-name="partyId" operator="in" from="internalOrgList.partyId"/>
            </entity-find>
            <set field="dtePartyIdList" from="dtePartyList.partyId"/>
            <set field="enviosSinDocs" from="0"/>
            <iterate list="envioList" entry="envio">
                <set field="expectedDteReceiverPartyId" from="null"/>
                <set field="expectedDteIssuerPartyId" from="null"/>
                <set field="expectedDteReceiverPartyIdValue" from="null"/>
                <set field="expectedDteIssuerPartyIdValue" from="null"/>
                <entity-find entity-name="mchile.dte.DteEnvioAndFiscalTaxDocument" list="dteftdList">
                    <econdition field-name="envioId" from="envio.envioId"/>
                </entity-find>
                <if condition="dteftdList.size() == 0">
                    <message>Envio ${envio.envioTypeEnumId} sin docs: ${envio.envioId}</message>
                    <set field="enviosSinDocs" from="enviosSinDocs+1"/>
                    <continue/>
                </if>
                <if condition="envio.envioTypeEnumId in ['Ftde-RespuestaDte', 'Ftde-EnvioRecibos']"><then>
                    <set field="expectedDteIssuerPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                    <set field="expectedDteReceiverPartyId" from="dteftdList.first.ftdReceiverPartyId"/>
                    <set field="expectedDteIssuerPartyIdValue" from="envio.rutReceptor"/>
                    <set field="expectedDteReceiverPartyIdValue" from="envio.rutEmisor"/>
                    <set field="envioReceiverPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                    <set field="envioIssuerPartyId" from="dteftdList.first.ftdReceiverPartyId"/>
                </then><else-if condition="envio.envioTypeEnumId == 'Ftde-ResultadoEnvio'">
                    <set field="envioReceiverPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                    <set field="expectedDteIssuerPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                    <set field="expectedDteIssuerPartyIdValue" from="envio.rutReceptor"/>
                    <set field="envioIssuerPartyId" from="CL_SII"/>
                </else-if><else-if condition="envio.envioTypeEnumId == 'Ftde-EnvioBoleta'">
                    <if condition="envio.rutReceptor != '60803000-K'"><return error="true" message="Envio Boleta ${envio.envioId} dirigido a receptor distinto del SII"/></if>
                    <set field="envioReceiverPartyId" from="CL_SII"/>
                    <set field="envioIssuerPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                    <set field="expectedDteIssuerPartyIdValue" from="envio.rutEmisor"/>
                    <set field="expectedDteIssuerPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                </else-if><else>
                    <!-- Ftde-EnvioDte -->
                    <if condition="envio.rutReceptor == '60803000-K'"><then>
                        <set field="envioReceiverPartyId" from="CL_SII"/>
                        <set field="envioIssuerPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                        <set field="expectedDteIssuerPartyIdValue" from="envio.rutEmisor"/>
                        <set field="expectedDteIssuerPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                    </then><else>
                        <set field="envioIssuerPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                        <set field="envioReceiverPartyId" from="dteftdList.first.ftdReceiverPartyId"/>
                        <set field="expectedDteIssuerPartyIdValue" from="envio.rutEmisor"/>
                        <set field="expectedDteReceiverPartyIdValue" from="envio.rutReceptor"/>
                        <set field="expectedDteIssuerPartyId" from="dteftdList.first.ftdIssuerPartyId"/>
                        <set field="expectedDteReceiverPartyId" from="dteftdList.first.ftdReceiverPartyId"/>
                    </else></if>
                </else></if>

                <iterate list="dteftdList" entry="dteftd">
                    <if condition="expectedDteIssuerPartyIdValue &amp;&amp; expectedDteIssuerPartyIdValue != dteftd.issuerPartyIdValue">
                        <message type="warning">expectedDteIssuerPartyIdValue for envio ${envio.envioId} and DTE ${dteftd.fiscalTaxDocumentId}: ${expectedDteIssuerPartyIdValue}, is ${dteftd.issuerPartyIdValue}</message>
                    </if>
                    <if condition="expectedDteReceiverPartyIdValue &amp;&amp; expectedDteReceiverPartyIdValue != dteftd.receiverPartyIdValue">
                        <message type="warning">expectedDteReceiverPartyIdValue for envio ${envio.envioId} and DTE ${dteftd.fiscalTaxDocumentId}: ${expectedDteReceiverPartyIdValue}, is ${dteftd.receiverPartyIdValue}</message>
                    </if>
                    <if condition="expectedDteIssuerPartyId &amp;&amp; expectedDteIssuerPartyId != dteftd.ftdIssuerPartyId">
                        <message type="warning">expectedDteIssuerPartyId for envio ${envio.envioId} and DTE ${dteftd.fiscalTaxDocumentId}: ${expectedDteIssuerPartyId}, is ${dteftd.ftdIssuerPartyId}</message>
                    </if>
                    <if condition="expectedDteReceiverPartyId &amp;&amp; expectedDteReceiverPartyId != dteftd.ftdReceiverPartyId">
                        <message type="warning">expectedDteReceiverPartyId for envio ${envio.envioId} and DTE ${dteftd.fiscalTaxDocumentId}: ${expectedDteReceiverPartyId}, is ${dteftd.ftdReceiverPartyId}</message>
                    </if>
                </iterate>
                <log message="Setting envioReceiverPartyId to ${envioReceiverPartyId}"/>
                <set field="envio.receiverPartyId" from="envioReceiverPartyId"/>
                <log message="Setting envioIssuerPartyId to ${envioIssuerPartyId}"/>
                <set field="envio.issuerPartyId" from="envioIssuerPartyId"/>
                <entity-update value-field="envio"/>
            </iterate>
            <log message="Processed ${envioList.size()} envios, ${enviosSinDocs} envíos sin docs"/>
        </actions>
    </service>

    <service verb="resend" noun="XmlDteToReceiver">
        <out-parameters>
            <parameter name="foundEnvios"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.party.PartyRole" list="internalOrgList">
                <econdition field-name="roleTypeId" value="OrgInternal"/>
            </entity-find>
            <entity-find entity-name="mantle.party.PartyIdentification" list="partyIdentList">
                <econdition field-name="partyId" operator="in" from="internalOrgList.partyId"/>
                <econdition field-name="partyIdTypeEnumId" operator="in" value="PtidNationalTaxId,PtidUniqueNationalId"/>
            </entity-find>
            <set field="internalRutList" from="partyIdentList.idValue"/>
            <log message="internalRutList: ${internalRutList}"/>
            <set field="dateThreshold" from="ec.l10n.parseTimestamp('2022-07-12', 'yyyy-MM-dd')"/>
            <entity-find entity-name="mchile.dte.DteEnvio" list="envioList" for-update="true">
                <econdition field-name="envioTypeEnumId" value="Ftde-EnvioDte"/>
                <econdition field-name="rutEmisor" operator="in" from="internalRutList"/>
                <econdition field-name="rutReceptor" operator="not-in" from="internalRutList"/>
                <econdition field-name="rutReceptor" operator="not-equals" value="60803000-K"/>
                <econdition field-name="emailMessageId" operator="is-null"/>
                <econdition field-name="registerDate" operator="greater-equals" from="dateThreshold"/>
                <order-by field-name="registerDate"/>
            </entity-find>
            <set field="foundEnvios" from="envioList.size()"/>
            <iterate list="envioList" entry="envio">
                <log message="Envio ${envio.envioId}, from ${envio.registerDate}"/>
                <set field="envio.statusId" value="Ftde-Created"/>
                <entity-update value-field="envio"/>
            </iterate>
        </actions>
    </service>

    <service verb="update" noun="LastFolioUsed">
        <actions>
            <entity-find entity-name="mchile.dte.Caf" list="cafList" for-update="true">
                <econdition field-name="lastFolioUsed" operator="is-null"/>
            </entity-find>
            <iterate list="cafList" entry="caf">
                <set field="caf.lastFolioUsed" from="caf.siguienteFolio"/>
                <entity-update value-field="caf"/>
            </iterate>
        </actions>
    </service>

    <service verb="find" noun="RepeatedRuts">
        <actions>
            <entity-find entity-name="mantle.party.PartyIdentification" list="idList">
                <econdition field-name="partyIdTypeEnumId" value="PtidNationalTaxId"/>
                <order-by field-name="idValue"/>
            </entity-find>
            <set field="lastId" from="null"/>
            <set field="repeatedByIdValue" from="[:]"/>
            <iterate list="idList" entry="id">
                <if condition="id.idValue == lastId?.idValue">
                    <set field="repeatedList" from="repeatedByIdValue[id.idValue]"/>
                    <if condition="repeatedList == null">
                        <set field="repeatedList" from="[lastId.partyId]"/>
                        <set field="repeatedByIdValue[id.idValue]" from="repeatedList"/>
                    </if>
                    <script>repeatedList.add(id.partyId)</script>
                </if>
                <set field="lastId" from="id"/>
            </iterate>
            <log level="warn" message="Rut repetidos: ${repeatedByIdValue.size()}"/>
            <iterate list="repeatedByIdValue" entry="partyIdList" key="idValue">
                <log message="Repetidos con RUT ${idValue} (${partyIdList.size()}): ${partyIdList.join(', ')}"/>
            </iterate>
        </actions>
    </service>
</services>
