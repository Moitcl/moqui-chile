<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="unscramble" noun="PartyIdentification">
        <actions>
            <entity-find entity-name="mantle.party.PartyIdentification" list="pidList">
                <use-iterator/>
            </entity-find>
            <iterate list="pidList" entry="pid">
                <if condition="pid.idValue.matches('[0-9A-F]+')"><then>
                    <service-call name="update#mantle.party.PartyIdentification" in-map="pid.getMap()+[idValue:org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(pid.idValue, false, ec.entity)]"/>
                    <log message="changing ${pid.idValue} to ${org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(pid.idValue, false, ec.entity)}"/>
                </then><else>
                    <log message="Not changing ${pid.idValue}"/>
                </else></if>
            </iterate>
            <script>pidList.close()</script>
        </actions>
    </service>

    <service verb="unscramble" noun="MothersMaidenName">
        <actions>
            <entity-find entity-name="mantle.party.Person" list="personList">
                <use-iterator/>
            </entity-find>
            <iterate list="personList" entry="person">
                <if condition="person.mothersMaidenName == null"><continue/></if>
                <if condition="person.mothersMaidenName.matches('[0-9A-F]+')"><then>
                    <service-call name="update#mantle.party.Person" in-map="[partyId:person.partyId, mothersMaidenName:org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(person.mothersMaidenName, false, ec.entity)]"/>
                    <log message="changing ${person.mothersMaidenName} to ${org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(person.mothersMaidenName, false, ec.entity)}"/>
                </then><else>
                    <log message="Not changing ${person.mothersMaidenName}"/>
                </else></if>
            </iterate>
        </actions>
    </service>
    
    <service verb="migrate" noun="DteSentAuthStatus">
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList" for-update="true">
                <econdition field-name="sentAuthStatusId" value="Ftd-SentAuth"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <log message="updating ftd ${ftd.fiscalTaxDocumentId}"/>
                <set field="ftd.sentAuthStatusId" value="Ftd-SentAuthAccepted"/>
                <entity-update value-field="ftd"/>
            </iterate>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList" for-update="true">
                <econdition field-name="statusId" value="Ftd-SentAuth"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <log message="updating ftd ${ftd.fiscalTaxDocumentId}"/>
                <set field="ftd.statusId" value="Ftd-Issued"/>
                <entity-update value-field="ftd"/>
            </iterate>
        </actions>
    </service>

    <service verb="add" noun="AmountToFtd">
        <actions>
            <script><![CDATA[
                import java.lang.NumberFormatException
            ]]></script>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentAndContent" list="ftdList">
                <econdition field-name="amount" operator="is-null"/>
                <econdition field-name="statusId" value="Ftd-Issued"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <script><![CDATA[
                    if (ftd.contentLocation) {
                        docRr = ec.resource.getLocationReference(ftd.contentLocation)
                        ftdDoc = new groovy.xml.XmlParser(false, false).parse(docRr.openStream())
                        BigDecimal amount = null
                        try {
                            amount = new BigDecimal(ftdDoc.Documento.Encabezado.Totales.MntTotal.text())
                            ec.service.sync().name("update#mchile.dte.FiscalTaxDocument").parameters([fiscalTaxDocumentId: ftd.fiscalTaxDocumentId, amount: amount]).call()
                        } catch (NumberFormatException e) {
                            ec.message.addError("Error obtaining Total from Ftd ${ftd.fiscalTaxDocumentId}, fiscalTaxDocumentContentId ${ftd.fiscalTaxDocumentContentId}")
                        }
                    }
                    ]]></script>
            </iterate>
        </actions>
    </service>

    <service verb="move" noun="TipoTrasladoToGuiaDespacho">
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentDetail" list="gdList">
                <econdition field-name="fiscalTaxDocumentTypeEnumId" value="Ftdt-52"/>
                <econdition field-name="indTrasladoEnumId" operator="is-null"/>
                <econdition field-name="statusId" value="Ftd-Issued"/>
                <order-by field-name="fiscalTaxDocumentNumber"/>
            </entity-find>
            <log message="Found ${gdList.size()} Guías de Despacho with no indTrasladoEnumId"/>
            <iterate list="gdList" entry="gd">
                <entity-find entity-name="mchile.dte.FiscalTaxDocumentContent" list="xmlList">
                    <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
                    <econdition field-name="fiscalTaxDocumentId" from="gd.fiscalTaxDocumentId"/>
                </entity-find>
                <if condition="xmlList.size() != 1">
                    <return error="true" message="For fiscalTaxDocumentId ${gd.fiscalTaxDocumentId} expected to find 1 XML content, but found ${xmlList.size()}"/>
                </if>
                <set field="gdXmlString" from="ec.resource.getLocationReference(xmlList.first.contentLocation).getText()"/>
                <set field="gdDom" from="new groovy.xml.XmlParser(false, false).parseText(gdXmlString)"/>
                <set field="xmlIndTraslado" from="gdDom.Documento.Encabezado.IdDoc.IndTraslado.text()"/>
                <entity-find entity-name="moqui.basic.Enumeration" list="enumList">
                    <econdition field-name="enumTypeId" value="IndTraslado"/>
                    <econdition field-name="enumCode" from="xmlIndTraslado"/>
                </entity-find>
                <if condition="!enumList"><message error="true">Could not find enum for indTraslado ${xmlIndTraslado}, fiscalTaxDocumentId ${gd.fiscalTaxDocumentId}</message></if>
                <set field="indTrasladoEnumId" from="enumList.first.enumId"/>
                <log message="Asignando IndTraslado para guía ${gd.fiscalTaxDocumentNumber} es ${indTrasladoEnumId}"/>
                <service-call name="store#mchile.dte.GuiaDespacho" in-map="[fiscalTaxDocumentId:gd.fiscalTaxDocumentId, indTrasladoEnumId:indTrasladoEnumId]"/>
            </iterate>
        </actions>
    </service>

    <service verb="check" noun="DateOnFiscalTaxDocument">
        <in-parameters>
            <parameter name="fix" type="Boolean" default="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="mismatchCount"/>
        </out-parameters>
        <actions>
            <script><![CDATA[
                import java.lang.NumberFormatException
                ]]></script>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentAndContent" list="ftdList">
                <econdition field-name="statusId" value="Ftd-Issued"/>
                <econdition field-name="fiscalTaxDocumentContentTypeEnumId" value="Ftdct-Xml"/>
            </entity-find>
            <set field="mismatchCount" from="0"/>
            <iterate list="ftdList" entry="ftd">
                <script><![CDATA[
                    if (ftd.contentLocation) {
                        docRr = ec.resource.getLocationReference(ftd.contentLocation)
                        ftdDoc = new groovy.xml.XmlParser(false, false).parse(docRr.openStream())
                        BigDecimal amount = null
                        Calendar cal = Calendar.instance
                        cal.setTimeInMillis(ftd.date.time)
                        cal.set(Calendar.HOUR_OF_DAY, 0)
                        cal.set(Calendar.MINUTE, 0)
                        cal.set(Calendar.SECOND, 0)
                        cal.set(Calendar.MILLISECOND, 0)
                        ftdDate = new Timestamp(cal.timeInMillis)
                        date = ec.l10n.parseTimestamp(ftdDoc.Documento.Encabezado.IdDoc.FchEmis.text(), 'yyyy-MM-dd')
                        if (date != ftdDate) {
                            mismatchCount++
                            ec.logger.info("Found date mismatch for DTE ${ftd.fiscalTaxDocumentId}, in XML ${date}, in DB ${ftdDate}")
                            if (fix)
                                ec.service.sync().name("update#mchile.dte.FiscalTaxDocument").parameters([fiscalTaxDocumentId: ftd.fiscalTaxDocumentId, date: date]).call()
                        }
                    }
                    ]]></script>
            </iterate>
        </actions>
    </service>

    <service verb="retry" noun="AllEnvioDteFailedToProcess">
        <actions>
            <entity-find entity-name="mchile.dte.DteEnvio" list="envioList">
                <econdition field-name="statusId" value="Ftde-ProcessFailed"/>
            </entity-find>
            <iterate list="envioList" entry="envio">
                <service-call name="mchile.sii.DTECommServices.reenable#EnvioFailedToProcess" in-map="[envioId:envio.envioId]" transaction="force-new"/>
            </iterate>
            <service-call name="mchile.sii.DTECommServices.process#PendingEnvioDte" in-map="[envioIdList:envioList.envioId]"/>
        </actions>
    </service>

</services>