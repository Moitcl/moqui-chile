<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="find" noun="RepeatedRuts">
        <actions>
            <entity-find entity-name="mantle.party.PartyIdentification" list="idList">
                <econdition field-name="partyIdTypeEnumId" value="PtidNationalTaxId"/>
                <order-by field-name="idValue"/>
            </entity-find>
            <set field="lastId" from="null"/>
            <set field="repeatedByIdValue" from="[:]"/>
            <iterate list="idList" entry="id">
                <if condition="id.idValue == lastId?.idValue">
                    <set field="repeatedList" from="repeatedByIdValue[id.idValue]"/>
                    <if condition="repeatedList == null">
                        <set field="repeatedList" from="[lastId.partyId]"/>
                        <set field="repeatedByIdValue[id.idValue]" from="repeatedList"/>
                    </if>
                    <script>repeatedList.add(id.partyId)</script>
                </if>
                <set field="lastId" from="id"/>
            </iterate>
            <log level="warn" message="Rut repetidos: ${repeatedByIdValue.size()}"/>
            <iterate list="repeatedByIdValue" entry="partyIdList" key="idValue">
                <log message="Repetidos con RUT ${idValue} (${partyIdList.size()}): ${partyIdList.join(', ')}"/>
            </iterate>
        </actions>
    </service>

    <service verb="fix" noun="FiscalTaxDocumentSentReceiverStatus">
        <actions>
            <entity-find entity-name="mchile.dte.DteEnvioAndFiscalTaxDocument" list="dteFailedList">
                <econdition field-name="sentRecStatusId" value="Ftd-SentRecFailed"/>
                <select-field field-name="fiscalTaxDocumentId,sentRecStatusId"/>
            </entity-find>
            <entity-find entity-name="mchile.dte.FiscalTaxDocumentEmailMessage" list="dteList">
                <econdition field-name="fiscalTaxDocumentId" operator="in" from="dteFailedList.fiscalTaxDocumentId"/>
            </entity-find>
            <log message="Found ${dteFailedList.size()} DTEs in failed status, with ${dteList.size()} having emailId"/>
            <iterate list="dteList" entry="dte">
                <service-call name="update#mchile.dte.FiscalTaxDocument" in-map="[fiscalTaxDocumentId:dte.fiscalTaxDocumentId, sentRecStatusId:'Ftd-SentRec']"/>
            </iterate>
        </actions>
    </service>

    <service verb="update" noun="UTM">
        <actions>
            <set field="migrationMap" from="[CL_UTM:'CLM', CL_UTA:'CLA']"/>
            <entity-find entity-name="moqui.basic.Uom" list="uomList" for-update="true">
                <econdition field-name="uomId" operator="in" from="migrationMap.keySet()"/>
            </entity-find>
            <service-call name="store#moqui.basic.Uom" in-map="[uomId:'CLM', abbreviation:'UTM', description:'Chilean Unidad Tributaria Mensual', uomTypeEnumId:'UT_CURRENCY_MEASURE']"/>
            <service-call name="store#moqui.basic.Uom" in-map="[uomId:'CLA', abbreviation:'UTA', description:'Chilean Unidad Tributaria Anual', uomTypeEnumId:'UT_CURRENCY_MEASURE']"/>
            <!-- OrderHeader -->
            <set field="orderCount" from="0"/>
            <entity-find entity-name="mantle.order.OrderHeader" list="orderList" for-update="true">
                <econdition field-name="currencyUomId" operator="in" from="migrationMap.keySet()"/>
            </entity-find>
            <iterate list="orderList" entry="order">
                <set field="order.currencyUomId" from="migrationMap[order.currencyUomId]"/>
                <entity-update value-field="order"/>
                <set field="orderCount" from="orderCount+1"/>
            </iterate>
            <!-- Invoice -->
            <entity-find entity-name="mantle.account.invoice.Invoice" list="invoiceList" for-update="true">
                <econdition field-name="currencyUomId" operator="in" from="migrationMap.keySet()"/>
            </entity-find>
            <set field="invoiceCount" from="0"/>
            <iterate list="invoiceList" entry="invoice">
                <set field="invoice.currencyUomId" from="migrationMap[invoice.currencyUomId]"/>
                <entity-update value-field="invoice"/>
                <set field="invoiceCount" from="invoiceCount+1"/>
            </iterate>
            <!-- InvoiceItem (originCurrencyUomId) -->
            <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="invoiceItemList" for-update="true">
                <econdition field-name="originCurrencyUomId" operator="in" from="migrationMap.keySet()"/>
            </entity-find>
            <set field="invoiceItemCount" from="0"/>
            <iterate list="invoiceItemList" entry="invoiceItem">
                <set field="invoiceItem.originCurrencyUomId" from="migrationMap[invoiceItem.originCurrencyUomId]"/>
                <entity-update value-field="invoiceItem"/>
                <set field="invoiceItemCount" from="invoiceItemCount+1"/>
            </iterate>
            <entity-find entity-name="mchile.currency.Exchangerate" list="exchangeRateList" for-update="true">
                <econditions combine="or">
                    <econdition field-name="fromCurrencyUomId" operator="in" from="migrationMap.keySet()"/>
                    <econdition field-name="toCurrencyUomId" operator="in" from="migrationMap.keySet()"/>
                </econditions>
            </entity-find>
            <set field="exchangeRateCount" from="0"/>
            <iterate list="exchangeRateList" entry="exchangeRate">
                <set field="er" from="exchangeRate.getMap()"/>
                <if condition="er.fromCurrencyUomId in migrationMap.keySet()"><set field="er.fromCurrencyUomId" from="migrationMap[er.fromCurrencyUomId]"/></if>
                <if condition="er.toCurrencyUomId in migrationMap.keySet()"><set field="er.toCurrencyUomId" from="migrationMap[er.toCurrencyUomId]"/></if>
                <service-call name="create#mchile.currency.Exchangerate" in-map="er"/>
                <entity-delete value-field="exchangeRate"/>
                <set field="exchangeRateCount" from="exchangeRateCount+1"/>
            </iterate>
            <log message="Updated ${orderCount} orders, ${invoiceCount} invoices, ${invoiceItemCount} invoice items, ${exchangeRateCount} exchange rates (${orderCount+invoiceCount+invoiceItemCount+exchangeRateCount} in total)"/>
            <iterate list="uomList" entry="uom">
                <entity-delete value-field="uom"/>
            </iterate>
            <!-- Re-calculate all orders that are in CLF / CLM currency -->
            <entity-find entity-name="mantle.order.OrderHeaderAndPart" list="orderList">
                <econdition field-name="currencyUomId" operator="in" value="CLF,CLM"/>
            </entity-find>
            <iterate list="orderList" entry="order">
                <log message="Recalculating totals for order ${order.orderId}"/>
                <log message="Order total for order ${order.orderId}: ${order.grandTotal}"/>
                <service-call name="mantle.order.OrderServices.update#OrderPartTotal" in-map="order"/>
                <service-call name="mantle.order.OrderServices.update#OrderHeaderTotal" in-map="order"/>
                <entity-find-one entity-name="mantle.order.OrderHeaderAndPart" value-field="newOrder" auto-field-map="order"/>
                <log message="Order total for order after recalculating ${newOrder.orderId}: ${newOrder.grandTotal}"/>
            </iterate>
        </actions>
    </service>
    
</services>
