<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="unscramble" noun="PartyIdentification">
        <actions>
            <entity-find entity-name="mantle.party.PartyIdentification" list="pidList">
                <use-iterator/>
            </entity-find>
            <iterate list="pidList" entry="pid">
                <if condition="pid.idValue.matches('[0-9A-F]+')"><then>
                    <service-call name="update#mantle.party.PartyIdentification" in-map="pid.getMap()+[idValue:org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(pid.idValue, false, ec.entity)]"/>
                    <log message="changing ${pid.idValue} to ${org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(pid.idValue, false, ec.entity)}"/>
                </then><else>
                    <log message="Not changing ${pid.idValue}"/>
                </else></if>
            </iterate>
            <script>pidList.close()</script>
        </actions>
    </service>

    <service verb="unscramble" noun="MothersMaidenName">
        <actions>
            <entity-find entity-name="mantle.party.Person" list="personList">
                <use-iterator/>
            </entity-find>
            <iterate list="personList" entry="person">
                <if condition="person.mothersMaidenName == null"><continue/></if>
                <if condition="person.mothersMaidenName.matches('[0-9A-F]+')"><then>
                    <service-call name="update#mantle.party.Person" in-map="[partyId:person.partyId, mothersMaidenName:org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(person.mothersMaidenName, false, ec.entity)]"/>
                    <log message="changing ${person.mothersMaidenName} to ${org.moqui.impl.entity.EntityJavaUtil.enDeCrypt(person.mothersMaidenName, false, ec.entity)}"/>
                </then><else>
                    <log message="Not changing ${person.mothersMaidenName}"/>
                </else></if>
            </iterate>
        </actions>
    </service>
    
    <service verb="migrate" noun="DteSentAuthStatus">
        <actions>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList" for-update="true">
                <econdition field-name="sentAuthStatusId" value="Ftd-SentAuth"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <log message="updating ftd ${ftd.fiscalTaxDocumentId}"/>
                <set field="ftd.sentAuthStatusId" value="Ftd-SentAuthAccepted"/>
                <entity-update value-field="ftd"/>
            </iterate>
            <entity-find entity-name="mchile.dte.FiscalTaxDocument" list="ftdList" for-update="true">
                <econdition field-name="statusId" value="Ftd-SentAuth"/>
            </entity-find>
            <iterate list="ftdList" entry="ftd">
                <log message="updating ftd ${ftd.fiscalTaxDocumentId}"/>
                <set field="ftd.statusId" value="Ftd-Issued"/>
                <entity-update value-field="ftd"/>
            </iterate>
        </actions>
    </service>

    <service verb="migrate" noun="PartyDteParams">
        <out-parameters>
            <parameter name="updateCount"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.PartyDteParams" list="paramList" for-update="true">
                <econditions combine="or">
                    <econdition field-name="fechaResolucionSii" operator="is-null"/>
                    <econdition field-name="numeroResolucionSii" operator="is-null"/>
                    <econdition field-name="razonSocialEmisor" operator="is-null"/>
                    <econdition field-name="codigoSucursalSii" operator="is-null"/>
                    <econdition field-name="direccionOrigen" operator="is-null"/>
                    <econdition field-name="comunaOrigen" operator="is-null"/>
                    <econdition field-name="nombreContacto" operator="is-null"/>
                </econditions>
            </entity-find>
            <set field="updateCount" from="paramList.size()"/>
            <iterate list="paramList" entry="param">
                <set field="param.fechaResolucionSii" from="param.fchResol"/>
                <set field="param.numeroResolucionSii" from="param.nroResol"/>
                <set field="param.razonSocialEmisor" from="param.rznSocEmisor"/>
                <set field="param.codigoSucursalSii" from="param.cdgSIISucur"/>
                <set field="param.direccionOrigen" from="param.dirOrigen"/>
                <set field="param.comunaOrigen" from="param.cmnaOrigen"/>
                <set field="param.nombreContacto" from="param.nmbContacto"/>
                <entity-update value-field="param"/>
            </iterate>
        </actions>
    </service>

    <service verb="migrate" noun="Caf">
        <out-parameters>
            <parameter name="updateCount"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mchile.dte.Caf" list="cafList" for-update="true">
                <econditions combine="or">
                    <econdition field-name="publicKey" operator="is-null"/>
                    <econdition field-name="publicKey" value=""/>
                    <econdition field-name="privateKey" operator="is-null"/>
                    <econdition field-name="privateKey" value=""/>
                    <econdition field-name="keyType" operator="is-null"/>
                    <econdition field-name="keyType" value=""/>
                    <econdition field-name="cafFragment" operator="is-null"/>
                    <econdition field-name="cafFragment" value=""/>
                    <econdition field-name="cafFragment" value="[]"/>
                    <econdition field-name="siguienteFolio" operator="is-null"/>
                    <econdition field-name="razonSocial" operator="is-null"/>
                </econditions>
            </entity-find>
            <set field="updateCount" from="cafList.size()"/>
            <iterate list="cafList" entry="caf">
                <!-- parse -->
                <set field="autorizacion" from="new groovy.util.XmlParser(false, false).parseText(caf.cafData)"/>
                <set field="privateKey" from="autorizacion.RSASK.text()"/>
                <set field="publicKey" from="autorizacion.RSAPUBK.text()"/>
                <set field="keyType" value="RSA"/>
                <script><![CDATA[
                    StringWriter writer = new StringWriter()
                    nodePrinter = new groovy.util.XmlNodePrinter(new PrintWriter(writer))
                    nodePrinter.setPreserveWhitespace(true)
                    nodePrinter.print(autorizacion.CAF[0])
                    writer.close()
                    cafFragment = writer.toString()
                ]]></script>
                <set field="caf.siguienteFolio" from="caf.ultimoFolio"/>
                <set field="caf.publicKey" from="publicKey"/>
                <set field="caf.privateKey" from="privateKey"/>
                <set field="caf.keyType" from="keyType"/>
                <set field="caf.cafFragment" from="cafFragment"/>
                <set field="caf.razonSocial" from="autorizacion.CAF.DA.RS.text()"/>
                <entity-update value-field="caf"/>
            </iterate>
        </actions>
    </service>

</services>