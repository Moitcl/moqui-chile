<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="calculate" noun="SalesTaxChile">
        <implements service="mantle.other.TaxServices.calculate#SalesTax"/>
        <actions>
            <script>
                referenceParts = referenceId.split(':')
                orderId = referenceParts[0]
                orderPartSeqId = referenceParts[1]
            </script>
            <set field="taxResults" from="[]"/>
            <service-call name="mchile.TaxServices.get#VatTaxRate" out-map="vatTaxMap"/>
            <set field="vatTaxRate" from="vatTaxMap.taxRate"/>
            <!--
            <set field="vatBaseMap" from="[taxRate:vatTaxRate, taxAuthorityId:'CL_SII', taxName:'IVA', itemTypeEnumId:'ItemVatTax', taxQuantity:1]"/>
            -->
            <set field="totalNeto" from="0" type="BigDecimal"/>
            <iterate list="items" entry="item">
                <if condition="item.productId">
                    <entity-find-count entity-name="mantle.product.category.ProductCategoryMember" count-field="exentoCount">
                        <econdition field-name="productId" from="item.productId"/>
                        <econdition field-name="productCategoryId" value="ClVatTaxExento"/>
                        <date-filter/>
                    </entity-find-count>
                    <if condition="exentoCount > 0"><continue/></if>
                </if>
                <set field="totalNeto" from="totalNeto+item.itemTotal"/>
            </iterate>
            <set field="vatAmount" from="(totalNeto*vatTaxRate).setScale(0, java.math.RoundingMode.HALF_UP)"/>
            <service-call name="create#mantle.order.OrderItem" out-map="context"
                          in-map="[orderId:orderId, orderPartSeqId:orderPartSeqId, itemTypeEnumId:'ItemVatTax', quantity:1,
                                unitAmount:vatAmount, sourcePercentage:(vatTaxRate*100.0),
                                taxAuthorityId:'CL_SII', itemDescription:'IVA']"/>
        </actions>
    </service>

    <service verb="get" noun="VatTaxRate">
        <in-parameters>
            <parameter name="date" type="Timestamp" default="ec.user.nowTimestamp"/>
        </in-parameters>
        <out-parameters>
            <parameter name="taxRate" type="BigDecimal"/>
        </out-parameters>
        <actions>
            <set field="taxRate" from="0.19"/>
        </actions>
    </service>

    <service verb="calculate" noun="NetFromGrossPrice">
        <in-parameters>
            <parameter name="grossPrice" type="BigDecimal" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="netPrice" type="BigDecimal"/>
        </out-parameters>
        <actions>
            <service-call name="mchile.TaxServices.get#VatTaxRate" out-map="context"/>
            <script><![CDATA[
                grossPrice = grossPrice.setScale(0, BigDecimal.ROUND_HALF_UP)
                netPrice = (grossPrice / (taxRate + 1)).setScale(0, BigDecimal.ROUND_HALF_UP)
                calculatedGrossPrice = (netPrice * (taxRate + 1)).setScale(0, BigDecimal.ROUND_HALF_UP)
                if (calculatedGrossPrice != grossPrice) {
                    if (calculatedGrossPrice < grossPrice)
                        netPrice += 1
                    else if (calculatedGrossPrice > grossPrice)
                        netPrice -= 1
                    calculatedGrossPrice = (netPrice * (taxRate + 1)).setScale(0, BigDecimal.ROUND_HALF_UP)
                    if (calculatedGrossPrice != grossPrice) {
                        netPrice = (grossPrice / (taxRate + 1)).setScale(1, BigDecimal.ROUND_HALF_UP)
                    }
                }
            ]]></script>
        </actions>
    </service>

    <service verb="calculate" noun="SalesTaxForInvoice">
        <in-parameters>
            <parameter name="invoiceId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="mantle.account.invoice.Invoice" value-field="invoice"/>
            <entity-delete-by-condition entity-name="mantle.account.invoice.InvoiceItem">
                <econdition field-name="invoiceId"/>
                <econdition field-name="itemTypeEnumId" operator="in" value="ItemSalesTax,ItemVatTax"/>
            </entity-delete-by-condition>
            <entity-find entity-name="mantle.account.invoice.InvoiceItem" list="itemList">
                <econdition field-name="invoiceId"/>
            </entity-find>
            <set field="totalNeto" from="0" type="BigDecimal"/>
            <iterate list="itemList" entry="item">
                <if condition="item.productId">
                    <entity-find-count entity-name="mantle.product.category.ProductCategoryMember" count-field="exentoCount">
                        <econdition field-name="productId" from="item.productId"/>
                        <econdition field-name="productCategoryId" value="ClVatTaxExento"/>
                        <date-filter valid-date="invoice.invoiceDate"/>
                    </entity-find-count>
                    <if condition="exentoCount > 0"><continue/></if>
                </if>
                <set field="totalNeto" from="totalNeto + ((item.quantity?:1) *  (item.amount?:0))"/>
            </iterate>
            <service-call name="mchile.TaxServices.get#VatTaxRate" out-map="vatTaxMap"/>
            <set field="vatTaxRate" from="vatTaxMap.taxRate"/>
            <set field="vatAmount" from="(totalNeto*vatTaxRate).setScale(0, java.math.RoundingMode.HALF_UP)"/>
            <service-call name="create#mantle.account.invoice.InvoiceItem" out-map="context"
                          in-map="[invoiceId:invoiceId, itemTypeEnumId:'ItemVatTax', quantity:1, amount:vatAmount, taxAuthorityId:'CL_SII', description:'IVA']"/>
        </actions>
    </service>

</services>