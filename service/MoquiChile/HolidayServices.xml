<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <!-- Información detallada: http://www.feriados.cl/ -->

    <service verb="calculate" noun="Holiday" type="interface">
        <in-parameters><parameter name="year" required="true" type="Integer"/></in-parameters>
        <out-parameters>
            <parameter name="month" type="Integer"/>
            <parameter name="day" type="Integer"/>
        </out-parameters>
    </service>

    <service verb="calculate" noun="Holidays">
        <in-parameters><parameter name="year" required="true" type="Integer"/></in-parameters>
        <actions>
            <entity-find entity-name="moqui.basic.Enumeration" list="holidays">
                <econdition field-name="enumTypeId" value="HolidaysChile"/>
            </entity-find>
            <!--<log level="warn" message="Holidays for year ${year} (${holidays.size()})"/>-->
            <script>
                cal = Calendar.instance
                cal.clear()
                cal.set(Calendar.YEAR, year)
            </script>
            <iterate list="holidays" entry="holiday">
                <set field="serviceName" value="MoquiChile.HolidayServices.calculate#${holiday.enumId}"/>
                <set field="out" from="[:]"/>
                <service-call name="${serviceName}" in-map="context" out-map="out"/>
                <if condition="out.day &amp;&amp; out.month">
                    <!--<log level="warn" message="${holiday.description}: ${out.day}/${out.month}"/>-->
                    <set field="id" value="CHL_${year}_${holiday.enumId}"/>
                    <script>
                        cal.set(Calendar.MONTH, out.month-1)
                        cal.set(Calendar.DAY_OF_MONTH, out.day)
                    </script>
                    <set field="workEffortMap"
                         from="[workEffortId:id, purposeEnumId:'WepHoliday', workEffortTypeEnumId:'WetEvent',
                                visibilityEnumId:'WevAllUsers', workEffortName:holiday.description,
                                allDayStart:cal.time]"/>
                    <service-call name="store#mantle.work.effort.WorkEffort" in-map="workEffortMap"/>
                </if>
            </iterate>
        </actions>
    </service>

    <service verb="calculate" noun="HChlANVO">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Leyes 2.977 y 19.973 -->
        <actions>
            <set field="month" from="1"/>
            <set field="day" from="1"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChl2ENE">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- 2 de Enero si 1 de Enero cae en día domingo -->
        <!-- Ley 20.983 -->
        <actions>
            <script><![CDATA[
                cal = Calendar.instance
                cal.set(year, 0, 1)
                if (cal.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY) {
                    month = 1
                    day = 2
                }
            ]]></script>
        </actions>
    </service>

    <service verb="calculate" noun="EasterSundayDate">
        <in-parameters>
            <parameter name="year" type="Integer"/>
            <parameter name="daysPrevious" type="Integer"/>
        </in-parameters>
        <out-parameters>
            <parameter name="month" type="Integer"/>
            <parameter name="day" type="Integer"/>
        </out-parameters>
        <!-- Usando Anonymous Gregorian algorithm (Meeus/Jones/Butcher), funciona
             para años entre 1900 y 2199 inclusive -->
        <actions><script><![CDATA[
            int a = year % 19;
	        int b = year / 100;
	        int c = year % 100;
	        int d = b / 4;
        	int e = b % 4;
        	int f = (b + 8) / 25;
	        int g = (b - f + 1) / 3;
	        int h = (19 * a + b - d - g + 15) % 30;
	        int i = c / 4;
	        int k = c % 4;
	        int l = (32 + 2 * e + 2 * i - h - k) % 7;
	        int m = (a + 11 * h + 22 * l) / 451;
	        int n = (h + l - 7 * m + 114) / 31;
	        int p = (h + l - 7 * m + 114) % 31;
	        Calendar easterSundayDate = GregorianCalendar.getInstance();
	        easterSundayDate.clear();
	        easterSundayDate.set(year, n - 1, p + 1);
	        month = easterSundayDate.get(Calendar.MONTH) + 1
	        day = easterSundayDate.get(Calendar.MONTH)
            easterSundayDate.add(Calendar.DAY_OF_MONTH, -daysPrevious)
	        month = easterSundayDate.get(Calendar.MONTH) + 1
	        day = easterSundayDate.get(Calendar.DAY_OF_MONTH)
        ]]></script></actions>
    </service>

    <service verb="calculate" noun="HChlVSTO">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <actions>
            <set field="daysPrevious" from="2"/>
            <service-call name="MoquiChile.HolidayServices.calculate#EasterSundayDate" in-map="context"
                          out-map="context"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlSSTO">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <actions>
            <set field="daysPrevious" from="1"/>
            <service-call name="MoquiChile.HolidayServices.calculate#EasterSundayDate" in-map="context"
                          out-map="context"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlTBJO">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Ley 19.973 (Código del Trabajo) -->
        <actions>
            <set field="month" from="5"/>
            <set field="day" from="1"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlGNAV">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Ley 2.977 -->
        <actions>
            <set field="month" from="5"/>
            <set field="day" from="21"/>
        </actions>
    </service>

    <service verb="apply" noun="Ley19668">
        <in-parameters>
            <parameter name="day" type="Integer" required="true"/>
            <parameter name="month" type="Integer" required="true"/>
            <parameter name="year" type="Integer" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="day" type="Integer"/>
            <parameter name="month" type="Integer"/>
        </out-parameters>
        <!-- Trasládanse los feriados correspondientes al 29 de junio, día de San Pedro y San
             Pablo; 12 de octubre, día del descubrimiento de dos mundos; a los días lunes de
             la semana en que ocurren, en caso de corresponder a día martes, miércoles o
             jueves, o los días lunes de la semana siguiente, en caso de corresponder a día
             viernes.
        -->
        <actions>
            <script><![CDATA[
                cal = Calendar.instance
                cal.set(year, month-1, day)
                dow = cal.get(Calendar.DAY_OF_WEEK)
                switch (dow) {
                    case Calendar.TUESDAY:
                        incrementDays = -1
                        break
                    case Calendar.WEDNESDAY:
                        incrementDays = -2
                        break
                    case Calendar.THURSDAY:
                        incrementDays = -3
                        break
                    case Calendar.FRIDAY:
                        incrementDays = 3
                        break
                    default:
                        incrementDays = 0
                        break
                }
                cal.add(Calendar.DAY_OF_MONTH, incrementDays)
                month = cal.get(Calendar.MONTH) + 1
                day = cal.get(Calendar.DAY_OF_MONTH)
            ]]></script>
        </actions>
    </service>

    <service verb="calculate" noun="HChlPEPA">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Leyes 2.977, 18.432, 19.668 -->
        <actions>
            <service-call name="MoquiChile.HolidayServices.apply#Ley19668" in-map="[year:year, day:29, month:6]"
                          out-map="context"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlVICA">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Ley 20.148 -->
        <actions>
            <set field="month" from="7"/>
            <set field="day" from="16"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlASVI">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Ley 2.977 -->
        <actions>
            <set field="month" from="8"/>
            <set field="day" from="15"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlINDE">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Leyes 2.977, 19.973 -->
        <actions>
            <set field="month" from="9"/>
            <set field="day" from="18"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlINDA">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Ley 20.215
             En cada año calendario que los días 18 y 19 de septiembre sean días martes y miércoles,
             respectivamente, o miércoles y jueves, respectivamente, será feriado el día lunes 17 o
             el día viernes 20 de dicho mes, según el caso.
         -->
        <actions>
            <script><![CDATA[
                cal = Calendar.instance
                cal.set(year, 8, 18)
                dow = cal.get(Calendar.DAY_OF_WEEK)
                if (dow == Calendar.TUESDAY) {
                    month = 9
                    day = 17
                } else if (dow == Calendar.WEDNESDAY) {
                    month = 9
                    day = 20
                }
            ]]></script>
        </actions>
    </service>

    <service verb="calculate" noun="HChlGLEJ">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Leyes 2.977, 20.629 -->
        <actions>
            <set field="month" from="9"/>
            <set field="day" from="19"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChl2MDO">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Leyes 2.977, 18.432, 19.668 -->
        <actions>
            <service-call name="MoquiChile.HolidayServices.apply#Ley19668" in-map="[year:year, day:12, month:10]"
                          out-map="context"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlIGEV">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Ley 20.299
        "Artículo 1°.- Declárase feriado el día 31 de octubre, por conmemorarse el Día Nacional de las Iglesias Evangélicas y Protestantes.

     Artículo 2°.- Trasládase el feriado señalado en el artículo anterior al día viernes de la misma semana en caso de corresponder el 31 de octubre a día miércoles, y trasládase al día viernes de la semana inmediatamente anterior en caso de corresponder dicha fecha a día martes.".
         -->
        <actions>
            <script><![CDATA[
                cal = Calendar.instance
                cal.set(year, 9, 31)
                dow = cal.get(Calendar.DAY_OF_WEEK)
                if (dow == Calendar.TUESDAY) incDays = -4
                else if (dow == Calendar.WEDNESDAY) incDays = 2
                else incDays = 0
                cal.add(Calendar.DAY_OF_MONTH, incDays)
                month = cal.get(Calendar.MONTH) + 1
                day = cal.get(Calendar.DAY_OF_MONTH)
            ]]></script>
        </actions>
    </service>

    <service verb="calculate" noun="HChlTDST">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Ley 2.977 -->
        <actions>
            <set field="month" from="11"/>
            <set field="day" from="1"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlICON">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Ley 2.977 -->
        <actions>
            <set field="month" from="12"/>
            <set field="day" from="8"/>
        </actions>
    </service>

    <service verb="calculate" noun="HChlNAVI">
        <implements service="MoquiChile.HolidayServices.calculate#Holiday"/>
        <!-- Leyes 2.977, 19.973 -->
        <actions>
            <set field="month" from="12"/>
            <set field="day" from="25"/>
        </actions>
    </service>

</services>